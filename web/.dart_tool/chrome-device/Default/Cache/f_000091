define(['dart_sdk', 'packages/flutter/src/foundation/debug.dart', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/rendering/custom_layout.dart', 'packages/flutter/src/painting/placeholder_span.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/widgets/list_wheel_scroll_view.dart', 'packages/flutter/src/painting/binding.dart', 'packages/flutter/src/cupertino/debug.dart', 'packages/flutter/src/painting/alignment.dart', 'packages/flutter/src/cupertino/picker.dart', 'packages/flutter/src/animation/curves.dart', 'packages/flutter/src/scheduler/binding.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/painting/strut_style.dart', 'packages/flutter/src/rendering/paragraph.dart', 'packages/flutter/src/cupertino/text_theme.dart', 'packages/flutter/src/widgets/layout_builder.dart'], (function load__packages__flutter__src__cupertino__date_picker_dart(dart_sdk, packages__flutter__src__foundation__debug$46dart, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__rendering__custom_layout$46dart, packages__flutter__src__painting__placeholder_span$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__widgets__list_wheel_scroll_view$46dart, packages__flutter__src__painting__binding$46dart, packages__flutter__src__cupertino__debug$46dart, packages__flutter__src__painting__alignment$46dart, packages__flutter__src__cupertino__picker$46dart, packages__flutter__src__animation__curves$46dart, packages__flutter__src__scheduler__binding$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__painting__strut_style$46dart, packages__flutter__src__rendering__paragraph$46dart, packages__flutter__src__cupertino__text_theme$46dart, packages__flutter__src__widgets__layout_builder$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const math = dart_sdk.math;
  const _internal = dart_sdk._internal;
  const _js_helper = dart_sdk._js_helper;
  const _interceptors = dart_sdk._interceptors;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const assertions = packages__flutter__src__foundation__debug$46dart.src__foundation__assertions;
  const box = packages__flutter__src__rendering__layer$46dart.src__rendering__box;
  const custom_layout = packages__flutter__src__rendering__custom_layout$46dart.src__rendering__custom_layout;
  const text_painter = packages__flutter__src__painting__placeholder_span$46dart.src__painting__text_painter;
  const text_span = packages__flutter__src__painting__placeholder_span$46dart.src__painting__text_span;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const notification_listener = packages__flutter__src__widgets__widget_span$46dart.src__widgets__notification_listener;
  const scroll_notification = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_notification;
  const text$ = packages__flutter__src__widgets__widget_span$46dart.src__widgets__text;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const container = packages__flutter__src__widgets__widget_span$46dart.src__widgets__container;
  const media_query = packages__flutter__src__widgets__widget_span$46dart.src__widgets__media_query;
  const list_wheel_scroll_view = packages__flutter__src__widgets__list_wheel_scroll_view$46dart.src__widgets__list_wheel_scroll_view;
  const binding = packages__flutter__src__painting__binding$46dart.src__painting__binding;
  const localizations = packages__flutter__src__cupertino__debug$46dart.src__cupertino__localizations;
  const alignment = packages__flutter__src__painting__alignment$46dart.src__painting__alignment;
  const picker = packages__flutter__src__cupertino__picker$46dart.src__cupertino__picker;
  const curves = packages__flutter__src__animation__curves$46dart.src__animation__curves;
  const binding$ = packages__flutter__src__scheduler__binding$46dart.src__scheduler__binding;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const text_style = packages__flutter__src__painting__strut_style$46dart.src__painting__text_style;
  const paragraph = packages__flutter__src__rendering__paragraph$46dart.src__rendering__paragraph;
  const theme = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__theme;
  const colors = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__colors;
  const layout_builder = packages__flutter__src__widgets__layout_builder$46dart.src__widgets__layout_builder;
  var date_picker = Object.create(dart.library);
  var $length = dartx.length;
  var $_get = dartx._get;
  var $modulo = dartx['%'];
  var $runtimeType = dartx.runtimeType;
  var $truncate = dartx.truncate;
  var $clear = dartx.clear;
  var $_set = dartx._set;
  var $add = dartx.add;
  var $insert = dartx.insert;
  var $map = dartx.map;
  var $toList = dartx.toList;
  dart._checkModuleNullSafetyMode(false);
  var T = {
    VoidTobool: () => (T.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))(),
    CupertinoDatePickerModeL: () => (T.CupertinoDatePickerModeL = dart.constFn(dart.legacy(date_picker.CupertinoDatePickerMode)))(),
    _PickerColumnTypeL: () => (T._PickerColumnTypeL = dart.constFn(dart.legacy(date_picker._PickerColumnType)))(),
    IdentityMapOfint$double: () => (T.IdentityMapOfint$double = dart.constFn(_js_helper.IdentityMap$(core.int, core.double)))(),
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    NotificationListenerOfScrollNotification: () => (T.NotificationListenerOfScrollNotification = dart.constFn(notification_listener.NotificationListener$(scroll_notification.ScrollNotification)))(),
    ScrollNotificationTobool: () => (T.ScrollNotificationTobool = dart.constFn(dart.fnType(core.bool, [scroll_notification.ScrollNotification])))(),
    intTovoid: () => (T.intTovoid = dart.constFn(dart.fnType(dart.void, [core.int])))(),
    _LocationL: () => (T._LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))(),
    WidgetN: () => (T.WidgetN = dart.constFn(dart.nullable(framework.Widget)))(),
    BuildContextAndintToWidgetN: () => (T.BuildContextAndintToWidgetN = dart.constFn(dart.fnType(T.WidgetN(), [framework.BuildContext, core.int])))(),
    ListOfWidget: () => (T.ListOfWidget = dart.constFn(core.List$(framework.Widget)))(),
    intToWidget: () => (T.intToWidget = dart.constFn(dart.fnType(framework.Widget, [core.int])))(),
    DurationTovoid: () => (T.DurationTovoid = dart.constFn(dart.fnType(dart.void, [core.Duration])))(),
    JSArrayOfdouble: () => (T.JSArrayOfdouble = dart.constFn(_interceptors.JSArray$(core.double)))(),
    BuildContextAndWidgetNToWidget: () => (T.BuildContextAndWidgetNToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T.WidgetN()])))(),
    doubleAndFnAndWidgetToWidget: () => (T.doubleAndFnAndWidgetToWidget = dart.constFn(dart.fnType(framework.Widget, [core.double, T.BuildContextAndWidgetNToWidget(), framework.Widget])))(),
    JSArrayOfdoubleAndFnAndWidgetToWidget: () => (T.JSArrayOfdoubleAndFnAndWidgetToWidget = dart.constFn(_interceptors.JSArray$(T.doubleAndFnAndWidgetToWidget())))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    BuildContextAndWidgetNToContainer: () => (T.BuildContextAndWidgetNToContainer = dart.constFn(dart.fnType(container.Container, [framework.BuildContext, T.WidgetN()])))(),
    CupertinoTimerPickerModeL: () => (T.CupertinoTimerPickerModeL = dart.constFn(dart.legacy(date_picker.CupertinoTimerPickerMode)))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    intToString: () => (T.intToString = dart.constFn(dart.fnType(core.String, [core.int])))(),
    intToSemantics: () => (T.intToSemantics = dart.constFn(dart.fnType(basic.Semantics, [core.int])))(),
    NotificationListenerOfScrollEndNotification: () => (T.NotificationListenerOfScrollEndNotification = dart.constFn(notification_listener.NotificationListener$(scroll_notification.ScrollEndNotification)))(),
    ScrollEndNotificationTobool: () => (T.ScrollEndNotificationTobool = dart.constFn(dart.fnType(core.bool, [scroll_notification.ScrollEndNotification])))(),
    WidgetToExpanded: () => (T.WidgetToExpanded = dart.constFn(dart.fnType(basic.Expanded, [framework.Widget])))(),
    BuildContextAndBoxConstraintsToMediaQuery: () => (T.BuildContextAndBoxConstraintsToMediaQuery = dart.constFn(dart.fnType(media_query.MediaQuery, [framework.BuildContext, box.BoxConstraints])))()
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T);
  var S = {
    _: () => S
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: date_picker.CupertinoDatePickerMode.prototype,
        [_name$]: "CupertinoDatePickerMode.time",
        index: 0
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: date_picker.CupertinoDatePickerMode.prototype,
        [_name$]: "CupertinoDatePickerMode.date",
        index: 1
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: date_picker.CupertinoDatePickerMode.prototype,
        [_name$]: "CupertinoDatePickerMode.dateAndTime",
        index: 2
      });
    },
    get C3() {
      return C[3] = dart.constList([C[0] || CT.C0, C[1] || CT.C1, C[2] || CT.C2], T.CupertinoDatePickerModeL());
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: date_picker._PickerColumnType.prototype,
        [_name$]: "_PickerColumnType.dayOfMonth",
        index: 0
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: date_picker._PickerColumnType.prototype,
        [_name$]: "_PickerColumnType.month",
        index: 1
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: date_picker._PickerColumnType.prototype,
        [_name$]: "_PickerColumnType.year",
        index: 2
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: date_picker._PickerColumnType.prototype,
        [_name$]: "_PickerColumnType.date",
        index: 3
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: date_picker._PickerColumnType.prototype,
        [_name$]: "_PickerColumnType.hour",
        index: 4
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: date_picker._PickerColumnType.prototype,
        [_name$]: "_PickerColumnType.minute",
        index: 5
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: date_picker._PickerColumnType.prototype,
        [_name$]: "_PickerColumnType.dayPeriod",
        index: 6
      });
    },
    get C11() {
      return C[11] = dart.constList([C[4] || CT.C4, C[5] || CT.C5, C[6] || CT.C6, C[7] || CT.C7, C[8] || CT.C8, C[9] || CT.C9, C[10] || CT.C10], T._PickerColumnTypeL());
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 18,
        [_Location_line]: 718,
        [_Location_file]: null
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 28,
        [_Location_line]: 718,
        [_Location_file]: null
      });
    },
    get C13() {
      return C[13] = dart.constList([C[14] || CT.C14, C[15] || CT.C15], T._LocationL());
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[13] || CT.C13,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 718,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollController",
        [_Location_column]: 9,
        [_Location_line]: 681,
        [_Location_file]: null
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offAxisFraction",
        [_Location_column]: 9,
        [_Location_line]: 682,
        [_Location_file]: null
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "itemExtent",
        [_Location_column]: 9,
        [_Location_line]: 683,
        [_Location_file]: null
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "useMagnifier",
        [_Location_column]: 9,
        [_Location_line]: 684,
        [_Location_file]: null
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "magnification",
        [_Location_column]: 9,
        [_Location_line]: 685,
        [_Location_file]: null
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 9,
        [_Location_line]: 686,
        [_Location_file]: null
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "squeeze",
        [_Location_column]: 9,
        [_Location_line]: 687,
        [_Location_file]: null
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSelectedItemChanged",
        [_Location_column]: 9,
        [_Location_line]: 688,
        [_Location_file]: null
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "itemBuilder",
        [_Location_column]: 9,
        [_Location_line]: 691,
        [_Location_file]: null
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectionOverlay",
        [_Location_column]: 9,
        [_Location_line]: 721,
        [_Location_file]: null
      });
    },
    get C17() {
      return C[17] = dart.constList([C[18] || CT.C18, C[19] || CT.C19, C[20] || CT.C20, C[21] || CT.C21, C[22] || CT.C22, C[23] || CT.C23, C[24] || CT.C24, C[25] || CT.C25, C[26] || CT.C26, C[27] || CT.C27], T._LocationL());
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[17] || CT.C17,
        [_Location_name]: null,
        [_Location_column]: 30,
        [_Location_line]: 680,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNotification",
        [_Location_column]: 7,
        [_Location_line]: 670,
        [_Location_file]: null
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 680,
        [_Location_file]: null
      });
    },
    get C29() {
      return C[29] = dart.constList([C[30] || CT.C30, C[31] || CT.C31], T._LocationL());
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[29] || CT.C29,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 669,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 3600000000.0
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 300000
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 29,
        [_Location_line]: 798,
        [_Location_file]: null
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "semanticsLabel",
        [_Location_column]: 15,
        [_Location_line]: 799,
        [_Location_file]: null
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 15,
        [_Location_line]: 800,
        [_Location_file]: null
      });
    },
    get C35() {
      return C[35] = dart.constList([C[36] || CT.C36, C[37] || CT.C37, C[38] || CT.C38], T._LocationL());
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[35] || CT.C35,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 797,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollController",
        [_Location_column]: 9,
        [_Location_line]: 758,
        [_Location_file]: null
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offAxisFraction",
        [_Location_column]: 9,
        [_Location_line]: 759,
        [_Location_file]: null
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "itemExtent",
        [_Location_column]: 9,
        [_Location_line]: 760,
        [_Location_file]: null
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "useMagnifier",
        [_Location_column]: 9,
        [_Location_line]: 761,
        [_Location_file]: null
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "magnification",
        [_Location_column]: 9,
        [_Location_line]: 762,
        [_Location_file]: null
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 9,
        [_Location_line]: 763,
        [_Location_file]: null
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "squeeze",
        [_Location_column]: 9,
        [_Location_line]: 764,
        [_Location_file]: null
      });
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSelectedItemChanged",
        [_Location_column]: 9,
        [_Location_line]: 765,
        [_Location_file]: null
      });
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 791,
        [_Location_file]: null
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "looping",
        [_Location_column]: 9,
        [_Location_line]: 804,
        [_Location_file]: null
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectionOverlay",
        [_Location_column]: 9,
        [_Location_line]: 805,
        [_Location_file]: null
      });
    },
    get C40() {
      return C[40] = dart.constList([C[41] || CT.C41, C[42] || CT.C42, C[43] || CT.C43, C[44] || CT.C44, C[45] || CT.C45, C[46] || CT.C46, C[47] || CT.C47, C[48] || CT.C48, C[49] || CT.C49, C[50] || CT.C50, C[51] || CT.C51], T._LocationL());
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[40] || CT.C40,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 757,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNotification",
        [_Location_column]: 7,
        [_Location_line]: 747,
        [_Location_file]: null
      });
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 757,
        [_Location_file]: null
      });
    },
    get C53() {
      return C[53] = dart.constList([C[54] || CT.C54, C[55] || CT.C55], T._LocationL());
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[53] || CT.C53,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 746,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 29,
        [_Location_line]: 848,
        [_Location_file]: null
      });
    },
    get C59() {
      return C[59] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "semanticsLabel",
        [_Location_column]: 15,
        [_Location_line]: 849,
        [_Location_file]: null
      });
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 15,
        [_Location_line]: 850,
        [_Location_file]: null
      });
    },
    get C57() {
      return C[57] = dart.constList([C[58] || CT.C58, C[59] || CT.C59, C[60] || CT.C60], T._LocationL());
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[57] || CT.C57,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 847,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollController",
        [_Location_column]: 9,
        [_Location_line]: 823,
        [_Location_file]: null
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offAxisFraction",
        [_Location_column]: 9,
        [_Location_line]: 824,
        [_Location_file]: null
      });
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "itemExtent",
        [_Location_column]: 9,
        [_Location_line]: 825,
        [_Location_file]: null
      });
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "useMagnifier",
        [_Location_column]: 9,
        [_Location_line]: 826,
        [_Location_file]: null
      });
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "magnification",
        [_Location_column]: 9,
        [_Location_line]: 827,
        [_Location_file]: null
      });
    },
    get C68() {
      return C[68] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 9,
        [_Location_line]: 828,
        [_Location_file]: null
      });
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "squeeze",
        [_Location_column]: 9,
        [_Location_line]: 829,
        [_Location_file]: null
      });
    },
    get C70() {
      return C[70] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSelectedItemChanged",
        [_Location_column]: 9,
        [_Location_line]: 830,
        [_Location_file]: null
      });
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 831,
        [_Location_file]: null
      });
    },
    get C72() {
      return C[72] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "looping",
        [_Location_column]: 9,
        [_Location_line]: 854,
        [_Location_file]: null
      });
    },
    get C73() {
      return C[73] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectionOverlay",
        [_Location_column]: 9,
        [_Location_line]: 855,
        [_Location_file]: null
      });
    },
    get C62() {
      return C[62] = dart.constList([C[63] || CT.C63, C[64] || CT.C64, C[65] || CT.C65, C[66] || CT.C66, C[67] || CT.C67, C[68] || CT.C68, C[69] || CT.C69, C[70] || CT.C70, C[71] || CT.C71, C[72] || CT.C72, C[73] || CT.C73], T._LocationL());
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[62] || CT.C62,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 822,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C76() {
      return C[76] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNotification",
        [_Location_column]: 7,
        [_Location_line]: 812,
        [_Location_file]: null
      });
    },
    get C77() {
      return C[77] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 822,
        [_Location_file]: null
      });
    },
    get C75() {
      return C[75] = dart.constList([C[76] || CT.C76, C[77] || CT.C77], T._LocationL());
    },
    get C74() {
      return C[74] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[75] || CT.C75,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 811,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C80() {
      return C[80] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 17,
        [_Location_line]: 890,
        [_Location_file]: null
      });
    },
    get C81() {
      return C[81] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 15,
        [_Location_line]: 892,
        [_Location_file]: null
      });
    },
    get C79() {
      return C[79] = dart.constList([C[80] || CT.C80, C[81] || CT.C81], T._LocationL());
    },
    get C78() {
      return C[78] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[79] || CT.C79,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 888,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C84() {
      return C[84] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollController",
        [_Location_column]: 9,
        [_Location_line]: 873,
        [_Location_file]: null
      });
    },
    get C85() {
      return C[85] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offAxisFraction",
        [_Location_column]: 9,
        [_Location_line]: 874,
        [_Location_file]: null
      });
    },
    get C86() {
      return C[86] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "itemExtent",
        [_Location_column]: 9,
        [_Location_line]: 875,
        [_Location_file]: null
      });
    },
    get C87() {
      return C[87] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "useMagnifier",
        [_Location_column]: 9,
        [_Location_line]: 876,
        [_Location_file]: null
      });
    },
    get C88() {
      return C[88] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "magnification",
        [_Location_column]: 9,
        [_Location_line]: 877,
        [_Location_file]: null
      });
    },
    get C89() {
      return C[89] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 9,
        [_Location_line]: 878,
        [_Location_file]: null
      });
    },
    get C90() {
      return C[90] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "squeeze",
        [_Location_column]: 9,
        [_Location_line]: 879,
        [_Location_file]: null
      });
    },
    get C91() {
      return C[91] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSelectedItemChanged",
        [_Location_column]: 9,
        [_Location_line]: 880,
        [_Location_file]: null
      });
    },
    get C92() {
      return C[92] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 885,
        [_Location_file]: null
      });
    },
    get C93() {
      return C[93] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectionOverlay",
        [_Location_column]: 9,
        [_Location_line]: 896,
        [_Location_file]: null
      });
    },
    get C83() {
      return C[83] = dart.constList([C[84] || CT.C84, C[85] || CT.C85, C[86] || CT.C86, C[87] || CT.C87, C[88] || CT.C88, C[89] || CT.C89, C[90] || CT.C90, C[91] || CT.C91, C[92] || CT.C92, C[93] || CT.C93], T._LocationL());
    },
    get C82() {
      return C[82] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[83] || CT.C83,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 872,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C96() {
      return C[96] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNotification",
        [_Location_column]: 7,
        [_Location_line]: 862,
        [_Location_file]: null
      });
    },
    get C97() {
      return C[97] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 872,
        [_Location_file]: null
      });
    },
    get C95() {
      return C[95] = dart.constList([C[96] || CT.C96, C[97] || CT.C97], T._LocationL());
    },
    get C94() {
      return C[94] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[95] || CT.C95,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 861,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C98() {
      return C[98] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 12,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C101() {
      return C[101] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 17,
        [_Location_line]: 1022,
        [_Location_file]: null
      });
    },
    get C102() {
      return C[102] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 17,
        [_Location_line]: 1023,
        [_Location_file]: null
      });
    },
    get C103() {
      return C[103] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 1026,
        [_Location_file]: null
      });
    },
    get C100() {
      return C[100] = dart.constList([C[101] || CT.C101, C[102] || CT.C102, C[103] || CT.C103], T._LocationL());
    },
    get C99() {
      return C[99] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[100] || CT.C100,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 1021,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C106() {
      return C[106] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 15,
        [_Location_line]: 1017,
        [_Location_file]: null
      });
    },
    get C107() {
      return C[107] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 15,
        [_Location_line]: 1020,
        [_Location_file]: null
      });
    },
    get C108() {
      return C[108] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 1021,
        [_Location_file]: null
      });
    },
    get C105() {
      return C[105] = dart.constList([C[106] || CT.C106, C[107] || CT.C107, C[108] || CT.C108], T._LocationL());
    },
    get C104() {
      return C[104] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[105] || CT.C105,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 1016,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C111() {
      return C[111] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "id",
        [_Location_column]: 9,
        [_Location_line]: 1012,
        [_Location_file]: null
      });
    },
    get C112() {
      return C[112] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1013,
        [_Location_file]: null
      });
    },
    get C110() {
      return C[110] = dart.constList([C[111] || CT.C111, C[112] || CT.C112], T._LocationL());
    },
    get C109() {
      return C[109] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[110] || CT.C110,
        [_Location_name]: null,
        [_Location_column]: 19,
        [_Location_line]: 1011,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C115() {
      return C[115] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "delegate",
        [_Location_column]: 11,
        [_Location_line]: 1040,
        [_Location_file]: null
      });
    },
    get C116() {
      return C[116] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 11,
        [_Location_line]: 1044,
        [_Location_file]: null
      });
    },
    get C114() {
      return C[114] = dart.constList([C[115] || CT.C115, C[116] || CT.C116], T._LocationL());
    },
    get C113() {
      return C[113] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[114] || CT.C114,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1039,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C119() {
      return C[119] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 7,
        [_Location_line]: 1036,
        [_Location_file]: null
      });
    },
    get C120() {
      return C[120] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1037,
        [_Location_file]: null
      });
    },
    get C118() {
      return C[118] = dart.constList([C[119] || CT.C119, C[120] || CT.C120], T._LocationL());
    },
    get C117() {
      return C[117] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[118] || CT.C118,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1035,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C123() {
      return C[123] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 29,
        [_Location_line]: 1166,
        [_Location_file]: null
      });
    },
    get C124() {
      return C[124] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 15,
        [_Location_line]: 1167,
        [_Location_file]: null
      });
    },
    get C122() {
      return C[122] = dart.constList([C[123] || CT.C123, C[124] || CT.C124], T._LocationL());
    },
    get C121() {
      return C[121] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[122] || CT.C122,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 1165,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C127() {
      return C[127] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollController",
        [_Location_column]: 9,
        [_Location_line]: 1149,
        [_Location_file]: null
      });
    },
    get C128() {
      return C[128] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offAxisFraction",
        [_Location_column]: 9,
        [_Location_line]: 1150,
        [_Location_file]: null
      });
    },
    get C129() {
      return C[129] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "itemExtent",
        [_Location_column]: 9,
        [_Location_line]: 1151,
        [_Location_file]: null
      });
    },
    get C130() {
      return C[130] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "useMagnifier",
        [_Location_column]: 9,
        [_Location_line]: 1152,
        [_Location_file]: null
      });
    },
    get C131() {
      return C[131] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "magnification",
        [_Location_column]: 9,
        [_Location_line]: 1153,
        [_Location_file]: null
      });
    },
    get C132() {
      return C[132] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 9,
        [_Location_line]: 1154,
        [_Location_file]: null
      });
    },
    get C133() {
      return C[133] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "squeeze",
        [_Location_column]: 9,
        [_Location_line]: 1155,
        [_Location_file]: null
      });
    },
    get C134() {
      return C[134] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSelectedItemChanged",
        [_Location_column]: 9,
        [_Location_line]: 1156,
        [_Location_file]: null
      });
    },
    get C135() {
      return C[135] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 1161,
        [_Location_file]: null
      });
    },
    get C136() {
      return C[136] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "looping",
        [_Location_column]: 9,
        [_Location_line]: 1171,
        [_Location_file]: null
      });
    },
    get C137() {
      return C[137] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectionOverlay",
        [_Location_column]: 9,
        [_Location_line]: 1172,
        [_Location_file]: null
      });
    },
    get C126() {
      return C[126] = dart.constList([C[127] || CT.C127, C[128] || CT.C128, C[129] || CT.C129, C[130] || CT.C130, C[131] || CT.C131, C[132] || CT.C132, C[133] || CT.C133, C[134] || CT.C134, C[135] || CT.C135, C[136] || CT.C136, C[137] || CT.C137], T._LocationL());
    },
    get C125() {
      return C[125] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[126] || CT.C126,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 1148,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C140() {
      return C[140] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNotification",
        [_Location_column]: 7,
        [_Location_line]: 1138,
        [_Location_file]: null
      });
    },
    get C141() {
      return C[141] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1148,
        [_Location_file]: null
      });
    },
    get C139() {
      return C[139] = dart.constList([C[140] || CT.C140, C[141] || CT.C141], T._LocationL());
    },
    get C138() {
      return C[138] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[139] || CT.C139,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1137,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C144() {
      return C[144] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 29,
        [_Location_line]: 1210,
        [_Location_file]: null
      });
    },
    get C145() {
      return C[145] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 15,
        [_Location_line]: 1211,
        [_Location_file]: null
      });
    },
    get C143() {
      return C[143] = dart.constList([C[144] || CT.C144, C[145] || CT.C145], T._LocationL());
    },
    get C142() {
      return C[142] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[143] || CT.C143,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 1209,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C148() {
      return C[148] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollController",
        [_Location_column]: 9,
        [_Location_line]: 1190,
        [_Location_file]: null
      });
    },
    get C149() {
      return C[149] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offAxisFraction",
        [_Location_column]: 9,
        [_Location_line]: 1191,
        [_Location_file]: null
      });
    },
    get C150() {
      return C[150] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "itemExtent",
        [_Location_column]: 9,
        [_Location_line]: 1192,
        [_Location_file]: null
      });
    },
    get C151() {
      return C[151] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "useMagnifier",
        [_Location_column]: 9,
        [_Location_line]: 1193,
        [_Location_file]: null
      });
    },
    get C152() {
      return C[152] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "magnification",
        [_Location_column]: 9,
        [_Location_line]: 1194,
        [_Location_file]: null
      });
    },
    get C153() {
      return C[153] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 9,
        [_Location_line]: 1195,
        [_Location_file]: null
      });
    },
    get C154() {
      return C[154] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "squeeze",
        [_Location_column]: 9,
        [_Location_line]: 1196,
        [_Location_file]: null
      });
    },
    get C155() {
      return C[155] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSelectedItemChanged",
        [_Location_column]: 9,
        [_Location_line]: 1197,
        [_Location_file]: null
      });
    },
    get C156() {
      return C[156] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 1202,
        [_Location_file]: null
      });
    },
    get C157() {
      return C[157] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "looping",
        [_Location_column]: 9,
        [_Location_line]: 1215,
        [_Location_file]: null
      });
    },
    get C158() {
      return C[158] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectionOverlay",
        [_Location_column]: 9,
        [_Location_line]: 1216,
        [_Location_file]: null
      });
    },
    get C147() {
      return C[147] = dart.constList([C[148] || CT.C148, C[149] || CT.C149, C[150] || CT.C150, C[151] || CT.C151, C[152] || CT.C152, C[153] || CT.C153, C[154] || CT.C154, C[155] || CT.C155, C[156] || CT.C156, C[157] || CT.C157, C[158] || CT.C158], T._LocationL());
    },
    get C146() {
      return C[146] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[147] || CT.C147,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 1189,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C161() {
      return C[161] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNotification",
        [_Location_column]: 7,
        [_Location_line]: 1179,
        [_Location_file]: null
      });
    },
    get C162() {
      return C[162] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1189,
        [_Location_file]: null
      });
    },
    get C160() {
      return C[160] = dart.constList([C[161] || CT.C161, C[162] || CT.C162], T._LocationL());
    },
    get C159() {
      return C[159] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[160] || CT.C160,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1178,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C165() {
      return C[165] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 29,
        [_Location_line]: 1258,
        [_Location_file]: null
      });
    },
    get C166() {
      return C[166] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 15,
        [_Location_line]: 1259,
        [_Location_file]: null
      });
    },
    get C164() {
      return C[164] = dart.constList([C[165] || CT.C165, C[166] || CT.C166], T._LocationL());
    },
    get C163() {
      return C[163] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[164] || CT.C164,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 1257,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C169() {
      return C[169] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollController",
        [_Location_column]: 9,
        [_Location_line]: 1234,
        [_Location_file]: null
      });
    },
    get C170() {
      return C[170] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "itemExtent",
        [_Location_column]: 9,
        [_Location_line]: 1235,
        [_Location_file]: null
      });
    },
    get C171() {
      return C[171] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offAxisFraction",
        [_Location_column]: 9,
        [_Location_line]: 1236,
        [_Location_file]: null
      });
    },
    get C172() {
      return C[172] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "useMagnifier",
        [_Location_column]: 9,
        [_Location_line]: 1237,
        [_Location_file]: null
      });
    },
    get C173() {
      return C[173] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "magnification",
        [_Location_column]: 9,
        [_Location_line]: 1238,
        [_Location_file]: null
      });
    },
    get C174() {
      return C[174] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 9,
        [_Location_line]: 1239,
        [_Location_file]: null
      });
    },
    get C175() {
      return C[175] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSelectedItemChanged",
        [_Location_column]: 9,
        [_Location_line]: 1240,
        [_Location_file]: null
      });
    },
    get C176() {
      return C[176] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "itemBuilder",
        [_Location_column]: 9,
        [_Location_line]: 1245,
        [_Location_file]: null
      });
    },
    get C177() {
      return C[177] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectionOverlay",
        [_Location_column]: 9,
        [_Location_line]: 1263,
        [_Location_file]: null
      });
    },
    get C168() {
      return C[168] = dart.constList([C[169] || CT.C169, C[170] || CT.C170, C[171] || CT.C171, C[172] || CT.C172, C[173] || CT.C173, C[174] || CT.C174, C[175] || CT.C175, C[176] || CT.C176, C[177] || CT.C177], T._LocationL());
    },
    get C167() {
      return C[167] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[168] || CT.C168,
        [_Location_name]: null,
        [_Location_column]: 30,
        [_Location_line]: 1233,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C180() {
      return C[180] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNotification",
        [_Location_column]: 7,
        [_Location_line]: 1223,
        [_Location_file]: null
      });
    },
    get C181() {
      return C[181] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1233,
        [_Location_file]: null
      });
    },
    get C179() {
      return C[179] = dart.constList([C[180] || CT.C180, C[181] || CT.C181], T._LocationL());
    },
    get C178() {
      return C[178] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[179] || CT.C179,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1222,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C182() {
      return C[182] = dart.const({
        __proto__: localizations.DatePickerDateOrder.prototype,
        [_name]: "DatePickerDateOrder.mdy",
        index: 1
      });
    },
    get C183() {
      return C[183] = dart.const({
        __proto__: localizations.DatePickerDateOrder.prototype,
        [_name]: "DatePickerDateOrder.dmy",
        index: 0
      });
    },
    get C184() {
      return C[184] = dart.const({
        __proto__: localizations.DatePickerDateOrder.prototype,
        [_name]: "DatePickerDateOrder.ymd",
        index: 2
      });
    },
    get C185() {
      return C[185] = dart.const({
        __proto__: localizations.DatePickerDateOrder.prototype,
        [_name]: "DatePickerDateOrder.ydm",
        index: 3
      });
    },
    get C186() {
      return C[186] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 12
      });
    },
    get C189() {
      return C[189] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 17,
        [_Location_line]: 1395,
        [_Location_file]: null
      });
    },
    get C190() {
      return C[190] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 17,
        [_Location_line]: 1396,
        [_Location_file]: null
      });
    },
    get C191() {
      return C[191] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 1397,
        [_Location_file]: null
      });
    },
    get C188() {
      return C[188] = dart.constList([C[189] || CT.C189, C[190] || CT.C190, C[191] || CT.C191], T._LocationL());
    },
    get C187() {
      return C[187] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[188] || CT.C188,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 1394,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C194() {
      return C[194] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 15,
        [_Location_line]: 1390,
        [_Location_file]: null
      });
    },
    get C195() {
      return C[195] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 15,
        [_Location_line]: 1393,
        [_Location_file]: null
      });
    },
    get C196() {
      return C[196] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 1394,
        [_Location_file]: null
      });
    },
    get C193() {
      return C[193] = dart.constList([C[194] || CT.C194, C[195] || CT.C195, C[196] || CT.C196], T._LocationL());
    },
    get C192() {
      return C[192] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[193] || CT.C193,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 1389,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C199() {
      return C[199] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "id",
        [_Location_column]: 9,
        [_Location_line]: 1385,
        [_Location_file]: null
      });
    },
    get C200() {
      return C[200] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1386,
        [_Location_file]: null
      });
    },
    get C198() {
      return C[198] = dart.constList([C[199] || CT.C199, C[200] || CT.C200], T._LocationL());
    },
    get C197() {
      return C[197] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[198] || CT.C198,
        [_Location_name]: null,
        [_Location_column]: 19,
        [_Location_line]: 1384,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C203() {
      return C[203] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "delegate",
        [_Location_column]: 11,
        [_Location_line]: 1411,
        [_Location_file]: null
      });
    },
    get C204() {
      return C[204] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 11,
        [_Location_line]: 1415,
        [_Location_file]: null
      });
    },
    get C202() {
      return C[202] = dart.constList([C[203] || CT.C203, C[204] || CT.C204], T._LocationL());
    },
    get C201() {
      return C[201] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[202] || CT.C202,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1410,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C207() {
      return C[207] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 7,
        [_Location_line]: 1407,
        [_Location_file]: null
      });
    },
    get C208() {
      return C[208] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1408,
        [_Location_file]: null
      });
    },
    get C206() {
      return C[206] = dart.constList([C[207] || CT.C207, C[208] || CT.C208], T._LocationL());
    },
    get C205() {
      return C[205] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[206] || CT.C206,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1406,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C209() {
      return C[209] = dart.const({
        __proto__: date_picker.CupertinoTimerPickerMode.prototype,
        [_name$]: "CupertinoTimerPickerMode.hm",
        index: 0
      });
    },
    get C210() {
      return C[210] = dart.const({
        __proto__: date_picker.CupertinoTimerPickerMode.prototype,
        [_name$]: "CupertinoTimerPickerMode.ms",
        index: 1
      });
    },
    get C211() {
      return C[211] = dart.const({
        __proto__: date_picker.CupertinoTimerPickerMode.prototype,
        [_name$]: "CupertinoTimerPickerMode.hms",
        index: 2
      });
    },
    get C212() {
      return C[212] = dart.constList([C[209] || CT.C209, C[210] || CT.C210, C[211] || CT.C211], T.CupertinoTimerPickerModeL());
    },
    get C213() {
      return C[213] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 0
      });
    },
    get C214() {
      return C[214] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 0,
        [Alignment_x]: 0
      });
    },
    get C215() {
      return C[215] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 86400000000.0
      });
    },
    get C216() {
      return C[216] = dart.const({
        __proto__: ui.TextDirection.prototype,
        [_name$0]: "TextDirection.ltr",
        index: 1
      });
    },
    get C217() {
      return C[217] = dart.const({
        __proto__: ui.TextDirection.prototype,
        [_name$0]: "TextDirection.rtl",
        index: 0
      });
    },
    get C219() {
      return C[219] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_index]: 5
      });
    },
    get C218() {
      return C[218] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[219] || CT.C219,
        [TextStyle_fontSize]: 17,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C222() {
      return C[222] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 15,
        [_Location_line]: 1719,
        [_Location_file]: null
      });
    },
    get C223() {
      return C[223] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 15,
        [_Location_line]: 1720,
        [_Location_file]: null
      });
    },
    get C224() {
      return C[224] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxLines",
        [_Location_column]: 15,
        [_Location_line]: 1724,
        [_Location_file]: null
      });
    },
    get C225() {
      return C[225] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "softWrap",
        [_Location_column]: 15,
        [_Location_line]: 1725,
        [_Location_file]: null
      });
    },
    get C221() {
      return C[221] = dart.constList([C[222] || CT.C222, C[223] || CT.C223, C[224] || CT.C224, C[225] || CT.C225], T._LocationL());
    },
    get C220() {
      return C[220] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[221] || CT.C221,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 1718,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C228() {
      return C[228] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "baseline",
        [_Location_column]: 13,
        [_Location_line]: 1716,
        [_Location_file]: null
      });
    },
    get C229() {
      return C[229] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "baselineType",
        [_Location_column]: 13,
        [_Location_line]: 1717,
        [_Location_file]: null
      });
    },
    get C230() {
      return C[230] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 1718,
        [_Location_file]: null
      });
    },
    get C227() {
      return C[227] = dart.constList([C[228] || CT.C228, C[229] || CT.C229, C[230] || CT.C230], T._LocationL());
    },
    get C226() {
      return C[226] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[227] || CT.C227,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 1715,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C233() {
      return C[233] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 11,
        [_Location_line]: 1714,
        [_Location_file]: null
      });
    },
    get C234() {
      return C[234] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 1715,
        [_Location_file]: null
      });
    },
    get C232() {
      return C[232] = dart.constList([C[233] || CT.C233, C[234] || CT.C234], T._LocationL());
    },
    get C231() {
      return C[231] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[232] || CT.C232,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1713,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C237() {
      return C[237] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 9,
        [_Location_line]: 1711,
        [_Location_file]: null
      });
    },
    get C238() {
      return C[238] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 9,
        [_Location_line]: 1712,
        [_Location_file]: null
      });
    },
    get C239() {
      return C[239] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1713,
        [_Location_file]: null
      });
    },
    get C236() {
      return C[236] = dart.constList([C[237] || CT.C237, C[238] || CT.C238, C[239] || CT.C239], T._LocationL());
    },
    get C235() {
      return C[235] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[236] || CT.C236,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 1710,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C242() {
      return C[242] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1710,
        [_Location_file]: null
      });
    },
    get C241() {
      return C[241] = dart.constList([C[242] || CT.C242], T._LocationL());
    },
    get C240() {
      return C[240] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[241] || CT.C241,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1709,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C245() {
      return C[245] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 21,
        [_Location_line]: 1743,
        [_Location_file]: null
      });
    },
    get C246() {
      return C[246] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "softWrap",
        [_Location_column]: 27,
        [_Location_line]: 1743,
        [_Location_file]: null
      });
    },
    get C247() {
      return C[247] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxLines",
        [_Location_column]: 44,
        [_Location_line]: 1743,
        [_Location_file]: null
      });
    },
    get C248() {
      return C[248] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overflow",
        [_Location_column]: 57,
        [_Location_line]: 1743,
        [_Location_file]: null
      });
    },
    get C244() {
      return C[244] = dart.constList([C[245] || CT.C245, C[246] || CT.C246, C[247] || CT.C247, C[248] || CT.C248], T._LocationL());
    },
    get C243() {
      return C[243] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[244] || CT.C244,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1743,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C251() {
      return C[251] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 9,
        [_Location_line]: 1741,
        [_Location_file]: null
      });
    },
    get C252() {
      return C[252] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 9,
        [_Location_line]: 1742,
        [_Location_file]: null
      });
    },
    get C253() {
      return C[253] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1743,
        [_Location_file]: null
      });
    },
    get C250() {
      return C[250] = dart.constList([C[251] || CT.C251, C[252] || CT.C252, C[253] || CT.C253], T._LocationL());
    },
    get C249() {
      return C[249] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[250] || CT.C250,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 1740,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C256() {
      return C[256] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 7,
        [_Location_line]: 1737,
        [_Location_file]: null
      });
    },
    get C257() {
      return C[257] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 7,
        [_Location_line]: 1738,
        [_Location_file]: null
      });
    },
    get C258() {
      return C[258] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 7,
        [_Location_line]: 1739,
        [_Location_file]: null
      });
    },
    get C259() {
      return C[259] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1740,
        [_Location_file]: null
      });
    },
    get C255() {
      return C[255] = dart.constList([C[256] || CT.C256, C[257] || CT.C257, C[258] || CT.C258, C[259] || CT.C259], T._LocationL());
    },
    get C254() {
      return C[254] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[255] || CT.C255,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1736,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C262() {
      return C[262] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 11,
        [_Location_line]: 1773,
        [_Location_file]: null
      });
    },
    get C263() {
      return C[263] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excludeSemantics",
        [_Location_column]: 11,
        [_Location_line]: 1774,
        [_Location_file]: null
      });
    },
    get C264() {
      return C[264] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 1775,
        [_Location_file]: null
      });
    },
    get C261() {
      return C[261] = dart.constList([C[262] || CT.C262, C[263] || CT.C263, C[264] || CT.C264], T._LocationL());
    },
    get C260() {
      return C[260] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[261] || CT.C261,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1772,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C267() {
      return C[267] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollController",
        [_Location_column]: 7,
        [_Location_line]: 1750,
        [_Location_file]: null
      });
    },
    get C268() {
      return C[268] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "magnification",
        [_Location_column]: 7,
        [_Location_line]: 1751,
        [_Location_file]: null
      });
    },
    get C269() {
      return C[269] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offAxisFraction",
        [_Location_column]: 7,
        [_Location_line]: 1752,
        [_Location_file]: null
      });
    },
    get C270() {
      return C[270] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "itemExtent",
        [_Location_column]: 7,
        [_Location_line]: 1753,
        [_Location_file]: null
      });
    },
    get C271() {
      return C[271] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 7,
        [_Location_line]: 1754,
        [_Location_file]: null
      });
    },
    get C272() {
      return C[272] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "squeeze",
        [_Location_column]: 7,
        [_Location_line]: 1755,
        [_Location_file]: null
      });
    },
    get C273() {
      return C[273] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSelectedItemChanged",
        [_Location_column]: 7,
        [_Location_line]: 1756,
        [_Location_file]: null
      });
    },
    get C274() {
      return C[274] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 7,
        [_Location_line]: 1766,
        [_Location_file]: null
      });
    },
    get C275() {
      return C[275] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectionOverlay",
        [_Location_column]: 7,
        [_Location_line]: 1778,
        [_Location_file]: null
      });
    },
    get C266() {
      return C[266] = dart.constList([C[267] || CT.C267, C[268] || CT.C268, C[269] || CT.C269, C[270] || CT.C270, C[271] || CT.C271, C[272] || CT.C272, C[273] || CT.C273, C[274] || CT.C274, C[275] || CT.C275], T._LocationL());
    },
    get C265() {
      return C[265] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[266] || CT.C266,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1749,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C278() {
      return C[278] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNotification",
        [_Location_column]: 11,
        [_Location_line]: 1791,
        [_Location_file]: null
      });
    },
    get C279() {
      return C[279] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 1795,
        [_Location_file]: null
      });
    },
    get C277() {
      return C[277] = dart.constList([C[278] || CT.C278, C[279] || CT.C279], T._LocationL());
    },
    get C276() {
      return C[276] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[277] || CT.C277,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 1790,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C282() {
      return C[282] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 7,
        [_Location_line]: 1789,
        [_Location_file]: null
      });
    },
    get C281() {
      return C[281] = dart.constList([C[282] || CT.C282], T._LocationL());
    },
    get C280() {
      return C[280] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[281] || CT.C281,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1788,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C285() {
      return C[285] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 11,
        [_Location_line]: 1837,
        [_Location_file]: null
      });
    },
    get C286() {
      return C[286] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excludeSemantics",
        [_Location_column]: 11,
        [_Location_line]: 1838,
        [_Location_file]: null
      });
    },
    get C287() {
      return C[287] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 1839,
        [_Location_file]: null
      });
    },
    get C284() {
      return C[284] = dart.constList([C[285] || CT.C285, C[286] || CT.C286, C[287] || CT.C287], T._LocationL());
    },
    get C283() {
      return C[283] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[284] || CT.C284,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1836,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C290() {
      return C[290] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollController",
        [_Location_column]: 7,
        [_Location_line]: 1807,
        [_Location_file]: null
      });
    },
    get C291() {
      return C[291] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "magnification",
        [_Location_column]: 7,
        [_Location_line]: 1810,
        [_Location_file]: null
      });
    },
    get C292() {
      return C[292] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offAxisFraction",
        [_Location_column]: 7,
        [_Location_line]: 1811,
        [_Location_file]: null
      });
    },
    get C293() {
      return C[293] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "itemExtent",
        [_Location_column]: 7,
        [_Location_line]: 1815,
        [_Location_file]: null
      });
    },
    get C294() {
      return C[294] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 7,
        [_Location_line]: 1816,
        [_Location_file]: null
      });
    },
    get C295() {
      return C[295] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "squeeze",
        [_Location_column]: 7,
        [_Location_line]: 1817,
        [_Location_file]: null
      });
    },
    get C296() {
      return C[296] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "looping",
        [_Location_column]: 7,
        [_Location_line]: 1818,
        [_Location_file]: null
      });
    },
    get C297() {
      return C[297] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSelectedItemChanged",
        [_Location_column]: 7,
        [_Location_line]: 1819,
        [_Location_file]: null
      });
    },
    get C298() {
      return C[298] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 7,
        [_Location_line]: 1829,
        [_Location_file]: null
      });
    },
    get C299() {
      return C[299] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectionOverlay",
        [_Location_column]: 7,
        [_Location_line]: 1842,
        [_Location_file]: null
      });
    },
    get C289() {
      return C[289] = dart.constList([C[290] || CT.C290, C[291] || CT.C291, C[292] || CT.C292, C[293] || CT.C293, C[294] || CT.C294, C[295] || CT.C295, C[296] || CT.C296, C[297] || CT.C297, C[298] || CT.C298, C[299] || CT.C299], T._LocationL());
    },
    get C288() {
      return C[288] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[289] || CT.C289,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1806,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C302() {
      return C[302] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNotification",
        [_Location_column]: 11,
        [_Location_line]: 1855,
        [_Location_file]: null
      });
    },
    get C303() {
      return C[303] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 1859,
        [_Location_file]: null
      });
    },
    get C301() {
      return C[301] = dart.constList([C[302] || CT.C302, C[303] || CT.C303], T._LocationL());
    },
    get C300() {
      return C[300] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[301] || CT.C301,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 1854,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C306() {
      return C[306] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 7,
        [_Location_line]: 1853,
        [_Location_file]: null
      });
    },
    get C305() {
      return C[305] = dart.constList([C[306] || CT.C306], T._LocationL());
    },
    get C304() {
      return C[304] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[305] || CT.C305,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1852,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C309() {
      return C[309] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 11,
        [_Location_line]: 1901,
        [_Location_file]: null
      });
    },
    get C310() {
      return C[310] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excludeSemantics",
        [_Location_column]: 11,
        [_Location_line]: 1902,
        [_Location_file]: null
      });
    },
    get C311() {
      return C[311] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 1903,
        [_Location_file]: null
      });
    },
    get C308() {
      return C[308] = dart.constList([C[309] || CT.C309, C[310] || CT.C310, C[311] || CT.C311], T._LocationL());
    },
    get C307() {
      return C[307] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[308] || CT.C308,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1900,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C314() {
      return C[314] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollController",
        [_Location_column]: 7,
        [_Location_line]: 1871,
        [_Location_file]: null
      });
    },
    get C315() {
      return C[315] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "magnification",
        [_Location_column]: 7,
        [_Location_line]: 1874,
        [_Location_file]: null
      });
    },
    get C316() {
      return C[316] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offAxisFraction",
        [_Location_column]: 7,
        [_Location_line]: 1875,
        [_Location_file]: null
      });
    },
    get C317() {
      return C[317] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "itemExtent",
        [_Location_column]: 7,
        [_Location_line]: 1879,
        [_Location_file]: null
      });
    },
    get C318() {
      return C[318] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 7,
        [_Location_line]: 1880,
        [_Location_file]: null
      });
    },
    get C319() {
      return C[319] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "squeeze",
        [_Location_column]: 7,
        [_Location_line]: 1881,
        [_Location_file]: null
      });
    },
    get C320() {
      return C[320] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "looping",
        [_Location_column]: 7,
        [_Location_line]: 1882,
        [_Location_file]: null
      });
    },
    get C321() {
      return C[321] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSelectedItemChanged",
        [_Location_column]: 7,
        [_Location_line]: 1883,
        [_Location_file]: null
      });
    },
    get C322() {
      return C[322] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 7,
        [_Location_line]: 1893,
        [_Location_file]: null
      });
    },
    get C323() {
      return C[323] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectionOverlay",
        [_Location_column]: 7,
        [_Location_line]: 1906,
        [_Location_file]: null
      });
    },
    get C313() {
      return C[313] = dart.constList([C[314] || CT.C314, C[315] || CT.C315, C[316] || CT.C316, C[317] || CT.C317, C[318] || CT.C318, C[319] || CT.C319, C[320] || CT.C320, C[321] || CT.C321, C[322] || CT.C322, C[323] || CT.C323], T._LocationL());
    },
    get C312() {
      return C[312] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[313] || CT.C313,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1870,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C326() {
      return C[326] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNotification",
        [_Location_column]: 11,
        [_Location_line]: 1919,
        [_Location_file]: null
      });
    },
    get C327() {
      return C[327] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 1923,
        [_Location_file]: null
      });
    },
    get C325() {
      return C[325] = dart.constList([C[326] || CT.C326, C[327] || CT.C327], T._LocationL());
    },
    get C324() {
      return C[324] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[325] || CT.C325,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 1918,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C330() {
      return C[330] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 7,
        [_Location_line]: 1917,
        [_Location_file]: null
      });
    },
    get C329() {
      return C[329] = dart.constList([C[330] || CT.C330], T._LocationL());
    },
    get C328() {
      return C[328] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[329] || CT.C329,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1916,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C333() {
      return C[333] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 79,
        [_Location_line]: 2097,
        [_Location_file]: null
      });
    },
    get C332() {
      return C[332] = dart.constList([C[333] || CT.C333], T._LocationL());
    },
    get C331() {
      return C[331] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[332] || CT.C332,
        [_Location_name]: null,
        [_Location_column]: 70,
        [_Location_line]: 2097,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C336() {
      return C[336] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 30,
        [_Location_line]: 2097,
        [_Location_file]: null
      });
    },
    get C335() {
      return C[335] = dart.constList([C[336] || CT.C336], T._LocationL());
    },
    get C334() {
      return C[334] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[335] || CT.C335,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 2097,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C339() {
      return C[339] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 19,
        [_Location_line]: 2096,
        [_Location_file]: null
      });
    },
    get C340() {
      return C[340] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 19,
        [_Location_line]: 2097,
        [_Location_file]: null
      });
    },
    get C338() {
      return C[338] = dart.constList([C[339] || CT.C339, C[340] || CT.C340], T._LocationL());
    },
    get C337() {
      return C[337] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[338] || CT.C338,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 2095,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C343() {
      return C[343] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 17,
        [_Location_line]: 2092,
        [_Location_file]: null
      });
    },
    get C344() {
      return C[344] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 17,
        [_Location_line]: 2093,
        [_Location_file]: null
      });
    },
    get C345() {
      return C[345] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 17,
        [_Location_line]: 2094,
        [_Location_file]: null
      });
    },
    get C346() {
      return C[346] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 2095,
        [_Location_file]: null
      });
    },
    get C342() {
      return C[342] = dart.constList([C[343] || CT.C343, C[344] || CT.C344, C[345] || CT.C345, C[346] || CT.C346], T._LocationL());
    },
    get C341() {
      return C[341] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[342] || CT.C342,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 2091,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C349() {
      return C[349] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 15,
        [_Location_line]: 2090,
        [_Location_file]: null
      });
    },
    get C350() {
      return C[350] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 2091,
        [_Location_file]: null
      });
    },
    get C348() {
      return C[348] = dart.constList([C[349] || CT.C349, C[350] || CT.C350], T._LocationL());
    },
    get C347() {
      return C[347] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[348] || CT.C348,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 2089,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C353() {
      return C[353] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 13,
        [_Location_line]: 2084,
        [_Location_file]: null
      });
    },
    get C354() {
      return C[354] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 2089,
        [_Location_file]: null
      });
    },
    get C352() {
      return C[352] = dart.constList([C[353] || CT.C353, C[354] || CT.C354], T._LocationL());
    },
    get C351() {
      return C[351] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[352] || CT.C352,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 2083,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C357() {
      return C[357] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 11,
        [_Location_line]: 2082,
        [_Location_file]: null
      });
    },
    get C358() {
      return C[358] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 2083,
        [_Location_file]: null
      });
    },
    get C356() {
      return C[356] = dart.constList([C[357] || CT.C357, C[358] || CT.C358], T._LocationL());
    },
    get C355() {
      return C[355] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[356] || CT.C356,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 2079,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C361() {
      return C[361] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 7,
        [_Location_line]: 1959,
        [_Location_file]: null
      });
    },
    get C360() {
      return C[360] = dart.constList([C[361] || CT.C361], T._LocationL());
    },
    get C359() {
      return C[359] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[360] || CT.C360,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1958,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C362() {
      return C[362] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 200000
      });
    },
    get C363() {
      return C[363] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: -0.83,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: null,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C367() {
      return C[367] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "capRightEdge",
        [_Location_column]: 77,
        [_Location_line]: 67,
        [_Location_file]: null
      });
    },
    get C366() {
      return C[366] = dart.constList([C[367] || CT.C367], T._LocationL());
    },
    get C365() {
      return C[365] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[366] || CT.C366,
        [_Location_name]: null,
        [_Location_column]: 38,
        [_Location_line]: 67,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C369() {
      return C[369] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 1366718080
      });
    },
    get C370() {
      return C[370] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 863401600
      });
    },
    get C371() {
      return C[371] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 1031173760
      });
    },
    get C372() {
      return C[372] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 511080064
      });
    },
    get C368() {
      return C[368] = dart.const({
        __proto__: colors.CupertinoDynamicColor.prototype,
        [Color_value]: 0,
        [CupertinoDynamicColor_darkHighContrastElevatedColor]: C[369] || CT.C369,
        [CupertinoDynamicColor_highContrastElevatedColor]: C[370] || CT.C370,
        [CupertinoDynamicColor_darkElevatedColor]: C[371] || CT.C371,
        [CupertinoDynamicColor_elevatedColor]: C[372] || CT.C372,
        [CupertinoDynamicColor_darkHighContrastColor]: C[369] || CT.C369,
        [CupertinoDynamicColor_highContrastColor]: C[370] || CT.C370,
        [CupertinoDynamicColor_darkColor]: C[371] || CT.C371,
        [CupertinoDynamicColor_color]: C[372] || CT.C372,
        [CupertinoDynamicColor__debugResolveContext]: null,
        [CupertinoDynamicColor__debugLabel]: "tertiarySystemFill",
        [CupertinoDynamicColor__effectiveColor]: C[372] || CT.C372
      });
    },
    get C364() {
      return C[364] = dart.const({
        __proto__: picker.CupertinoPickerDefaultSelectionOverlay.prototype,
        [Widget__location]: C[365] || CT.C365,
        [Widget_key]: null,
        [CupertinoPickerDefaultSelectionOverlay_background]: C[368] || CT.C368,
        [CupertinoPickerDefaultSelectionOverlay_capRightEdge]: false,
        [CupertinoPickerDefaultSelectionOverlay_capLeftEdge]: true
      });
    },
    get C376() {
      return C[376] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "capLeftEdge",
        [_Location_column]: 79,
        [_Location_line]: 68,
        [_Location_file]: null
      });
    },
    get C377() {
      return C[377] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "capRightEdge",
        [_Location_column]: 99,
        [_Location_line]: 68,
        [_Location_file]: null
      });
    },
    get C375() {
      return C[375] = dart.constList([C[376] || CT.C376, C[377] || CT.C377], T._LocationL());
    },
    get C374() {
      return C[374] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[375] || CT.C375,
        [_Location_name]: null,
        [_Location_column]: 40,
        [_Location_line]: 68,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C373() {
      return C[373] = dart.const({
        __proto__: picker.CupertinoPickerDefaultSelectionOverlay.prototype,
        [Widget__location]: C[374] || CT.C374,
        [Widget_key]: null,
        [CupertinoPickerDefaultSelectionOverlay_background]: C[368] || CT.C368,
        [CupertinoPickerDefaultSelectionOverlay_capRightEdge]: false,
        [CupertinoPickerDefaultSelectionOverlay_capLeftEdge]: false
      });
    },
    get C381() {
      return C[381] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "capLeftEdge",
        [_Location_column]: 78,
        [_Location_line]: 69,
        [_Location_file]: null
      });
    },
    get C380() {
      return C[380] = dart.constList([C[381] || CT.C381], T._LocationL());
    },
    get C379() {
      return C[379] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[380] || CT.C380,
        [_Location_name]: null,
        [_Location_column]: 39,
        [_Location_line]: 69,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart"
      });
    },
    get C378() {
      return C[378] = dart.const({
        __proto__: picker.CupertinoPickerDefaultSelectionOverlay.prototype,
        [Widget__location]: C[379] || CT.C379,
        [Widget_key]: null,
        [CupertinoPickerDefaultSelectionOverlay_background]: C[368] || CT.C368,
        [CupertinoPickerDefaultSelectionOverlay_capRightEdge]: true,
        [CupertinoPickerDefaultSelectionOverlay_capLeftEdge]: false
      });
    }
  }, false);
  var C = Array(382).fill(void 0);
  var I = [
    "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/date_picker.dart",
    "package:flutter/src/cupertino/date_picker.dart"
  ];
  date_picker._DatePickerLayoutDelegate = class _DatePickerLayoutDelegate extends custom_layout.MultiChildLayoutDelegate {
    performLayout(size) {
      if (size == null) dart.nullFailed(I[0], 92, 27, "size");
      let remainingWidth = size.width;
      for (let i = 0; i < dart.notNull(this.columnWidths[$length]); i = i + 1)
        remainingWidth = dart.notNull(remainingWidth) - (dart.notNull(this.columnWidths[$_get](i)) + 12 * 2);
      let currentHorizontalOffset = 0.0;
      for (let i = 0; i < dart.notNull(this.columnWidths[$length]); i = i + 1) {
        let index = this.textDirectionFactor === 1 ? i : dart.notNull(this.columnWidths[$length]) - i - 1;
        let childWidth = dart.notNull(this.columnWidths[$_get](index)) + 12 * 2;
        if (index === 0 || index === dart.notNull(this.columnWidths[$length]) - 1) childWidth = childWidth + dart.notNull(remainingWidth) / 2;
        if (!dart.test(dart.fn(() => {
          if (childWidth < 0) {
            assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({exception: assertions.FlutterError.new("Insufficient horizontal space to render the " + "CupertinoDatePicker because the parent is too narrow at " + dart.str(size.width) + "px.\n" + "An additional " + dart.str(-dart.notNull(remainingWidth)) + "px is needed to avoid " + "overlapping columns.")}));
          }
          return true;
        }, T.VoidTobool())())) dart.assertFailed(null, I[0], 109, 14, "() {\r\n        if (childWidth < 0) {\r\n          FlutterError.reportError(\r\n            FlutterErrorDetails(\r\n              exception: FlutterError(\r\n                'Insufficient horizontal space to render the '\r\n                'CupertinoDatePicker because the parent is too narrow at '\r\n                '${size.width}px.\\n'\r\n                'An additional ${-remainingWidth}px is needed to avoid '\r\n                'overlapping columns.',\r\n              ),\r\n            ),\r\n          );\r\n        }\r\n        return true;\r\n      }()");
        this.layoutChild(index, new box.BoxConstraints.tight(new ui.Size.new(math.max(core.double, 0.0, childWidth), size.height)));
        this.positionChild(index, new ui.Offset.new(currentHorizontalOffset, 0.0));
        currentHorizontalOffset = currentHorizontalOffset + childWidth;
      }
    }
    shouldRelayout(oldDelegate) {
      date_picker._DatePickerLayoutDelegate.as(oldDelegate);
      if (oldDelegate == null) dart.nullFailed(I[0], 133, 49, "oldDelegate");
      return !dart.equals(this.columnWidths, oldDelegate.columnWidths) || this.textDirectionFactor != oldDelegate.textDirectionFactor;
    }
  };
  (date_picker._DatePickerLayoutDelegate.new = function(opts) {
    let columnWidths = opts && 'columnWidths' in opts ? opts.columnWidths : null;
    if (columnWidths == null) dart.nullFailed(I[0], 80, 19, "columnWidths");
    let textDirectionFactor = opts && 'textDirectionFactor' in opts ? opts.textDirectionFactor : null;
    if (textDirectionFactor == null) dart.nullFailed(I[0], 81, 19, "textDirectionFactor");
    this.columnWidths = columnWidths;
    this.textDirectionFactor = textDirectionFactor;
    if (!(columnWidths != null)) dart.assertFailed(null, I[0], 82, 15, "columnWidths != null");
    if (!(textDirectionFactor != null)) dart.assertFailed(null, I[0], 83, 15, "textDirectionFactor != null");
    date_picker._DatePickerLayoutDelegate.__proto__.new.call(this);
    ;
  }).prototype = date_picker._DatePickerLayoutDelegate.prototype;
  dart.addTypeTests(date_picker._DatePickerLayoutDelegate);
  dart.addTypeCaches(date_picker._DatePickerLayoutDelegate);
  dart.setMethodSignature(date_picker._DatePickerLayoutDelegate, () => ({
    __proto__: dart.getMethods(date_picker._DatePickerLayoutDelegate.__proto__),
    performLayout: dart.fnType(dart.void, [ui.Size]),
    shouldRelayout: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(date_picker._DatePickerLayoutDelegate, I[1]);
  dart.setFieldSignature(date_picker._DatePickerLayoutDelegate, () => ({
    __proto__: dart.getFields(date_picker._DatePickerLayoutDelegate.__proto__),
    columnWidths: dart.finalFieldType(core.List$(core.double)),
    textDirectionFactor: dart.finalFieldType(core.int)
  }));
  var _name$ = dart.privateName(date_picker, "_name");
  date_picker.CupertinoDatePickerMode = class CupertinoDatePickerMode extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (date_picker.CupertinoDatePickerMode.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[0], 146, 6, "index");
    if (_name == null) dart.nullFailed(I[0], 146, 6, "_name");
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = date_picker.CupertinoDatePickerMode.prototype;
  dart.addTypeTests(date_picker.CupertinoDatePickerMode);
  dart.addTypeCaches(date_picker.CupertinoDatePickerMode);
  dart.setLibraryUri(date_picker.CupertinoDatePickerMode, I[1]);
  dart.setFieldSignature(date_picker.CupertinoDatePickerMode, () => ({
    __proto__: dart.getFields(date_picker.CupertinoDatePickerMode.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(date_picker.CupertinoDatePickerMode, ['toString']);
  date_picker.CupertinoDatePickerMode.time = C[0] || CT.C0;
  date_picker.CupertinoDatePickerMode.date = C[1] || CT.C1;
  date_picker.CupertinoDatePickerMode.dateAndTime = C[2] || CT.C2;
  date_picker.CupertinoDatePickerMode.values = C[3] || CT.C3;
  date_picker._PickerColumnType = class _PickerColumnType extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (date_picker._PickerColumnType.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[0], 169, 6, "index");
    if (_name == null) dart.nullFailed(I[0], 169, 6, "_name");
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = date_picker._PickerColumnType.prototype;
  dart.addTypeTests(date_picker._PickerColumnType);
  dart.addTypeCaches(date_picker._PickerColumnType);
  dart.setLibraryUri(date_picker._PickerColumnType, I[1]);
  dart.setFieldSignature(date_picker._PickerColumnType, () => ({
    __proto__: dart.getFields(date_picker._PickerColumnType.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(date_picker._PickerColumnType, ['toString']);
  date_picker._PickerColumnType.dayOfMonth = C[4] || CT.C4;
  date_picker._PickerColumnType.month = C[5] || CT.C5;
  date_picker._PickerColumnType.year = C[6] || CT.C6;
  date_picker._PickerColumnType.date = C[7] || CT.C7;
  date_picker._PickerColumnType.hour = C[8] || CT.C8;
  date_picker._PickerColumnType.minute = C[9] || CT.C9;
  date_picker._PickerColumnType.dayPeriod = C[10] || CT.C10;
  date_picker._PickerColumnType.values = C[11] || CT.C11;
  var mode$ = dart.privateName(date_picker, "CupertinoDatePicker.mode");
  var initialDateTime$ = dart.privateName(date_picker, "CupertinoDatePicker.initialDateTime");
  var minimumDate$ = dart.privateName(date_picker, "CupertinoDatePicker.minimumDate");
  var maximumDate$ = dart.privateName(date_picker, "CupertinoDatePicker.maximumDate");
  var minimumYear$ = dart.privateName(date_picker, "CupertinoDatePicker.minimumYear");
  var maximumYear$ = dart.privateName(date_picker, "CupertinoDatePicker.maximumYear");
  var minuteInterval$ = dart.privateName(date_picker, "CupertinoDatePicker.minuteInterval");
  var use24hFormat$ = dart.privateName(date_picker, "CupertinoDatePicker.use24hFormat");
  var onDateTimeChanged$ = dart.privateName(date_picker, "CupertinoDatePicker.onDateTimeChanged");
  var backgroundColor$ = dart.privateName(date_picker, "CupertinoDatePicker.backgroundColor");
  date_picker.CupertinoDatePicker = class CupertinoDatePicker extends framework.StatefulWidget {
    get mode() {
      return this[mode$];
    }
    set mode(value) {
      super.mode = value;
    }
    get initialDateTime() {
      return this[initialDateTime$];
    }
    set initialDateTime(value) {
      super.initialDateTime = value;
    }
    get minimumDate() {
      return this[minimumDate$];
    }
    set minimumDate(value) {
      super.minimumDate = value;
    }
    get maximumDate() {
      return this[maximumDate$];
    }
    set maximumDate(value) {
      super.maximumDate = value;
    }
    get minimumYear() {
      return this[minimumYear$];
    }
    set minimumYear(value) {
      super.minimumYear = value;
    }
    get maximumYear() {
      return this[maximumYear$];
    }
    set maximumYear(value) {
      super.maximumYear = value;
    }
    get minuteInterval() {
      return this[minuteInterval$];
    }
    set minuteInterval(value) {
      super.minuteInterval = value;
    }
    get use24hFormat() {
      return this[use24hFormat$];
    }
    set use24hFormat(value) {
      super.use24hFormat = value;
    }
    get onDateTimeChanged() {
      return this[onDateTimeChanged$];
    }
    set onDateTimeChanged(value) {
      super.onDateTimeChanged = value;
    }
    get backgroundColor() {
      return this[backgroundColor$];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    createState() {
      switch (this.mode) {
        case C[0] || CT.C0:
        case C[2] || CT.C2:
        {
          return new date_picker._CupertinoDatePickerDateTimeState.new();
        }
        case C[1] || CT.C1:
        {
          return new date_picker._CupertinoDatePickerDateState.new();
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    static _getColumnWidth(columnType, localizations, context) {
      if (columnType == null) dart.nullFailed(I[0], 387, 23, "columnType");
      if (localizations == null) dart.nullFailed(I[0], 388, 28, "localizations");
      if (context == null) dart.nullFailed(I[0], 389, 18, "context");
      let longestText = "";
      switch (columnType) {
        case C[7] || CT.C7:
        {
          for (let i = 1; i <= 12; i = i + 1) {
            let date = localizations.datePickerMediumDate(new core.DateTime.new(2018, i, 25));
            if (longestText.length < date.length) longestText = date;
          }
          break;
        }
        case C[8] || CT.C8:
        {
          for (let i = 0; i < 24; i = i + 1) {
            let hour = localizations.datePickerHour(i);
            if (longestText.length < hour.length) longestText = hour;
          }
          break;
        }
        case C[9] || CT.C9:
        {
          for (let i = 0; i < 60; i = i + 1) {
            let minute = localizations.datePickerMinute(i);
            if (longestText.length < minute.length) longestText = minute;
          }
          break;
        }
        case C[10] || CT.C10:
        {
          longestText = localizations.anteMeridiemAbbreviation.length > localizations.postMeridiemAbbreviation.length ? localizations.anteMeridiemAbbreviation : localizations.postMeridiemAbbreviation;
          break;
        }
        case C[4] || CT.C4:
        {
          for (let i = 1; i <= 31; i = i + 1) {
            let dayOfMonth = localizations.datePickerDayOfMonth(i);
            if (longestText.length < dayOfMonth.length) longestText = dayOfMonth;
          }
          break;
        }
        case C[5] || CT.C5:
        {
          for (let i = 1; i <= 12; i = i + 1) {
            let month = localizations.datePickerMonth(i);
            if (longestText.length < month.length) longestText = month;
          }
          break;
        }
        case C[6] || CT.C6:
        {
          longestText = localizations.datePickerYear(2018);
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      if (!(longestText !== "")) dart.assertFailed("column type is not appropriate", I[0], 444, 12, "longestText != ''");
      let painter = new text_painter.TextPainter.new({text: new text_span.TextSpan.new({style: date_picker._themeTextStyle(context), text: longestText}), textDirection: basic.Directionality.of(context)});
      painter.layout();
      return painter.maxIntrinsicWidth;
    }
  };
  (date_picker.CupertinoDatePicker.new = function(opts) {
    let t0;
    let key = opts && 'key' in opts ? opts.key : null;
    let mode = opts && 'mode' in opts ? opts.mode : C[2] || CT.C2;
    if (mode == null) dart.nullFailed(I[0], 250, 10, "mode");
    let onDateTimeChanged = opts && 'onDateTimeChanged' in opts ? opts.onDateTimeChanged : null;
    if (onDateTimeChanged == null) dart.nullFailed(I[0], 251, 19, "onDateTimeChanged");
    let initialDateTime = opts && 'initialDateTime' in opts ? opts.initialDateTime : null;
    let minimumDate = opts && 'minimumDate' in opts ? opts.minimumDate : null;
    let maximumDate = opts && 'maximumDate' in opts ? opts.maximumDate : null;
    let minimumYear = opts && 'minimumYear' in opts ? opts.minimumYear : 1;
    if (minimumYear == null) dart.nullFailed(I[0], 255, 10, "minimumYear");
    let maximumYear = opts && 'maximumYear' in opts ? opts.maximumYear : null;
    let minuteInterval = opts && 'minuteInterval' in opts ? opts.minuteInterval : 1;
    if (minuteInterval == null) dart.nullFailed(I[0], 257, 10, "minuteInterval");
    let use24hFormat = opts && 'use24hFormat' in opts ? opts.use24hFormat : false;
    if (use24hFormat == null) dart.nullFailed(I[0], 258, 10, "use24hFormat");
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[mode$] = mode;
    this[onDateTimeChanged$] = onDateTimeChanged;
    this[minimumDate$] = minimumDate;
    this[maximumDate$] = maximumDate;
    this[minimumYear$] = minimumYear;
    this[maximumYear$] = maximumYear;
    this[minuteInterval$] = minuteInterval;
    this[use24hFormat$] = use24hFormat;
    this[backgroundColor$] = backgroundColor;
    this[initialDateTime$] = (t0 = initialDateTime, t0 == null ? new core.DateTime.now() : t0);
    if (!(mode != null)) dart.assertFailed(null, I[0], 261, 15, "mode != null");
    if (!(onDateTimeChanged != null)) dart.assertFailed(null, I[0], 262, 15, "onDateTimeChanged != null");
    if (!(minimumYear != null)) dart.assertFailed(null, I[0], 263, 15, "minimumYear != null");
    if (!(dart.notNull(minuteInterval) > 0 && (60)[$modulo](minuteInterval) === 0)) dart.assertFailed("minute interval is not a positive integer factor of 60", I[0], 265, 10, "minuteInterval > 0 && 60 % minuteInterval == 0");
    date_picker.CupertinoDatePicker.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    if (!(this.initialDateTime != null)) dart.assertFailed(null, I[0], 269, 12, "this.initialDateTime != null");
    if (!(this.mode != date_picker.CupertinoDatePickerMode.dateAndTime || this.minimumDate == null || !dart.test(this.initialDateTime.isBefore(dart.nullCheck(this.minimumDate))))) dart.assertFailed("initial date is before minimum date", I[0], 271, 7, "mode != CupertinoDatePickerMode.dateAndTime || minimumDate == null || !this.initialDateTime.isBefore(minimumDate!)");
    if (!(this.mode != date_picker.CupertinoDatePickerMode.dateAndTime || this.maximumDate == null || !dart.test(this.initialDateTime.isAfter(dart.nullCheck(this.maximumDate))))) dart.assertFailed("initial date is after maximum date", I[0], 275, 7, "mode != CupertinoDatePickerMode.dateAndTime || maximumDate == null || !this.initialDateTime.isAfter(maximumDate!)");
    if (!(this.mode != date_picker.CupertinoDatePickerMode.date || dart.notNull(this.minimumYear) >= 1 && dart.notNull(this.initialDateTime.year) >= dart.notNull(this.minimumYear))) dart.assertFailed("initial year is not greater than minimum year, or minimum year is not positive", I[0], 279, 7, "mode != CupertinoDatePickerMode.date || (minimumYear >= 1 && this.initialDateTime.year >= minimumYear)");
    if (!(this.mode != date_picker.CupertinoDatePickerMode.date || this.maximumYear == null || dart.notNull(this.initialDateTime.year) <= dart.nullCheck(this.maximumYear))) dart.assertFailed("initial year is not smaller than maximum year", I[0], 283, 7, "mode != CupertinoDatePickerMode.date || maximumYear == null || this.initialDateTime.year <= maximumYear!");
    if (!(this.mode != date_picker.CupertinoDatePickerMode.date || this.minimumDate == null || !dart.test(dart.nullCheck(this.minimumDate).isAfter(this.initialDateTime)))) dart.assertFailed("initial date " + dart.str(this.initialDateTime) + " is not greater than or equal to minimumDate " + dart.str(this.minimumDate), I[0], 287, 7, "mode != CupertinoDatePickerMode.date || minimumDate == null || !minimumDate!.isAfter(this.initialDateTime)");
    if (!(this.mode != date_picker.CupertinoDatePickerMode.date || this.maximumDate == null || !dart.test(dart.nullCheck(this.maximumDate).isBefore(this.initialDateTime)))) dart.assertFailed("initial date " + dart.str(this.initialDateTime) + " is not less than or equal to maximumDate " + dart.str(this.maximumDate), I[0], 291, 7, "mode != CupertinoDatePickerMode.date || maximumDate == null || !maximumDate!.isBefore(this.initialDateTime)");
    if (!(this.initialDateTime.minute[$modulo](this.minuteInterval) === 0)) dart.assertFailed("initial minute is not divisible by minute interval", I[0], 295, 7, "this.initialDateTime.minute % minuteInterval == 0");
  }).prototype = date_picker.CupertinoDatePicker.prototype;
  dart.addTypeTests(date_picker.CupertinoDatePicker);
  dart.addTypeCaches(date_picker.CupertinoDatePicker);
  dart.setMethodSignature(date_picker.CupertinoDatePicker, () => ({
    __proto__: dart.getMethods(date_picker.CupertinoDatePicker.__proto__),
    createState: dart.fnType(framework.State$(framework.StatefulWidget), [])
  }));
  dart.setLibraryUri(date_picker.CupertinoDatePicker, I[1]);
  dart.setFieldSignature(date_picker.CupertinoDatePicker, () => ({
    __proto__: dart.getFields(date_picker.CupertinoDatePicker.__proto__),
    mode: dart.finalFieldType(date_picker.CupertinoDatePickerMode),
    initialDateTime: dart.finalFieldType(core.DateTime),
    minimumDate: dart.finalFieldType(dart.nullable(core.DateTime)),
    maximumDate: dart.finalFieldType(dart.nullable(core.DateTime)),
    minimumYear: dart.finalFieldType(core.int),
    maximumYear: dart.finalFieldType(dart.nullable(core.int)),
    minuteInterval: dart.finalFieldType(core.int),
    use24hFormat: dart.finalFieldType(core.bool),
    onDateTimeChanged: dart.finalFieldType(dart.fnType(dart.void, [core.DateTime])),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color))
  }));
  var ___CupertinoDatePickerDateTimeState_textDirectionFactor = dart.privateName(date_picker, "_#_CupertinoDatePickerDateTimeState#textDirectionFactor");
  var ___CupertinoDatePickerDateTimeState_textDirectionFactor_isSet = dart.privateName(date_picker, "_#_CupertinoDatePickerDateTimeState#textDirectionFactor#isSet");
  var ___CupertinoDatePickerDateTimeState_localizations = dart.privateName(date_picker, "_#_CupertinoDatePickerDateTimeState#localizations");
  var ___CupertinoDatePickerDateTimeState_localizations_isSet = dart.privateName(date_picker, "_#_CupertinoDatePickerDateTimeState#localizations#isSet");
  var ___CupertinoDatePickerDateTimeState_alignCenterLeft = dart.privateName(date_picker, "_#_CupertinoDatePickerDateTimeState#alignCenterLeft");
  var ___CupertinoDatePickerDateTimeState_alignCenterLeft_isSet = dart.privateName(date_picker, "_#_CupertinoDatePickerDateTimeState#alignCenterLeft#isSet");
  var ___CupertinoDatePickerDateTimeState_alignCenterRight = dart.privateName(date_picker, "_#_CupertinoDatePickerDateTimeState#alignCenterRight");
  var ___CupertinoDatePickerDateTimeState_alignCenterRight_isSet = dart.privateName(date_picker, "_#_CupertinoDatePickerDateTimeState#alignCenterRight#isSet");
  var ___CupertinoDatePickerDateTimeState_initialDateTime = dart.privateName(date_picker, "_#_CupertinoDatePickerDateTimeState#initialDateTime");
  var ___CupertinoDatePickerDateTimeState_initialDateTime_isSet = dart.privateName(date_picker, "_#_CupertinoDatePickerDateTimeState#initialDateTime#isSet");
  var ___CupertinoDatePickerDateTimeState_dateController = dart.privateName(date_picker, "_#_CupertinoDatePickerDateTimeState#dateController");
  var ___CupertinoDatePickerDateTimeState_dateController_isSet = dart.privateName(date_picker, "_#_CupertinoDatePickerDateTimeState#dateController#isSet");
  var ___CupertinoDatePickerDateTimeState_hourController = dart.privateName(date_picker, "_#_CupertinoDatePickerDateTimeState#hourController");
  var ___CupertinoDatePickerDateTimeState_hourController_isSet = dart.privateName(date_picker, "_#_CupertinoDatePickerDateTimeState#hourController#isSet");
  var ___CupertinoDatePickerDateTimeState_minuteController = dart.privateName(date_picker, "_#_CupertinoDatePickerDateTimeState#minuteController");
  var ___CupertinoDatePickerDateTimeState_minuteController_isSet = dart.privateName(date_picker, "_#_CupertinoDatePickerDateTimeState#minuteController#isSet");
  var ___CupertinoDatePickerDateTimeState_selectedAmPm = dart.privateName(date_picker, "_#_CupertinoDatePickerDateTimeState#selectedAmPm");
  var ___CupertinoDatePickerDateTimeState_selectedAmPm_isSet = dart.privateName(date_picker, "_#_CupertinoDatePickerDateTimeState#selectedAmPm#isSet");
  var ___CupertinoDatePickerDateTimeState_meridiemRegion = dart.privateName(date_picker, "_#_CupertinoDatePickerDateTimeState#meridiemRegion");
  var ___CupertinoDatePickerDateTimeState_meridiemRegion_isSet = dart.privateName(date_picker, "_#_CupertinoDatePickerDateTimeState#meridiemRegion#isSet");
  var ___CupertinoDatePickerDateTimeState_meridiemController = dart.privateName(date_picker, "_#_CupertinoDatePickerDateTimeState#meridiemController");
  var ___CupertinoDatePickerDateTimeState_meridiemController_isSet = dart.privateName(date_picker, "_#_CupertinoDatePickerDateTimeState#meridiemController#isSet");
  var _selectedHourIndex = dart.privateName(date_picker, "_selectedHourIndex");
  var _selectedHour = dart.privateName(date_picker, "_selectedHour");
  var _isHourRegionFlipped = dart.privateName(date_picker, "_isHourRegionFlipped");
  var _handleSystemFontsChange = dart.privateName(date_picker, "_handleSystemFontsChange");
  var _getEstimatedColumnWidth = dart.privateName(date_picker, "_getEstimatedColumnWidth");
  var _onSelectedItemChange = dart.privateName(date_picker, "_onSelectedItemChange");
  var _pickerDidStopScrolling = dart.privateName(date_picker, "_pickerDidStopScrolling");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  var _buildMediumDatePicker = dart.privateName(date_picker, "_buildMediumDatePicker");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var _isValidHour = dart.privateName(date_picker, "_isValidHour");
  var _buildHourPicker = dart.privateName(date_picker, "_buildHourPicker");
  var _buildMinutePicker = dart.privateName(date_picker, "_buildMinutePicker");
  var _buildAmPmPicker = dart.privateName(date_picker, "_buildAmPmPicker");
  var _scrollToDate = dart.privateName(date_picker, "_scrollToDate");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  date_picker._CupertinoDatePickerDateTimeState = class _CupertinoDatePickerDateTimeState extends framework.State$(date_picker.CupertinoDatePicker) {
    get textDirectionFactor() {
      let t0;
      return dart.test(this[___CupertinoDatePickerDateTimeState_textDirectionFactor_isSet]) ? (t0 = this[___CupertinoDatePickerDateTimeState_textDirectionFactor], t0) : dart.throw(new _internal.LateError.fieldNI("textDirectionFactor"));
    }
    set textDirectionFactor(t0) {
      if (t0 == null) dart.nullFailed(I[0], 470, 12, "null");
      this[___CupertinoDatePickerDateTimeState_textDirectionFactor_isSet] = true;
      this[___CupertinoDatePickerDateTimeState_textDirectionFactor] = t0;
    }
    get localizations() {
      let t1;
      return dart.test(this[___CupertinoDatePickerDateTimeState_localizations_isSet]) ? (t1 = this[___CupertinoDatePickerDateTimeState_localizations], t1) : dart.throw(new _internal.LateError.fieldNI("localizations"));
    }
    set localizations(t1) {
      if (t1 == null) dart.nullFailed(I[0], 471, 31, "null");
      this[___CupertinoDatePickerDateTimeState_localizations_isSet] = true;
      this[___CupertinoDatePickerDateTimeState_localizations] = t1;
    }
    get alignCenterLeft() {
      let t2;
      return dart.test(this[___CupertinoDatePickerDateTimeState_alignCenterLeft_isSet]) ? (t2 = this[___CupertinoDatePickerDateTimeState_alignCenterLeft], t2) : dart.throw(new _internal.LateError.fieldNI("alignCenterLeft"));
    }
    set alignCenterLeft(t2) {
      if (t2 == null) dart.nullFailed(I[0], 475, 18, "null");
      this[___CupertinoDatePickerDateTimeState_alignCenterLeft_isSet] = true;
      this[___CupertinoDatePickerDateTimeState_alignCenterLeft] = t2;
    }
    get alignCenterRight() {
      let t3;
      return dart.test(this[___CupertinoDatePickerDateTimeState_alignCenterRight_isSet]) ? (t3 = this[___CupertinoDatePickerDateTimeState_alignCenterRight], t3) : dart.throw(new _internal.LateError.fieldNI("alignCenterRight"));
    }
    set alignCenterRight(t3) {
      if (t3 == null) dart.nullFailed(I[0], 476, 18, "null");
      this[___CupertinoDatePickerDateTimeState_alignCenterRight_isSet] = true;
      this[___CupertinoDatePickerDateTimeState_alignCenterRight] = t3;
    }
    get initialDateTime() {
      let t4;
      return dart.test(this[___CupertinoDatePickerDateTimeState_initialDateTime_isSet]) ? (t4 = this[___CupertinoDatePickerDateTimeState_initialDateTime], t4) : dart.throw(new _internal.LateError.fieldNI("initialDateTime"));
    }
    set initialDateTime(t4) {
      if (t4 == null) dart.nullFailed(I[0], 480, 17, "null");
      this[___CupertinoDatePickerDateTimeState_initialDateTime_isSet] = true;
      this[___CupertinoDatePickerDateTimeState_initialDateTime] = t4;
    }
    get selectedDayFromInitial() {
      switch (this.widget.mode) {
        case C[2] || CT.C2:
        {
          return dart.test(this.dateController.hasClients) ? this.dateController.selectedItem : 0;
        }
        case C[0] || CT.C0:
        {
          return 0;
        }
        case C[1] || CT.C1:
        {
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      if (!false) dart.assertFailed(dart.str(this[$runtimeType]) + " is only meant for dateAndTime mode or time mode", I[0], 494, 7, "false");
      return 0;
    }
    get dateController() {
      let t5;
      return dart.test(this[___CupertinoDatePickerDateTimeState_dateController_isSet]) ? (t5 = this[___CupertinoDatePickerDateTimeState_dateController], t5) : dart.throw(new _internal.LateError.fieldNI("dateController"));
    }
    set dateController(t5) {
      if (t5 == null) dart.nullFailed(I[0], 500, 36, "null");
      this[___CupertinoDatePickerDateTimeState_dateController_isSet] = true;
      this[___CupertinoDatePickerDateTimeState_dateController] = t5;
    }
    get selectedHour() {
      return this[_selectedHour](this.selectedAmPm, this[_selectedHourIndex]);
    }
    get [_selectedHourIndex]() {
      return dart.test(this.hourController.hasClients) ? this.hourController.selectedItem[$modulo](24) : this.initialDateTime.hour;
    }
    [_selectedHour](selectedAmPm, selectedHour) {
      if (selectedAmPm == null) dart.nullFailed(I[0], 507, 25, "selectedAmPm");
      if (selectedHour == null) dart.nullFailed(I[0], 507, 43, "selectedHour");
      return dart.test(this[_isHourRegionFlipped](selectedAmPm)) ? (dart.notNull(selectedHour) + 12)[$modulo](24) : selectedHour;
    }
    get hourController() {
      let t6;
      return dart.test(this[___CupertinoDatePickerDateTimeState_hourController_isSet]) ? (t6 = this[___CupertinoDatePickerDateTimeState_hourController], t6) : dart.throw(new _internal.LateError.fieldNI("hourController"));
    }
    set hourController(t6) {
      if (t6 == null) dart.nullFailed(I[0], 511, 36, "null");
      this[___CupertinoDatePickerDateTimeState_hourController_isSet] = true;
      this[___CupertinoDatePickerDateTimeState_hourController] = t6;
    }
    get selectedMinute() {
      return dart.test(this.minuteController.hasClients) ? (dart.notNull(this.minuteController.selectedItem) * dart.notNull(this.widget.minuteInterval))[$modulo](60) : this.initialDateTime.minute;
    }
    get minuteController() {
      let t7;
      return dart.test(this[___CupertinoDatePickerDateTimeState_minuteController_isSet]) ? (t7 = this[___CupertinoDatePickerDateTimeState_minuteController], t7) : dart.throw(new _internal.LateError.fieldNI("minuteController"));
    }
    set minuteController(t7) {
      if (t7 == null) dart.nullFailed(I[0], 520, 36, "null");
      this[___CupertinoDatePickerDateTimeState_minuteController_isSet] = true;
      this[___CupertinoDatePickerDateTimeState_minuteController] = t7;
    }
    get selectedAmPm() {
      let t8;
      return dart.test(this[___CupertinoDatePickerDateTimeState_selectedAmPm_isSet]) ? (t8 = this[___CupertinoDatePickerDateTimeState_selectedAmPm], t8) : dart.throw(new _internal.LateError.fieldNI("selectedAmPm"));
    }
    set selectedAmPm(t8) {
      if (t8 == null) dart.nullFailed(I[0], 528, 12, "null");
      this[___CupertinoDatePickerDateTimeState_selectedAmPm_isSet] = true;
      this[___CupertinoDatePickerDateTimeState_selectedAmPm] = t8;
    }
    get isHourRegionFlipped() {
      return this[_isHourRegionFlipped](this.selectedAmPm);
    }
    [_isHourRegionFlipped](selectedAmPm) {
      if (selectedAmPm == null) dart.nullFailed(I[0], 531, 33, "selectedAmPm");
      return selectedAmPm != this.meridiemRegion;
    }
    get meridiemRegion() {
      let t9;
      return dart.test(this[___CupertinoDatePickerDateTimeState_meridiemRegion_isSet]) ? (t9 = this[___CupertinoDatePickerDateTimeState_meridiemRegion], t9) : dart.throw(new _internal.LateError.fieldNI("meridiemRegion"));
    }
    set meridiemRegion(t9) {
      if (t9 == null) dart.nullFailed(I[0], 541, 12, "null");
      this[___CupertinoDatePickerDateTimeState_meridiemRegion_isSet] = true;
      this[___CupertinoDatePickerDateTimeState_meridiemRegion] = t9;
    }
    get meridiemController() {
      let t10;
      return dart.test(this[___CupertinoDatePickerDateTimeState_meridiemController_isSet]) ? (t10 = this[___CupertinoDatePickerDateTimeState_meridiemController], t10) : dart.throw(new _internal.LateError.fieldNI("meridiemController"));
    }
    set meridiemController(t10) {
      if (t10 == null) dart.nullFailed(I[0], 546, 36, "null");
      this[___CupertinoDatePickerDateTimeState_meridiemController_isSet] = true;
      this[___CupertinoDatePickerDateTimeState_meridiemController] = t10;
    }
    get isScrolling() {
      return dart.test(this.isDatePickerScrolling) || dart.test(this.isHourPickerScrolling) || dart.test(this.isMinutePickerScrolling) || dart.test(this.isMeridiemPickerScrolling);
    }
    initState() {
      super.initState();
      this.initialDateTime = this.widget.initialDateTime;
      this.selectedAmPm = (dart.notNull(this.initialDateTime.hour) / 12)[$truncate]();
      this.meridiemRegion = this.selectedAmPm;
      this.meridiemController = new list_wheel_scroll_view.FixedExtentScrollController.new({initialItem: this.selectedAmPm});
      this.hourController = new list_wheel_scroll_view.FixedExtentScrollController.new({initialItem: this.initialDateTime.hour});
      this.minuteController = new list_wheel_scroll_view.FixedExtentScrollController.new({initialItem: (dart.notNull(this.initialDateTime.minute) / dart.notNull(this.widget.minuteInterval))[$truncate]()});
      this.dateController = new list_wheel_scroll_view.FixedExtentScrollController.new({initialItem: 0});
      dart.nullCheck(binding.PaintingBinding.instance).systemFonts.addListener(dart.bind(this, _handleSystemFontsChange));
    }
    [_handleSystemFontsChange]() {
      this.setState(dart.fn(() => {
        this.estimatedColumnWidths[$clear]();
      }, T.VoidTovoid()));
    }
    dispose() {
      this.dateController.dispose();
      this.hourController.dispose();
      this.minuteController.dispose();
      this.meridiemController.dispose();
      dart.nullCheck(binding.PaintingBinding.instance).systemFonts.removeListener(dart.bind(this, _handleSystemFontsChange));
      super.dispose();
    }
    didUpdateWidget(oldWidget) {
      date_picker.CupertinoDatePicker.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[0], 604, 44, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (!(oldWidget.mode == this.widget.mode)) dart.assertFailed("The " + dart.str(this[$runtimeType]) + "'s mode cannot change once it's built.", I[0], 608, 7, "oldWidget.mode == widget.mode");
      if (!dart.test(this.widget.use24hFormat) && dart.test(oldWidget.use24hFormat)) {
        this.meridiemController.dispose();
        this.meridiemController = new list_wheel_scroll_view.FixedExtentScrollController.new({initialItem: this.selectedAmPm});
      }
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      this.textDirectionFactor = basic.Directionality.of(this.context) == ui.TextDirection.ltr ? 1 : -1;
      this.localizations = localizations.CupertinoLocalizations.of(this.context);
      this.alignCenterLeft = this.textDirectionFactor === 1 ? alignment.Alignment.centerLeft : alignment.Alignment.centerRight;
      this.alignCenterRight = this.textDirectionFactor === 1 ? alignment.Alignment.centerRight : alignment.Alignment.centerLeft;
      this.estimatedColumnWidths[$clear]();
    }
    [_getEstimatedColumnWidth](columnType) {
      if (columnType == null) dart.nullFailed(I[0], 634, 53, "columnType");
      if (this.estimatedColumnWidths[$_get](columnType.index) == null) {
        this.estimatedColumnWidths[$_set](columnType.index, date_picker.CupertinoDatePicker._getColumnWidth(columnType, this.localizations, this.context));
      }
      return dart.nullCheck(this.estimatedColumnWidths[$_get](columnType.index));
    }
    get selectedDateTime() {
      return new core.DateTime.new(this.initialDateTime.year, this.initialDateTime.month, dart.notNull(this.initialDateTime.day) + dart.notNull(this.selectedDayFromInitial), this.selectedHour, this.selectedMinute);
    }
    [_onSelectedItemChange](index) {
      let t11, t11$, t12, t11$0;
      if (index == null) dart.nullFailed(I[0], 655, 34, "index");
      let selected = this.selectedDateTime;
      let isDateInvalid = (t11 = this.widget.minimumDate, t11 == null ? null : t11.isAfter(selected)) === true || (t11$ = this.widget.maximumDate, t11$ == null ? null : t11$.isBefore(selected)) === true;
      if (isDateInvalid) return;
      t11$0 = this.widget;
      t12 = selected;
      t11$0.onDateTimeChanged(t12);
    }
    [_buildMediumDatePicker](offAxisFraction, itemPositioningBuilder, selectionOverlay) {
      if (offAxisFraction == null) dart.nullFailed(I[0], 668, 40, "offAxisFraction");
      if (itemPositioningBuilder == null) dart.nullFailed(I[0], 668, 75, "itemPositioningBuilder");
      if (selectionOverlay == null) dart.nullFailed(I[0], 668, 106, "selectionOverlay");
      return new (T.NotificationListenerOfScrollNotification()).new({onNotification: dart.fn(notification => {
          if (notification == null) dart.nullFailed(I[0], 670, 43, "notification");
          if (scroll_notification.ScrollStartNotification.is(notification)) {
            this.isDatePickerScrolling = true;
          } else if (scroll_notification.ScrollEndNotification.is(notification)) {
            this.isDatePickerScrolling = false;
            this[_pickerDidStopScrolling]();
          }
          return false;
        }, T.ScrollNotificationTobool()), child: new picker.CupertinoPicker.builder({scrollController: this.dateController, offAxisFraction: offAxisFraction, itemExtent: 32, useMagnifier: true, magnification: 1.119047619047619, backgroundColor: this.widget.backgroundColor, squeeze: 1.25, onSelectedItemChanged: dart.fn(index => {
            if (index == null) dart.nullFailed(I[0], 688, 37, "index");
            this[_onSelectedItemChange](index);
          }, T.intTovoid()), itemBuilder: dart.fn((context, index) => {
            let t11, t11$;
            if (context == null) dart.nullFailed(I[0], 691, 36, "context");
            if (index == null) dart.nullFailed(I[0], 691, 49, "index");
            let rangeStart = new core.DateTime.new(this.initialDateTime.year, this.initialDateTime.month, dart.notNull(this.initialDateTime.day) + dart.notNull(index));
            let rangeEnd = new core.DateTime.new(this.initialDateTime.year, this.initialDateTime.month, dart.notNull(this.initialDateTime.day) + dart.notNull(index) + 1);
            let now = new core.DateTime.now();
            if ((t11 = this.widget.minimumDate, t11 == null ? null : t11.isBefore(rangeEnd)) === false) return null;
            if ((t11$ = this.widget.maximumDate, t11$ == null ? null : t11$.isAfter(rangeStart)) === false) return null;
            let dateText = rangeStart._equals(new core.DateTime.new(now.year, now.month, now.day)) ? this.localizations.todayLabel : this.localizations.datePickerMediumDate(rangeStart);
            return itemPositioningBuilder(context, new text$.Text.new(dateText, {style: date_picker._themeTextStyle(context), $creationLocationd_0dea112b090073317d4: C[12] || CT.C12}));
          }, T.BuildContextAndintToWidgetN()), selectionOverlay: selectionOverlay, $creationLocationd_0dea112b090073317d4: C[16] || CT.C16}), $creationLocationd_0dea112b090073317d4: C[28] || CT.C28});
    }
    [_isValidHour](meridiemIndex, hourIndex) {
      let t11, t11$, t11$0, t11$1;
      if (meridiemIndex == null) dart.nullFailed(I[0], 729, 25, "meridiemIndex");
      if (hourIndex == null) dart.nullFailed(I[0], 729, 44, "hourIndex");
      let rangeStart = new core.DateTime.new(this.initialDateTime.year, this.initialDateTime.month, dart.notNull(this.initialDateTime.day) + dart.notNull(this.selectedDayFromInitial), this[_selectedHour](meridiemIndex, hourIndex), 0);
      let rangeEnd = rangeStart.add(C[32] || CT.C32);
      return dart.test((t11$ = (t11 = this.widget.minimumDate, t11 == null ? null : t11.isBefore(rangeEnd)), t11$ == null ? true : t11$)) && !dart.test((t11$1 = (t11$0 = this.widget.maximumDate, t11$0 == null ? null : t11$0.isBefore(rangeStart)), t11$1 == null ? false : t11$1));
    }
    [_buildHourPicker](offAxisFraction, itemPositioningBuilder, selectionOverlay) {
      if (offAxisFraction == null) dart.nullFailed(I[0], 745, 34, "offAxisFraction");
      if (itemPositioningBuilder == null) dart.nullFailed(I[0], 745, 69, "itemPositioningBuilder");
      if (selectionOverlay == null) dart.nullFailed(I[0], 745, 100, "selectionOverlay");
      return new (T.NotificationListenerOfScrollNotification()).new({onNotification: dart.fn(notification => {
          if (notification == null) dart.nullFailed(I[0], 747, 43, "notification");
          if (scroll_notification.ScrollStartNotification.is(notification)) {
            this.isHourPickerScrolling = true;
          } else if (scroll_notification.ScrollEndNotification.is(notification)) {
            this.isHourPickerScrolling = false;
            this[_pickerDidStopScrolling]();
          }
          return false;
        }, T.ScrollNotificationTobool()), child: new picker.CupertinoPicker.new({scrollController: this.hourController, offAxisFraction: offAxisFraction, itemExtent: 32, useMagnifier: true, magnification: 1.119047619047619, backgroundColor: this.widget.backgroundColor, squeeze: 1.25, onSelectedItemChanged: dart.fn(index => {
            if (index == null) dart.nullFailed(I[0], 765, 37, "index");
            let regionChanged = this.meridiemRegion !== (dart.notNull(index) / 12)[$truncate]();
            let debugIsFlipped = this.isHourRegionFlipped;
            if (regionChanged) {
              this.meridiemRegion = (dart.notNull(index) / 12)[$truncate]();
              this.selectedAmPm = 1 - dart.notNull(this.selectedAmPm);
            }
            if (!dart.test(this.widget.use24hFormat) && regionChanged) {
              this.meridiemController.animateToItem(this.selectedAmPm, {duration: C[33] || CT.C33, curve: curves.Curves.easeOut});
            } else {
              this[_onSelectedItemChange](index);
            }
            if (!(debugIsFlipped == this.isHourRegionFlipped)) dart.assertFailed(null, I[0], 789, 18, "debugIsFlipped == isHourRegionFlipped");
          }, T.intTovoid()), children: T.ListOfWidget().generate(24, dart.fn(index => {
            if (index == null) dart.nullFailed(I[0], 791, 50, "index");
            let hour = dart.test(this.isHourRegionFlipped) ? (dart.notNull(index) + 12)[$modulo](24) : index;
            let displayHour = dart.test(this.widget.use24hFormat) ? hour : (dart.notNull(hour) + 11)[$modulo](12) + 1;
            return itemPositioningBuilder(this.context, new text$.Text.new(this.localizations.datePickerHour(displayHour), {semanticsLabel: this.localizations.datePickerHourSemanticsLabel(displayHour), style: date_picker._themeTextStyle(this.context, {isValid: this[_isValidHour](this.selectedAmPm, index)}), $creationLocationd_0dea112b090073317d4: C[34] || CT.C34}));
          }, T.intToWidget())), looping: true, selectionOverlay: selectionOverlay, $creationLocationd_0dea112b090073317d4: C[39] || CT.C39}), $creationLocationd_0dea112b090073317d4: C[52] || CT.C52});
    }
    [_buildMinutePicker](offAxisFraction, itemPositioningBuilder, selectionOverlay) {
      if (offAxisFraction == null) dart.nullFailed(I[0], 810, 36, "offAxisFraction");
      if (itemPositioningBuilder == null) dart.nullFailed(I[0], 810, 71, "itemPositioningBuilder");
      if (selectionOverlay == null) dart.nullFailed(I[0], 810, 102, "selectionOverlay");
      return new (T.NotificationListenerOfScrollNotification()).new({onNotification: dart.fn(notification => {
          if (notification == null) dart.nullFailed(I[0], 812, 43, "notification");
          if (scroll_notification.ScrollStartNotification.is(notification)) {
            this.isMinutePickerScrolling = true;
          } else if (scroll_notification.ScrollEndNotification.is(notification)) {
            this.isMinutePickerScrolling = false;
            this[_pickerDidStopScrolling]();
          }
          return false;
        }, T.ScrollNotificationTobool()), child: new picker.CupertinoPicker.new({scrollController: this.minuteController, offAxisFraction: offAxisFraction, itemExtent: 32, useMagnifier: true, magnification: 1.119047619047619, backgroundColor: this.widget.backgroundColor, squeeze: 1.25, onSelectedItemChanged: dart.bind(this, _onSelectedItemChange), children: T.ListOfWidget().generate((60 / dart.notNull(this.widget.minuteInterval))[$truncate](), dart.fn(index => {
            let t11, t11$, t11$0, t11$1;
            if (index == null) dart.nullFailed(I[0], 831, 75, "index");
            let minute = dart.notNull(index) * dart.notNull(this.widget.minuteInterval);
            let date = new core.DateTime.new(this.initialDateTime.year, this.initialDateTime.month, dart.notNull(this.initialDateTime.day) + dart.notNull(this.selectedDayFromInitial), this.selectedHour, minute);
            let isInvalidMinute = dart.test((t11$ = (t11 = this.widget.minimumDate, t11 == null ? null : t11.isAfter(date)), t11$ == null ? false : t11$)) || dart.test((t11$1 = (t11$0 = this.widget.maximumDate, t11$0 == null ? null : t11$0.isBefore(date)), t11$1 == null ? false : t11$1));
            return itemPositioningBuilder(this.context, new text$.Text.new(this.localizations.datePickerMinute(minute), {semanticsLabel: this.localizations.datePickerMinuteSemanticsLabel(minute), style: date_picker._themeTextStyle(this.context, {isValid: !isInvalidMinute}), $creationLocationd_0dea112b090073317d4: C[56] || CT.C56}));
          }, T.intToWidget())), looping: true, selectionOverlay: selectionOverlay, $creationLocationd_0dea112b090073317d4: C[61] || CT.C61}), $creationLocationd_0dea112b090073317d4: C[74] || CT.C74});
    }
    [_buildAmPmPicker](offAxisFraction, itemPositioningBuilder, selectionOverlay) {
      if (offAxisFraction == null) dart.nullFailed(I[0], 860, 34, "offAxisFraction");
      if (itemPositioningBuilder == null) dart.nullFailed(I[0], 860, 69, "itemPositioningBuilder");
      if (selectionOverlay == null) dart.nullFailed(I[0], 860, 100, "selectionOverlay");
      return new (T.NotificationListenerOfScrollNotification()).new({onNotification: dart.fn(notification => {
          if (notification == null) dart.nullFailed(I[0], 862, 43, "notification");
          if (scroll_notification.ScrollStartNotification.is(notification)) {
            this.isMeridiemPickerScrolling = true;
          } else if (scroll_notification.ScrollEndNotification.is(notification)) {
            this.isMeridiemPickerScrolling = false;
            this[_pickerDidStopScrolling]();
          }
          return false;
        }, T.ScrollNotificationTobool()), child: new picker.CupertinoPicker.new({scrollController: this.meridiemController, offAxisFraction: offAxisFraction, itemExtent: 32, useMagnifier: true, magnification: 1.119047619047619, backgroundColor: this.widget.backgroundColor, squeeze: 1.25, onSelectedItemChanged: dart.fn(index => {
            if (index == null) dart.nullFailed(I[0], 880, 37, "index");
            this.selectedAmPm = index;
            if (!(this.selectedAmPm === 0 || this.selectedAmPm === 1)) dart.assertFailed(null, I[0], 882, 18, "selectedAmPm == 0 || selectedAmPm == 1");
            this[_onSelectedItemChange](index);
          }, T.intTovoid()), children: T.ListOfWidget().generate(2, dart.fn(index => {
            if (index == null) dart.nullFailed(I[0], 885, 49, "index");
            return itemPositioningBuilder(this.context, new text$.Text.new(index === 0 ? this.localizations.anteMeridiemAbbreviation : this.localizations.postMeridiemAbbreviation, {style: date_picker._themeTextStyle(this.context, {isValid: this[_isValidHour](index, this[_selectedHourIndex])}), $creationLocationd_0dea112b090073317d4: C[78] || CT.C78}));
          }, T.intToWidget())), selectionOverlay: selectionOverlay, $creationLocationd_0dea112b090073317d4: C[82] || CT.C82}), $creationLocationd_0dea112b090073317d4: C[94] || CT.C94});
    }
    [_pickerDidStopScrolling]() {
      let t11, t11$, t11$0, t11$1;
      this.setState(dart.fn(() => {
      }, T.VoidTovoid()));
      if (dart.test(this.isScrolling)) return;
      let selectedDate = this.selectedDateTime;
      let minCheck = (t11$ = (t11 = this.widget.minimumDate, t11 == null ? null : t11.isAfter(selectedDate)), t11$ == null ? false : t11$);
      let maxCheck = (t11$1 = (t11$0 = this.widget.maximumDate, t11$0 == null ? null : t11$0.isBefore(selectedDate)), t11$1 == null ? false : t11$1);
      if (dart.test(minCheck) || dart.test(maxCheck)) {
        let targetDate = dart.test(minCheck) ? dart.nullCheck(this.widget.minimumDate) : dart.nullCheck(this.widget.maximumDate);
        this[_scrollToDate](targetDate, selectedDate);
      }
    }
    [_scrollToDate](newDate, fromDate) {
      if (newDate == null) dart.nullFailed(I[0], 923, 31, "newDate");
      if (fromDate == null) dart.nullFailed(I[0], 923, 49, "fromDate");
      if (!(newDate != null)) dart.assertFailed(null, I[0], 924, 12, "newDate != null");
      dart.nullCheck(binding$.SchedulerBinding.instance).addPostFrameCallback(dart.fn(timestamp => {
        if (timestamp == null) dart.nullFailed(I[0], 925, 63, "timestamp");
        if (fromDate.year != newDate.year || fromDate.month != newDate.month || fromDate.day != newDate.day) {
          date_picker._animateColumnControllerToItem(this.dateController, this.selectedDayFromInitial);
        }
        if (fromDate.hour != newDate.hour) {
          let needsMeridiemChange = !dart.test(this.widget.use24hFormat) && (dart.notNull(fromDate.hour) / 12)[$truncate]() !== (dart.notNull(newDate.hour) / 12)[$truncate]();
          if (needsMeridiemChange) {
            date_picker._animateColumnControllerToItem(this.meridiemController, 1 - dart.notNull(this.meridiemController.selectedItem));
            let newItem = (dart.notNull(this.hourController.selectedItem) / 12)[$truncate]() * 12 + (dart.notNull(this.hourController.selectedItem) + dart.notNull(newDate.hour) - dart.notNull(fromDate.hour))[$modulo](12);
            date_picker._animateColumnControllerToItem(this.hourController, newItem);
          } else {
            date_picker._animateColumnControllerToItem(this.hourController, dart.notNull(this.hourController.selectedItem) + dart.notNull(newDate.hour) - dart.notNull(fromDate.hour));
          }
        }
        if (fromDate.minute != newDate.minute) {
          date_picker._animateColumnControllerToItem(this.minuteController, newDate.minute);
        }
      }, T.DurationTovoid()));
    }
    build(context) {
      if (context == null) dart.nullFailed(I[0], 956, 29, "context");
      let columnWidths = T.JSArrayOfdouble().of([this[_getEstimatedColumnWidth](date_picker._PickerColumnType.hour), this[_getEstimatedColumnWidth](date_picker._PickerColumnType.minute)]);
      let pickerBuilders = basic.Directionality.of(context) == ui.TextDirection.rtl ? T.JSArrayOfdoubleAndFnAndWidgetToWidget().of([dart.bind(this, _buildMinutePicker), dart.bind(this, _buildHourPicker)]) : T.JSArrayOfdoubleAndFnAndWidgetToWidget().of([dart.bind(this, _buildHourPicker), dart.bind(this, _buildMinutePicker)]);
      if (!dart.test(this.widget.use24hFormat)) {
        if (this.localizations.datePickerDateTimeOrder == localizations.DatePickerDateTimeOrder.date_time_dayPeriod || this.localizations.datePickerDateTimeOrder == localizations.DatePickerDateTimeOrder.time_dayPeriod_date) {
          pickerBuilders[$add](dart.bind(this, _buildAmPmPicker));
          columnWidths[$add](this[_getEstimatedColumnWidth](date_picker._PickerColumnType.dayPeriod));
        } else {
          pickerBuilders[$insert](0, dart.bind(this, _buildAmPmPicker));
          columnWidths[$insert](0, this[_getEstimatedColumnWidth](date_picker._PickerColumnType.dayPeriod));
        }
      }
      if (this.widget.mode == date_picker.CupertinoDatePickerMode.dateAndTime) {
        if (this.localizations.datePickerDateTimeOrder == localizations.DatePickerDateTimeOrder.time_dayPeriod_date || this.localizations.datePickerDateTimeOrder == localizations.DatePickerDateTimeOrder.dayPeriod_time_date) {
          pickerBuilders[$add](dart.bind(this, _buildMediumDatePicker));
          columnWidths[$add](this[_getEstimatedColumnWidth](date_picker._PickerColumnType.date));
        } else {
          pickerBuilders[$insert](0, dart.bind(this, _buildMediumDatePicker));
          columnWidths[$insert](0, this[_getEstimatedColumnWidth](date_picker._PickerColumnType.date));
        }
      }
      let pickers = T.JSArrayOfWidget().of([]);
      for (let i = 0; i < dart.notNull(columnWidths[$length]); i = i + 1) {
        let offAxisFraction = 0.0;
        let selectionOverlay = date_picker._centerSelectionOverlay;
        if (i === 0) {
          offAxisFraction = -0.45 * dart.notNull(this.textDirectionFactor);
          selectionOverlay = date_picker._leftSelectionOverlay;
        } else if (i >= 2 || columnWidths[$length] === 2) offAxisFraction = 0.45 * dart.notNull(this.textDirectionFactor);
        let padding = C[98] || CT.C98;
        if (i === dart.notNull(columnWidths[$length]) - 1) {
          padding = padding.flipped;
          selectionOverlay = date_picker._rightSelectionOverlay;
        }
        if (this.textDirectionFactor === -1) padding = padding.flipped;
        pickers[$add](new basic.LayoutId.new({id: i, child: pickerBuilders[$_get](i)(offAxisFraction, dart.fn((context, child) => {
            if (context == null) dart.nullFailed(I[0], 1015, 25, "context");
            return new container.Container.new({alignment: i === dart.notNull(columnWidths[$length]) - 1 ? this.alignCenterLeft : this.alignCenterRight, padding: padding, child: new container.Container.new({alignment: i === dart.notNull(columnWidths[$length]) - 1 ? this.alignCenterLeft : this.alignCenterRight, width: i === 0 || i === dart.notNull(columnWidths[$length]) - 1 ? null : dart.notNull(columnWidths[$_get](i)) + 12, child: child, $creationLocationd_0dea112b090073317d4: C[99] || CT.C99}), $creationLocationd_0dea112b090073317d4: C[104] || CT.C104});
          }, T.BuildContextAndWidgetNToContainer()), selectionOverlay), $creationLocationd_0dea112b090073317d4: C[109] || CT.C109}));
      }
      return new media_query.MediaQuery.new({data: media_query.MediaQuery.of(context).copyWith({textScaleFactor: 1.0}), child: text$.DefaultTextStyle.merge({style: date_picker._kDefaultPickerTextStyle, child: new basic.CustomMultiChildLayout.new({delegate: new date_picker._DatePickerLayoutDelegate.new({columnWidths: columnWidths, textDirectionFactor: this.textDirectionFactor}), children: pickers, $creationLocationd_0dea112b090073317d4: C[113] || CT.C113})}), $creationLocationd_0dea112b090073317d4: C[117] || CT.C117});
    }
  };
  (date_picker._CupertinoDatePickerDateTimeState.new = function() {
    this[___CupertinoDatePickerDateTimeState_textDirectionFactor] = null;
    this[___CupertinoDatePickerDateTimeState_textDirectionFactor_isSet] = false;
    this[___CupertinoDatePickerDateTimeState_localizations] = null;
    this[___CupertinoDatePickerDateTimeState_localizations_isSet] = false;
    this[___CupertinoDatePickerDateTimeState_alignCenterLeft] = null;
    this[___CupertinoDatePickerDateTimeState_alignCenterLeft_isSet] = false;
    this[___CupertinoDatePickerDateTimeState_alignCenterRight] = null;
    this[___CupertinoDatePickerDateTimeState_alignCenterRight_isSet] = false;
    this[___CupertinoDatePickerDateTimeState_initialDateTime] = null;
    this[___CupertinoDatePickerDateTimeState_initialDateTime_isSet] = false;
    this[___CupertinoDatePickerDateTimeState_dateController] = null;
    this[___CupertinoDatePickerDateTimeState_dateController_isSet] = false;
    this[___CupertinoDatePickerDateTimeState_hourController] = null;
    this[___CupertinoDatePickerDateTimeState_hourController_isSet] = false;
    this[___CupertinoDatePickerDateTimeState_minuteController] = null;
    this[___CupertinoDatePickerDateTimeState_minuteController_isSet] = false;
    this[___CupertinoDatePickerDateTimeState_selectedAmPm] = null;
    this[___CupertinoDatePickerDateTimeState_selectedAmPm_isSet] = false;
    this[___CupertinoDatePickerDateTimeState_meridiemRegion] = null;
    this[___CupertinoDatePickerDateTimeState_meridiemRegion_isSet] = false;
    this[___CupertinoDatePickerDateTimeState_meridiemController] = null;
    this[___CupertinoDatePickerDateTimeState_meridiemController_isSet] = false;
    this.isDatePickerScrolling = false;
    this.isHourPickerScrolling = false;
    this.isMinutePickerScrolling = false;
    this.isMeridiemPickerScrolling = false;
    this.estimatedColumnWidths = new (T.IdentityMapOfint$double()).new();
    date_picker._CupertinoDatePickerDateTimeState.__proto__.new.call(this);
    ;
  }).prototype = date_picker._CupertinoDatePickerDateTimeState.prototype;
  dart.addTypeTests(date_picker._CupertinoDatePickerDateTimeState);
  dart.addTypeCaches(date_picker._CupertinoDatePickerDateTimeState);
  dart.setMethodSignature(date_picker._CupertinoDatePickerDateTimeState, () => ({
    __proto__: dart.getMethods(date_picker._CupertinoDatePickerDateTimeState.__proto__),
    [_selectedHour]: dart.fnType(core.int, [core.int, core.int]),
    [_isHourRegionFlipped]: dart.fnType(core.bool, [core.int]),
    [_handleSystemFontsChange]: dart.fnType(dart.void, []),
    [_getEstimatedColumnWidth]: dart.fnType(core.double, [date_picker._PickerColumnType]),
    [_onSelectedItemChange]: dart.fnType(dart.void, [core.int]),
    [_buildMediumDatePicker]: dart.fnType(framework.Widget, [core.double, dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)]), framework.Widget]),
    [_isValidHour]: dart.fnType(core.bool, [core.int, core.int]),
    [_buildHourPicker]: dart.fnType(framework.Widget, [core.double, dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)]), framework.Widget]),
    [_buildMinutePicker]: dart.fnType(framework.Widget, [core.double, dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)]), framework.Widget]),
    [_buildAmPmPicker]: dart.fnType(framework.Widget, [core.double, dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)]), framework.Widget]),
    [_pickerDidStopScrolling]: dart.fnType(dart.void, []),
    [_scrollToDate]: dart.fnType(dart.void, [core.DateTime, core.DateTime]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(date_picker._CupertinoDatePickerDateTimeState, () => ({
    __proto__: dart.getGetters(date_picker._CupertinoDatePickerDateTimeState.__proto__),
    textDirectionFactor: core.int,
    localizations: localizations.CupertinoLocalizations,
    alignCenterLeft: alignment.Alignment,
    alignCenterRight: alignment.Alignment,
    initialDateTime: core.DateTime,
    selectedDayFromInitial: core.int,
    dateController: list_wheel_scroll_view.FixedExtentScrollController,
    selectedHour: core.int,
    [_selectedHourIndex]: core.int,
    hourController: list_wheel_scroll_view.FixedExtentScrollController,
    selectedMinute: core.int,
    minuteController: list_wheel_scroll_view.FixedExtentScrollController,
    selectedAmPm: core.int,
    isHourRegionFlipped: core.bool,
    meridiemRegion: core.int,
    meridiemController: list_wheel_scroll_view.FixedExtentScrollController,
    isScrolling: core.bool,
    selectedDateTime: core.DateTime
  }));
  dart.setSetterSignature(date_picker._CupertinoDatePickerDateTimeState, () => ({
    __proto__: dart.getSetters(date_picker._CupertinoDatePickerDateTimeState.__proto__),
    textDirectionFactor: core.int,
    localizations: localizations.CupertinoLocalizations,
    alignCenterLeft: alignment.Alignment,
    alignCenterRight: alignment.Alignment,
    initialDateTime: core.DateTime,
    dateController: list_wheel_scroll_view.FixedExtentScrollController,
    hourController: list_wheel_scroll_view.FixedExtentScrollController,
    minuteController: list_wheel_scroll_view.FixedExtentScrollController,
    selectedAmPm: core.int,
    meridiemRegion: core.int,
    meridiemController: list_wheel_scroll_view.FixedExtentScrollController
  }));
  dart.setLibraryUri(date_picker._CupertinoDatePickerDateTimeState, I[1]);
  dart.setFieldSignature(date_picker._CupertinoDatePickerDateTimeState, () => ({
    __proto__: dart.getFields(date_picker._CupertinoDatePickerDateTimeState.__proto__),
    [___CupertinoDatePickerDateTimeState_textDirectionFactor]: dart.fieldType(dart.nullable(core.int)),
    [___CupertinoDatePickerDateTimeState_textDirectionFactor_isSet]: dart.fieldType(core.bool),
    [___CupertinoDatePickerDateTimeState_localizations]: dart.fieldType(dart.nullable(localizations.CupertinoLocalizations)),
    [___CupertinoDatePickerDateTimeState_localizations_isSet]: dart.fieldType(core.bool),
    [___CupertinoDatePickerDateTimeState_alignCenterLeft]: dart.fieldType(dart.nullable(alignment.Alignment)),
    [___CupertinoDatePickerDateTimeState_alignCenterLeft_isSet]: dart.fieldType(core.bool),
    [___CupertinoDatePickerDateTimeState_alignCenterRight]: dart.fieldType(dart.nullable(alignment.Alignment)),
    [___CupertinoDatePickerDateTimeState_alignCenterRight_isSet]: dart.fieldType(core.bool),
    [___CupertinoDatePickerDateTimeState_initialDateTime]: dart.fieldType(dart.nullable(core.DateTime)),
    [___CupertinoDatePickerDateTimeState_initialDateTime_isSet]: dart.fieldType(core.bool),
    [___CupertinoDatePickerDateTimeState_dateController]: dart.fieldType(dart.nullable(list_wheel_scroll_view.FixedExtentScrollController)),
    [___CupertinoDatePickerDateTimeState_dateController_isSet]: dart.fieldType(core.bool),
    [___CupertinoDatePickerDateTimeState_hourController]: dart.fieldType(dart.nullable(list_wheel_scroll_view.FixedExtentScrollController)),
    [___CupertinoDatePickerDateTimeState_hourController_isSet]: dart.fieldType(core.bool),
    [___CupertinoDatePickerDateTimeState_minuteController]: dart.fieldType(dart.nullable(list_wheel_scroll_view.FixedExtentScrollController)),
    [___CupertinoDatePickerDateTimeState_minuteController_isSet]: dart.fieldType(core.bool),
    [___CupertinoDatePickerDateTimeState_selectedAmPm]: dart.fieldType(dart.nullable(core.int)),
    [___CupertinoDatePickerDateTimeState_selectedAmPm_isSet]: dart.fieldType(core.bool),
    [___CupertinoDatePickerDateTimeState_meridiemRegion]: dart.fieldType(dart.nullable(core.int)),
    [___CupertinoDatePickerDateTimeState_meridiemRegion_isSet]: dart.fieldType(core.bool),
    [___CupertinoDatePickerDateTimeState_meridiemController]: dart.fieldType(dart.nullable(list_wheel_scroll_view.FixedExtentScrollController)),
    [___CupertinoDatePickerDateTimeState_meridiemController_isSet]: dart.fieldType(core.bool),
    isDatePickerScrolling: dart.fieldType(core.bool),
    isHourPickerScrolling: dart.fieldType(core.bool),
    isMinutePickerScrolling: dart.fieldType(core.bool),
    isMeridiemPickerScrolling: dart.fieldType(core.bool),
    estimatedColumnWidths: dart.finalFieldType(core.Map$(core.int, core.double))
  }));
  dart.defineLazy(date_picker._CupertinoDatePickerDateTimeState, {
    /*date_picker._CupertinoDatePickerDateTimeState._kMaximumOffAxisFraction*/get _kMaximumOffAxisFraction() {
      return 0.45;
    }
  }, false);
  var ___CupertinoDatePickerDateState_textDirectionFactor = dart.privateName(date_picker, "_#_CupertinoDatePickerDateState#textDirectionFactor");
  var ___CupertinoDatePickerDateState_textDirectionFactor_isSet = dart.privateName(date_picker, "_#_CupertinoDatePickerDateState#textDirectionFactor#isSet");
  var ___CupertinoDatePickerDateState_localizations = dart.privateName(date_picker, "_#_CupertinoDatePickerDateState#localizations");
  var ___CupertinoDatePickerDateState_localizations_isSet = dart.privateName(date_picker, "_#_CupertinoDatePickerDateState#localizations#isSet");
  var ___CupertinoDatePickerDateState_alignCenterLeft = dart.privateName(date_picker, "_#_CupertinoDatePickerDateState#alignCenterLeft");
  var ___CupertinoDatePickerDateState_alignCenterLeft_isSet = dart.privateName(date_picker, "_#_CupertinoDatePickerDateState#alignCenterLeft#isSet");
  var ___CupertinoDatePickerDateState_alignCenterRight = dart.privateName(date_picker, "_#_CupertinoDatePickerDateState#alignCenterRight");
  var ___CupertinoDatePickerDateState_alignCenterRight_isSet = dart.privateName(date_picker, "_#_CupertinoDatePickerDateState#alignCenterRight#isSet");
  var ___CupertinoDatePickerDateState_selectedDay = dart.privateName(date_picker, "_#_CupertinoDatePickerDateState#selectedDay");
  var ___CupertinoDatePickerDateState_selectedDay_isSet = dart.privateName(date_picker, "_#_CupertinoDatePickerDateState#selectedDay#isSet");
  var ___CupertinoDatePickerDateState_selectedMonth = dart.privateName(date_picker, "_#_CupertinoDatePickerDateState#selectedMonth");
  var ___CupertinoDatePickerDateState_selectedMonth_isSet = dart.privateName(date_picker, "_#_CupertinoDatePickerDateState#selectedMonth#isSet");
  var ___CupertinoDatePickerDateState_selectedYear = dart.privateName(date_picker, "_#_CupertinoDatePickerDateState#selectedYear");
  var ___CupertinoDatePickerDateState_selectedYear_isSet = dart.privateName(date_picker, "_#_CupertinoDatePickerDateState#selectedYear#isSet");
  var ___CupertinoDatePickerDateState_dayController = dart.privateName(date_picker, "_#_CupertinoDatePickerDateState#dayController");
  var ___CupertinoDatePickerDateState_dayController_isSet = dart.privateName(date_picker, "_#_CupertinoDatePickerDateState#dayController#isSet");
  var ___CupertinoDatePickerDateState_monthController = dart.privateName(date_picker, "_#_CupertinoDatePickerDateState#monthController");
  var ___CupertinoDatePickerDateState_monthController_isSet = dart.privateName(date_picker, "_#_CupertinoDatePickerDateState#monthController#isSet");
  var ___CupertinoDatePickerDateState_yearController = dart.privateName(date_picker, "_#_CupertinoDatePickerDateState#yearController");
  var ___CupertinoDatePickerDateState_yearController_isSet = dart.privateName(date_picker, "_#_CupertinoDatePickerDateState#yearController#isSet");
  var _refreshEstimatedColumnWidths = dart.privateName(date_picker, "_refreshEstimatedColumnWidths");
  var _lastDayInMonth = dart.privateName(date_picker, "_lastDayInMonth");
  var _isCurrentDateValid = dart.privateName(date_picker, "_isCurrentDateValid");
  var _buildDayPicker = dart.privateName(date_picker, "_buildDayPicker");
  var _buildMonthPicker = dart.privateName(date_picker, "_buildMonthPicker");
  var _buildYearPicker = dart.privateName(date_picker, "_buildYearPicker");
  var _name = dart.privateName(localizations, "_name");
  date_picker._CupertinoDatePickerDateState = class _CupertinoDatePickerDateState extends framework.State$(date_picker.CupertinoDatePicker) {
    get textDirectionFactor() {
      let t11;
      return dart.test(this[___CupertinoDatePickerDateState_textDirectionFactor_isSet]) ? (t11 = this[___CupertinoDatePickerDateState_textDirectionFactor], t11) : dart.throw(new _internal.LateError.fieldNI("textDirectionFactor"));
    }
    set textDirectionFactor(t11) {
      if (t11 == null) dart.nullFailed(I[0], 1052, 12, "null");
      this[___CupertinoDatePickerDateState_textDirectionFactor_isSet] = true;
      this[___CupertinoDatePickerDateState_textDirectionFactor] = t11;
    }
    get localizations() {
      let t12;
      return dart.test(this[___CupertinoDatePickerDateState_localizations_isSet]) ? (t12 = this[___CupertinoDatePickerDateState_localizations], t12) : dart.throw(new _internal.LateError.fieldNI("localizations"));
    }
    set localizations(t12) {
      if (t12 == null) dart.nullFailed(I[0], 1053, 31, "null");
      this[___CupertinoDatePickerDateState_localizations_isSet] = true;
      this[___CupertinoDatePickerDateState_localizations] = t12;
    }
    get alignCenterLeft() {
      let t13;
      return dart.test(this[___CupertinoDatePickerDateState_alignCenterLeft_isSet]) ? (t13 = this[___CupertinoDatePickerDateState_alignCenterLeft], t13) : dart.throw(new _internal.LateError.fieldNI("alignCenterLeft"));
    }
    set alignCenterLeft(t13) {
      if (t13 == null) dart.nullFailed(I[0], 1057, 18, "null");
      this[___CupertinoDatePickerDateState_alignCenterLeft_isSet] = true;
      this[___CupertinoDatePickerDateState_alignCenterLeft] = t13;
    }
    get alignCenterRight() {
      let t14;
      return dart.test(this[___CupertinoDatePickerDateState_alignCenterRight_isSet]) ? (t14 = this[___CupertinoDatePickerDateState_alignCenterRight], t14) : dart.throw(new _internal.LateError.fieldNI("alignCenterRight"));
    }
    set alignCenterRight(t14) {
      if (t14 == null) dart.nullFailed(I[0], 1058, 18, "null");
      this[___CupertinoDatePickerDateState_alignCenterRight_isSet] = true;
      this[___CupertinoDatePickerDateState_alignCenterRight] = t14;
    }
    get selectedDay() {
      let t15;
      return dart.test(this[___CupertinoDatePickerDateState_selectedDay_isSet]) ? (t15 = this[___CupertinoDatePickerDateState_selectedDay], t15) : dart.throw(new _internal.LateError.fieldNI("selectedDay"));
    }
    set selectedDay(t15) {
      if (t15 == null) dart.nullFailed(I[0], 1061, 12, "null");
      this[___CupertinoDatePickerDateState_selectedDay_isSet] = true;
      this[___CupertinoDatePickerDateState_selectedDay] = t15;
    }
    set selectedMonth(t16) {
      if (t16 == null) dart.nullFailed(I[0], 1062, 12, "null");
      this[___CupertinoDatePickerDateState_selectedMonth_isSet] = true;
      this[___CupertinoDatePickerDateState_selectedMonth] = t16;
    }
    get selectedMonth() {
      let t17;
      return dart.test(this[___CupertinoDatePickerDateState_selectedMonth_isSet]) ? (t17 = this[___CupertinoDatePickerDateState_selectedMonth], t17) : dart.throw(new _internal.LateError.fieldNI("selectedMonth"));
    }
    get selectedYear() {
      let t17;
      return dart.test(this[___CupertinoDatePickerDateState_selectedYear_isSet]) ? (t17 = this[___CupertinoDatePickerDateState_selectedYear], t17) : dart.throw(new _internal.LateError.fieldNI("selectedYear"));
    }
    set selectedYear(t17) {
      if (t17 == null) dart.nullFailed(I[0], 1063, 12, "null");
      this[___CupertinoDatePickerDateState_selectedYear_isSet] = true;
      this[___CupertinoDatePickerDateState_selectedYear] = t17;
    }
    get dayController() {
      let t18;
      return dart.test(this[___CupertinoDatePickerDateState_dayController_isSet]) ? (t18 = this[___CupertinoDatePickerDateState_dayController], t18) : dart.throw(new _internal.LateError.fieldNI("dayController"));
    }
    set dayController(t18) {
      if (t18 == null) dart.nullFailed(I[0], 1068, 36, "null");
      this[___CupertinoDatePickerDateState_dayController_isSet] = true;
      this[___CupertinoDatePickerDateState_dayController] = t18;
    }
    get monthController() {
      let t19;
      return dart.test(this[___CupertinoDatePickerDateState_monthController_isSet]) ? (t19 = this[___CupertinoDatePickerDateState_monthController], t19) : dart.throw(new _internal.LateError.fieldNI("monthController"));
    }
    set monthController(t19) {
      if (t19 == null) dart.nullFailed(I[0], 1069, 36, "null");
      this[___CupertinoDatePickerDateState_monthController_isSet] = true;
      this[___CupertinoDatePickerDateState_monthController] = t19;
    }
    get yearController() {
      let t20;
      return dart.test(this[___CupertinoDatePickerDateState_yearController_isSet]) ? (t20 = this[___CupertinoDatePickerDateState_yearController], t20) : dart.throw(new _internal.LateError.fieldNI("yearController"));
    }
    set yearController(t20) {
      if (t20 == null) dart.nullFailed(I[0], 1070, 36, "null");
      this[___CupertinoDatePickerDateState_yearController_isSet] = true;
      this[___CupertinoDatePickerDateState_yearController] = t20;
    }
    get isScrolling() {
      return dart.test(this.isDayPickerScrolling) || dart.test(this.isMonthPickerScrolling) || dart.test(this.isYearPickerScrolling);
    }
    initState() {
      super.initState();
      this.selectedDay = this.widget.initialDateTime.day;
      this.selectedMonth = this.widget.initialDateTime.month;
      this.selectedYear = this.widget.initialDateTime.year;
      this.dayController = new list_wheel_scroll_view.FixedExtentScrollController.new({initialItem: dart.notNull(this.selectedDay) - 1});
      this.monthController = new list_wheel_scroll_view.FixedExtentScrollController.new({initialItem: dart.notNull(this.selectedMonth) - 1});
      this.yearController = new list_wheel_scroll_view.FixedExtentScrollController.new({initialItem: this.selectedYear});
      dart.nullCheck(binding.PaintingBinding.instance).systemFonts.addListener(dart.bind(this, _handleSystemFontsChange));
    }
    [_handleSystemFontsChange]() {
      this.setState(dart.fn(() => {
        this[_refreshEstimatedColumnWidths]();
      }, T.VoidTovoid()));
    }
    dispose() {
      this.dayController.dispose();
      this.monthController.dispose();
      this.yearController.dispose();
      dart.nullCheck(binding.PaintingBinding.instance).systemFonts.removeListener(dart.bind(this, _handleSystemFontsChange));
      super.dispose();
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      this.textDirectionFactor = basic.Directionality.of(this.context) == ui.TextDirection.ltr ? 1 : -1;
      this.localizations = localizations.CupertinoLocalizations.of(this.context);
      this.alignCenterLeft = this.textDirectionFactor === 1 ? alignment.Alignment.centerLeft : alignment.Alignment.centerRight;
      this.alignCenterRight = this.textDirectionFactor === 1 ? alignment.Alignment.centerRight : alignment.Alignment.centerLeft;
      this[_refreshEstimatedColumnWidths]();
    }
    [_refreshEstimatedColumnWidths]() {
      this.estimatedColumnWidths[$_set](date_picker._PickerColumnType.dayOfMonth.index, date_picker.CupertinoDatePicker._getColumnWidth(date_picker._PickerColumnType.dayOfMonth, this.localizations, this.context));
      this.estimatedColumnWidths[$_set](date_picker._PickerColumnType.month.index, date_picker.CupertinoDatePicker._getColumnWidth(date_picker._PickerColumnType.month, this.localizations, this.context));
      this.estimatedColumnWidths[$_set](date_picker._PickerColumnType.year.index, date_picker.CupertinoDatePicker._getColumnWidth(date_picker._PickerColumnType.year, this.localizations, this.context));
    }
    [_lastDayInMonth](year, month) {
      if (year == null) dart.nullFailed(I[0], 1133, 32, "year");
      if (month == null) dart.nullFailed(I[0], 1133, 42, "month");
      return new core.DateTime.new(year, dart.notNull(month) + 1, 0);
    }
    [_buildDayPicker](offAxisFraction, itemPositioningBuilder, selectionOverlay) {
      if (offAxisFraction == null) dart.nullFailed(I[0], 1135, 33, "offAxisFraction");
      if (itemPositioningBuilder == null) dart.nullFailed(I[0], 1135, 68, "itemPositioningBuilder");
      if (selectionOverlay == null) dart.nullFailed(I[0], 1135, 99, "selectionOverlay");
      let daysInCurrentMonth = this[_lastDayInMonth](this.selectedYear, this.selectedMonth).day;
      return new (T.NotificationListenerOfScrollNotification()).new({onNotification: dart.fn(notification => {
          if (notification == null) dart.nullFailed(I[0], 1138, 43, "notification");
          if (scroll_notification.ScrollStartNotification.is(notification)) {
            this.isDayPickerScrolling = true;
          } else if (scroll_notification.ScrollEndNotification.is(notification)) {
            this.isDayPickerScrolling = false;
            this[_pickerDidStopScrolling]();
          }
          return false;
        }, T.ScrollNotificationTobool()), child: new picker.CupertinoPicker.new({scrollController: this.dayController, offAxisFraction: offAxisFraction, itemExtent: 32, useMagnifier: true, magnification: 1.119047619047619, backgroundColor: this.widget.backgroundColor, squeeze: 1.25, onSelectedItemChanged: dart.fn(index => {
            let t22, t21;
            if (index == null) dart.nullFailed(I[0], 1156, 37, "index");
            this.selectedDay = dart.notNull(index) + 1;
            if (dart.test(this[_isCurrentDateValid])) {
              t21 = this.widget;
              t22 = new core.DateTime.new(this.selectedYear, this.selectedMonth, this.selectedDay);
              t21.onDateTimeChanged(t22);
            }
          }, T.intTovoid()), children: T.ListOfWidget().generate(31, dart.fn(index => {
            if (index == null) dart.nullFailed(I[0], 1161, 50, "index");
            let day = dart.notNull(index) + 1;
            return itemPositioningBuilder(this.context, new text$.Text.new(this.localizations.datePickerDayOfMonth(day), {style: date_picker._themeTextStyle(this.context, {isValid: day <= dart.notNull(daysInCurrentMonth)}), $creationLocationd_0dea112b090073317d4: C[121] || CT.C121}));
          }, T.intToWidget())), looping: true, selectionOverlay: selectionOverlay, $creationLocationd_0dea112b090073317d4: C[125] || CT.C125}), $creationLocationd_0dea112b090073317d4: C[138] || CT.C138});
    }
    [_buildMonthPicker](offAxisFraction, itemPositioningBuilder, selectionOverlay) {
      if (offAxisFraction == null) dart.nullFailed(I[0], 1177, 35, "offAxisFraction");
      if (itemPositioningBuilder == null) dart.nullFailed(I[0], 1177, 70, "itemPositioningBuilder");
      if (selectionOverlay == null) dart.nullFailed(I[0], 1177, 101, "selectionOverlay");
      return new (T.NotificationListenerOfScrollNotification()).new({onNotification: dart.fn(notification => {
          if (notification == null) dart.nullFailed(I[0], 1179, 43, "notification");
          if (scroll_notification.ScrollStartNotification.is(notification)) {
            this.isMonthPickerScrolling = true;
          } else if (scroll_notification.ScrollEndNotification.is(notification)) {
            this.isMonthPickerScrolling = false;
            this[_pickerDidStopScrolling]();
          }
          return false;
        }, T.ScrollNotificationTobool()), child: new picker.CupertinoPicker.new({scrollController: this.monthController, offAxisFraction: offAxisFraction, itemExtent: 32, useMagnifier: true, magnification: 1.119047619047619, backgroundColor: this.widget.backgroundColor, squeeze: 1.25, onSelectedItemChanged: dart.fn(index => {
            let t22, t21;
            if (index == null) dart.nullFailed(I[0], 1197, 37, "index");
            this.selectedMonth = dart.notNull(index) + 1;
            if (dart.test(this[_isCurrentDateValid])) {
              t21 = this.widget;
              t22 = new core.DateTime.new(this.selectedYear, this.selectedMonth, this.selectedDay);
              t21.onDateTimeChanged(t22);
            }
          }, T.intTovoid()), children: T.ListOfWidget().generate(12, dart.fn(index => {
            let t21, t21$;
            if (index == null) dart.nullFailed(I[0], 1202, 50, "index");
            let month = dart.notNull(index) + 1;
            let isInvalidMonth = (t21 = this.widget.minimumDate, t21 == null ? null : t21.year) == this.selectedYear && dart.notNull(dart.nullCheck(this.widget.minimumDate).month) > month || (t21$ = this.widget.maximumDate, t21$ == null ? null : t21$.year) == this.selectedYear && dart.notNull(dart.nullCheck(this.widget.maximumDate).month) < month;
            return itemPositioningBuilder(this.context, new text$.Text.new(this.localizations.datePickerMonth(month), {style: date_picker._themeTextStyle(this.context, {isValid: !isInvalidMonth}), $creationLocationd_0dea112b090073317d4: C[142] || CT.C142}));
          }, T.intToWidget())), looping: true, selectionOverlay: selectionOverlay, $creationLocationd_0dea112b090073317d4: C[146] || CT.C146}), $creationLocationd_0dea112b090073317d4: C[159] || CT.C159});
    }
    [_buildYearPicker](offAxisFraction, itemPositioningBuilder, selectionOverlay) {
      if (offAxisFraction == null) dart.nullFailed(I[0], 1221, 34, "offAxisFraction");
      if (itemPositioningBuilder == null) dart.nullFailed(I[0], 1221, 69, "itemPositioningBuilder");
      if (selectionOverlay == null) dart.nullFailed(I[0], 1221, 100, "selectionOverlay");
      return new (T.NotificationListenerOfScrollNotification()).new({onNotification: dart.fn(notification => {
          if (notification == null) dart.nullFailed(I[0], 1223, 43, "notification");
          if (scroll_notification.ScrollStartNotification.is(notification)) {
            this.isYearPickerScrolling = true;
          } else if (scroll_notification.ScrollEndNotification.is(notification)) {
            this.isYearPickerScrolling = false;
            this[_pickerDidStopScrolling]();
          }
          return false;
        }, T.ScrollNotificationTobool()), child: new picker.CupertinoPicker.builder({scrollController: this.yearController, itemExtent: 32, offAxisFraction: offAxisFraction, useMagnifier: true, magnification: 1.119047619047619, backgroundColor: this.widget.backgroundColor, onSelectedItemChanged: dart.fn(index => {
            let t22, t21;
            if (index == null) dart.nullFailed(I[0], 1240, 37, "index");
            this.selectedYear = index;
            if (dart.test(this[_isCurrentDateValid])) {
              t21 = this.widget;
              t22 = new core.DateTime.new(this.selectedYear, this.selectedMonth, this.selectedDay);
              t21.onDateTimeChanged(t22);
            }
          }, T.intTovoid()), itemBuilder: dart.fn((context, year) => {
            if (context == null) dart.nullFailed(I[0], 1245, 36, "context");
            if (year == null) dart.nullFailed(I[0], 1245, 49, "year");
            if (dart.notNull(year) < dart.notNull(this.widget.minimumYear)) return null;
            if (this.widget.maximumYear != null && dart.notNull(year) > dart.nullCheck(this.widget.maximumYear)) return null;
            let isValidYear = (this.widget.minimumDate == null || dart.notNull(dart.nullCheck(this.widget.minimumDate).year) <= dart.notNull(year)) && (this.widget.maximumDate == null || dart.notNull(dart.nullCheck(this.widget.maximumDate).year) >= dart.notNull(year));
            return itemPositioningBuilder(context, new text$.Text.new(this.localizations.datePickerYear(year), {style: date_picker._themeTextStyle(context, {isValid: isValidYear}), $creationLocationd_0dea112b090073317d4: C[163] || CT.C163}));
          }, T.BuildContextAndintToWidgetN()), selectionOverlay: selectionOverlay, $creationLocationd_0dea112b090073317d4: C[167] || CT.C167}), $creationLocationd_0dea112b090073317d4: C[178] || CT.C178});
    }
    get [_isCurrentDateValid]() {
      let t21, t21$, t21$0, t21$1;
      let minSelectedDate = new core.DateTime.new(this.selectedYear, this.selectedMonth, this.selectedDay);
      let maxSelectedDate = new core.DateTime.new(this.selectedYear, this.selectedMonth, dart.notNull(this.selectedDay) + 1);
      let minCheck = (t21$ = (t21 = this.widget.minimumDate, t21 == null ? null : t21.isBefore(maxSelectedDate)), t21$ == null ? true : t21$);
      let maxCheck = (t21$1 = (t21$0 = this.widget.maximumDate, t21$0 == null ? null : t21$0.isBefore(minSelectedDate)), t21$1 == null ? false : t21$1);
      return dart.test(minCheck) && !dart.test(maxCheck) && minSelectedDate.day == this.selectedDay;
    }
    [_pickerDidStopScrolling]() {
      let t21, t21$, t21$0, t21$1;
      this.setState(dart.fn(() => {
      }, T.VoidTovoid()));
      if (dart.test(this.isScrolling)) {
        return;
      }
      let minSelectDate = new core.DateTime.new(this.selectedYear, this.selectedMonth, this.selectedDay);
      let maxSelectDate = new core.DateTime.new(this.selectedYear, this.selectedMonth, dart.notNull(this.selectedDay) + 1);
      let minCheck = (t21$ = (t21 = this.widget.minimumDate, t21 == null ? null : t21.isBefore(maxSelectDate)), t21$ == null ? true : t21$);
      let maxCheck = (t21$1 = (t21$0 = this.widget.maximumDate, t21$0 == null ? null : t21$0.isBefore(minSelectDate)), t21$1 == null ? false : t21$1);
      if (!dart.test(minCheck) || dart.test(maxCheck)) {
        let targetDate = dart.test(minCheck) ? dart.nullCheck(this.widget.maximumDate) : dart.nullCheck(this.widget.minimumDate);
        this[_scrollToDate](targetDate);
        return;
      }
      if (minSelectDate.day != this.selectedDay) {
        let lastDay = this[_lastDayInMonth](this.selectedYear, this.selectedMonth);
        this[_scrollToDate](lastDay);
      }
    }
    [_scrollToDate](newDate) {
      if (newDate == null) dart.nullFailed(I[0], 1312, 31, "newDate");
      if (!(newDate != null)) dart.assertFailed(null, I[0], 1313, 12, "newDate != null");
      dart.nullCheck(binding$.SchedulerBinding.instance).addPostFrameCallback(dart.fn(timestamp => {
        if (timestamp == null) dart.nullFailed(I[0], 1314, 63, "timestamp");
        if (this.selectedYear != newDate.year) {
          date_picker._animateColumnControllerToItem(this.yearController, newDate.year);
        }
        if (this.selectedMonth != newDate.month) {
          date_picker._animateColumnControllerToItem(this.monthController, dart.notNull(newDate.month) - 1);
        }
        if (this.selectedDay != newDate.day) {
          date_picker._animateColumnControllerToItem(this.dayController, dart.notNull(newDate.day) - 1);
        }
      }, T.DurationTovoid()));
    }
    build(context) {
      if (context == null) dart.nullFailed(I[0], 1330, 29, "context");
      let pickerBuilders = T.JSArrayOfdoubleAndFnAndWidgetToWidget().of([]);
      let columnWidths = T.JSArrayOfdouble().of([]);
      switch (this.localizations.datePickerDateOrder) {
        case C[182] || CT.C182:
        {
          pickerBuilders = T.JSArrayOfdoubleAndFnAndWidgetToWidget().of([dart.bind(this, _buildMonthPicker), dart.bind(this, _buildDayPicker), dart.bind(this, _buildYearPicker)]);
          columnWidths = T.JSArrayOfdouble().of([dart.nullCheck(this.estimatedColumnWidths[$_get](date_picker._PickerColumnType.month.index)), dart.nullCheck(this.estimatedColumnWidths[$_get](date_picker._PickerColumnType.dayOfMonth.index)), dart.nullCheck(this.estimatedColumnWidths[$_get](date_picker._PickerColumnType.year.index))]);
          break;
        }
        case C[183] || CT.C183:
        {
          pickerBuilders = T.JSArrayOfdoubleAndFnAndWidgetToWidget().of([dart.bind(this, _buildDayPicker), dart.bind(this, _buildMonthPicker), dart.bind(this, _buildYearPicker)]);
          columnWidths = T.JSArrayOfdouble().of([dart.nullCheck(this.estimatedColumnWidths[$_get](date_picker._PickerColumnType.dayOfMonth.index)), dart.nullCheck(this.estimatedColumnWidths[$_get](date_picker._PickerColumnType.month.index)), dart.nullCheck(this.estimatedColumnWidths[$_get](date_picker._PickerColumnType.year.index))]);
          break;
        }
        case C[184] || CT.C184:
        {
          pickerBuilders = T.JSArrayOfdoubleAndFnAndWidgetToWidget().of([dart.bind(this, _buildYearPicker), dart.bind(this, _buildMonthPicker), dart.bind(this, _buildDayPicker)]);
          columnWidths = T.JSArrayOfdouble().of([dart.nullCheck(this.estimatedColumnWidths[$_get](date_picker._PickerColumnType.year.index)), dart.nullCheck(this.estimatedColumnWidths[$_get](date_picker._PickerColumnType.month.index)), dart.nullCheck(this.estimatedColumnWidths[$_get](date_picker._PickerColumnType.dayOfMonth.index))]);
          break;
        }
        case C[185] || CT.C185:
        {
          pickerBuilders = T.JSArrayOfdoubleAndFnAndWidgetToWidget().of([dart.bind(this, _buildYearPicker), dart.bind(this, _buildDayPicker), dart.bind(this, _buildMonthPicker)]);
          columnWidths = T.JSArrayOfdouble().of([dart.nullCheck(this.estimatedColumnWidths[$_get](date_picker._PickerColumnType.year.index)), dart.nullCheck(this.estimatedColumnWidths[$_get](date_picker._PickerColumnType.dayOfMonth.index)), dart.nullCheck(this.estimatedColumnWidths[$_get](date_picker._PickerColumnType.month.index))]);
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let pickers = T.JSArrayOfWidget().of([]);
      for (let i = 0; i < dart.notNull(columnWidths[$length]); i = i + 1) {
        let offAxisFraction = (i - 1) * 0.3 * dart.notNull(this.textDirectionFactor);
        let padding = C[98] || CT.C98;
        if (this.textDirectionFactor === -1) padding = C[186] || CT.C186;
        let selectionOverlay = date_picker._centerSelectionOverlay;
        if (i === 0)
          selectionOverlay = date_picker._leftSelectionOverlay;
        else if (i === dart.notNull(columnWidths[$length]) - 1) selectionOverlay = date_picker._rightSelectionOverlay;
        pickers[$add](new basic.LayoutId.new({id: i, child: pickerBuilders[$_get](i)(offAxisFraction, dart.fn((context, child) => {
            if (context == null) dart.nullFailed(I[0], 1388, 25, "context");
            return new container.Container.new({alignment: i === dart.notNull(columnWidths[$length]) - 1 ? this.alignCenterLeft : this.alignCenterRight, padding: i === 0 ? null : padding, child: new container.Container.new({alignment: i === 0 ? this.alignCenterLeft : this.alignCenterRight, width: dart.notNull(columnWidths[$_get](i)) + 12, child: child, $creationLocationd_0dea112b090073317d4: C[187] || CT.C187}), $creationLocationd_0dea112b090073317d4: C[192] || CT.C192});
          }, T.BuildContextAndWidgetNToContainer()), selectionOverlay), $creationLocationd_0dea112b090073317d4: C[197] || CT.C197}));
      }
      return new media_query.MediaQuery.new({data: media_query.MediaQuery.of(context).copyWith({textScaleFactor: 1.0}), child: text$.DefaultTextStyle.merge({style: date_picker._kDefaultPickerTextStyle, child: new basic.CustomMultiChildLayout.new({delegate: new date_picker._DatePickerLayoutDelegate.new({columnWidths: columnWidths, textDirectionFactor: this.textDirectionFactor}), children: pickers, $creationLocationd_0dea112b090073317d4: C[201] || CT.C201})}), $creationLocationd_0dea112b090073317d4: C[205] || CT.C205});
    }
  };
  (date_picker._CupertinoDatePickerDateState.new = function() {
    this[___CupertinoDatePickerDateState_textDirectionFactor] = null;
    this[___CupertinoDatePickerDateState_textDirectionFactor_isSet] = false;
    this[___CupertinoDatePickerDateState_localizations] = null;
    this[___CupertinoDatePickerDateState_localizations_isSet] = false;
    this[___CupertinoDatePickerDateState_alignCenterLeft] = null;
    this[___CupertinoDatePickerDateState_alignCenterLeft_isSet] = false;
    this[___CupertinoDatePickerDateState_alignCenterRight] = null;
    this[___CupertinoDatePickerDateState_alignCenterRight_isSet] = false;
    this[___CupertinoDatePickerDateState_selectedDay] = null;
    this[___CupertinoDatePickerDateState_selectedDay_isSet] = false;
    this[___CupertinoDatePickerDateState_selectedMonth] = null;
    this[___CupertinoDatePickerDateState_selectedMonth_isSet] = false;
    this[___CupertinoDatePickerDateState_selectedYear] = null;
    this[___CupertinoDatePickerDateState_selectedYear_isSet] = false;
    this[___CupertinoDatePickerDateState_dayController] = null;
    this[___CupertinoDatePickerDateState_dayController_isSet] = false;
    this[___CupertinoDatePickerDateState_monthController] = null;
    this[___CupertinoDatePickerDateState_monthController_isSet] = false;
    this[___CupertinoDatePickerDateState_yearController] = null;
    this[___CupertinoDatePickerDateState_yearController_isSet] = false;
    this.isDayPickerScrolling = false;
    this.isMonthPickerScrolling = false;
    this.isYearPickerScrolling = false;
    this.estimatedColumnWidths = new (T.IdentityMapOfint$double()).new();
    date_picker._CupertinoDatePickerDateState.__proto__.new.call(this);
    ;
  }).prototype = date_picker._CupertinoDatePickerDateState.prototype;
  dart.addTypeTests(date_picker._CupertinoDatePickerDateState);
  dart.addTypeCaches(date_picker._CupertinoDatePickerDateState);
  dart.setMethodSignature(date_picker._CupertinoDatePickerDateState, () => ({
    __proto__: dart.getMethods(date_picker._CupertinoDatePickerDateState.__proto__),
    [_handleSystemFontsChange]: dart.fnType(dart.void, []),
    [_refreshEstimatedColumnWidths]: dart.fnType(dart.void, []),
    [_lastDayInMonth]: dart.fnType(core.DateTime, [core.int, core.int]),
    [_buildDayPicker]: dart.fnType(framework.Widget, [core.double, dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)]), framework.Widget]),
    [_buildMonthPicker]: dart.fnType(framework.Widget, [core.double, dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)]), framework.Widget]),
    [_buildYearPicker]: dart.fnType(framework.Widget, [core.double, dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)]), framework.Widget]),
    [_pickerDidStopScrolling]: dart.fnType(dart.void, []),
    [_scrollToDate]: dart.fnType(dart.void, [core.DateTime]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(date_picker._CupertinoDatePickerDateState, () => ({
    __proto__: dart.getGetters(date_picker._CupertinoDatePickerDateState.__proto__),
    textDirectionFactor: core.int,
    localizations: localizations.CupertinoLocalizations,
    alignCenterLeft: alignment.Alignment,
    alignCenterRight: alignment.Alignment,
    selectedDay: core.int,
    selectedMonth: core.int,
    selectedYear: core.int,
    dayController: list_wheel_scroll_view.FixedExtentScrollController,
    monthController: list_wheel_scroll_view.FixedExtentScrollController,
    yearController: list_wheel_scroll_view.FixedExtentScrollController,
    isScrolling: core.bool,
    [_isCurrentDateValid]: core.bool
  }));
  dart.setSetterSignature(date_picker._CupertinoDatePickerDateState, () => ({
    __proto__: dart.getSetters(date_picker._CupertinoDatePickerDateState.__proto__),
    textDirectionFactor: core.int,
    localizations: localizations.CupertinoLocalizations,
    alignCenterLeft: alignment.Alignment,
    alignCenterRight: alignment.Alignment,
    selectedDay: core.int,
    selectedMonth: core.int,
    selectedYear: core.int,
    dayController: list_wheel_scroll_view.FixedExtentScrollController,
    monthController: list_wheel_scroll_view.FixedExtentScrollController,
    yearController: list_wheel_scroll_view.FixedExtentScrollController
  }));
  dart.setLibraryUri(date_picker._CupertinoDatePickerDateState, I[1]);
  dart.setFieldSignature(date_picker._CupertinoDatePickerDateState, () => ({
    __proto__: dart.getFields(date_picker._CupertinoDatePickerDateState.__proto__),
    [___CupertinoDatePickerDateState_textDirectionFactor]: dart.fieldType(dart.nullable(core.int)),
    [___CupertinoDatePickerDateState_textDirectionFactor_isSet]: dart.fieldType(core.bool),
    [___CupertinoDatePickerDateState_localizations]: dart.fieldType(dart.nullable(localizations.CupertinoLocalizations)),
    [___CupertinoDatePickerDateState_localizations_isSet]: dart.fieldType(core.bool),
    [___CupertinoDatePickerDateState_alignCenterLeft]: dart.fieldType(dart.nullable(alignment.Alignment)),
    [___CupertinoDatePickerDateState_alignCenterLeft_isSet]: dart.fieldType(core.bool),
    [___CupertinoDatePickerDateState_alignCenterRight]: dart.fieldType(dart.nullable(alignment.Alignment)),
    [___CupertinoDatePickerDateState_alignCenterRight_isSet]: dart.fieldType(core.bool),
    [___CupertinoDatePickerDateState_selectedDay]: dart.fieldType(dart.nullable(core.int)),
    [___CupertinoDatePickerDateState_selectedDay_isSet]: dart.fieldType(core.bool),
    [___CupertinoDatePickerDateState_selectedMonth]: dart.fieldType(dart.nullable(core.int)),
    [___CupertinoDatePickerDateState_selectedMonth_isSet]: dart.fieldType(core.bool),
    [___CupertinoDatePickerDateState_selectedYear]: dart.fieldType(dart.nullable(core.int)),
    [___CupertinoDatePickerDateState_selectedYear_isSet]: dart.fieldType(core.bool),
    [___CupertinoDatePickerDateState_dayController]: dart.fieldType(dart.nullable(list_wheel_scroll_view.FixedExtentScrollController)),
    [___CupertinoDatePickerDateState_dayController_isSet]: dart.fieldType(core.bool),
    [___CupertinoDatePickerDateState_monthController]: dart.fieldType(dart.nullable(list_wheel_scroll_view.FixedExtentScrollController)),
    [___CupertinoDatePickerDateState_monthController_isSet]: dart.fieldType(core.bool),
    [___CupertinoDatePickerDateState_yearController]: dart.fieldType(dart.nullable(list_wheel_scroll_view.FixedExtentScrollController)),
    [___CupertinoDatePickerDateState_yearController_isSet]: dart.fieldType(core.bool),
    isDayPickerScrolling: dart.fieldType(core.bool),
    isMonthPickerScrolling: dart.fieldType(core.bool),
    isYearPickerScrolling: dart.fieldType(core.bool),
    estimatedColumnWidths: dart.fieldType(core.Map$(core.int, core.double))
  }));
  date_picker.CupertinoTimerPickerMode = class CupertinoTimerPickerMode extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (date_picker.CupertinoTimerPickerMode.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[0], 1445, 6, "index");
    if (_name == null) dart.nullFailed(I[0], 1445, 6, "_name");
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = date_picker.CupertinoTimerPickerMode.prototype;
  dart.addTypeTests(date_picker.CupertinoTimerPickerMode);
  dart.addTypeCaches(date_picker.CupertinoTimerPickerMode);
  dart.setLibraryUri(date_picker.CupertinoTimerPickerMode, I[1]);
  dart.setFieldSignature(date_picker.CupertinoTimerPickerMode, () => ({
    __proto__: dart.getFields(date_picker.CupertinoTimerPickerMode.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(date_picker.CupertinoTimerPickerMode, ['toString']);
  date_picker.CupertinoTimerPickerMode.hm = C[209] || CT.C209;
  date_picker.CupertinoTimerPickerMode.ms = C[210] || CT.C210;
  date_picker.CupertinoTimerPickerMode.hms = C[211] || CT.C211;
  date_picker.CupertinoTimerPickerMode.values = C[212] || CT.C212;
  var mode$0 = dart.privateName(date_picker, "CupertinoTimerPicker.mode");
  var initialTimerDuration$ = dart.privateName(date_picker, "CupertinoTimerPicker.initialTimerDuration");
  var minuteInterval$0 = dart.privateName(date_picker, "CupertinoTimerPicker.minuteInterval");
  var secondInterval$ = dart.privateName(date_picker, "CupertinoTimerPicker.secondInterval");
  var onTimerDurationChanged$ = dart.privateName(date_picker, "CupertinoTimerPicker.onTimerDurationChanged");
  var alignment$ = dart.privateName(date_picker, "CupertinoTimerPicker.alignment");
  var backgroundColor$0 = dart.privateName(date_picker, "CupertinoTimerPicker.backgroundColor");
  var Alignment_y = dart.privateName(alignment, "Alignment.y");
  var Alignment_x = dart.privateName(alignment, "Alignment.x");
  date_picker.CupertinoTimerPicker = class CupertinoTimerPicker extends framework.StatefulWidget {
    get mode() {
      return this[mode$0];
    }
    set mode(value) {
      super.mode = value;
    }
    get initialTimerDuration() {
      return this[initialTimerDuration$];
    }
    set initialTimerDuration(value) {
      super.initialTimerDuration = value;
    }
    get minuteInterval() {
      return this[minuteInterval$0];
    }
    set minuteInterval(value) {
      super.minuteInterval = value;
    }
    get secondInterval() {
      return this[secondInterval$];
    }
    set secondInterval(value) {
      super.secondInterval = value;
    }
    get onTimerDurationChanged() {
      return this[onTimerDurationChanged$];
    }
    set onTimerDurationChanged(value) {
      super.onTimerDurationChanged = value;
    }
    get alignment() {
      return this[alignment$];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get backgroundColor() {
      return this[backgroundColor$0];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    createState() {
      return new date_picker._CupertinoTimerPickerState.new();
    }
  };
  (date_picker.CupertinoTimerPicker.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let mode = opts && 'mode' in opts ? opts.mode : C[211] || CT.C211;
    if (mode == null) dart.nullFailed(I[0], 1496, 10, "mode");
    let initialTimerDuration = opts && 'initialTimerDuration' in opts ? opts.initialTimerDuration : C[213] || CT.C213;
    if (initialTimerDuration == null) dart.nullFailed(I[0], 1497, 10, "initialTimerDuration");
    let minuteInterval = opts && 'minuteInterval' in opts ? opts.minuteInterval : 1;
    if (minuteInterval == null) dart.nullFailed(I[0], 1498, 10, "minuteInterval");
    let secondInterval = opts && 'secondInterval' in opts ? opts.secondInterval : 1;
    if (secondInterval == null) dart.nullFailed(I[0], 1499, 10, "secondInterval");
    let alignment = opts && 'alignment' in opts ? opts.alignment : C[214] || CT.C214;
    if (alignment == null) dart.nullFailed(I[0], 1500, 10, "alignment");
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let onTimerDurationChanged = opts && 'onTimerDurationChanged' in opts ? opts.onTimerDurationChanged : null;
    if (onTimerDurationChanged == null) dart.nullFailed(I[0], 1502, 19, "onTimerDurationChanged");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[mode$0] = mode;
    this[initialTimerDuration$] = initialTimerDuration;
    this[minuteInterval$0] = minuteInterval;
    this[secondInterval$] = secondInterval;
    this[alignment$] = alignment;
    this[backgroundColor$0] = backgroundColor;
    this[onTimerDurationChanged$] = onTimerDurationChanged;
    if (!(mode != null)) dart.assertFailed(null, I[0], 1503, 15, "mode != null");
    if (!(onTimerDurationChanged != null)) dart.assertFailed(null, I[0], 1504, 15, "onTimerDurationChanged != null");
    if (!dart.test(initialTimerDuration['>='](core.Duration.zero))) dart.assertFailed(null, I[0], 1505, 15, "initialTimerDuration >= Duration.zero");
    if (!dart.test(initialTimerDuration['<'](C[215] || CT.C215))) dart.assertFailed(null, I[0], 1506, 15, "initialTimerDuration < const Duration(days: 1)");
    if (!(dart.notNull(minuteInterval) > 0 && (60)[$modulo](minuteInterval) === 0)) dart.assertFailed(null, I[0], 1507, 15, "minuteInterval > 0 && 60 % minuteInterval == 0");
    if (!(dart.notNull(secondInterval) > 0 && (60)[$modulo](secondInterval) === 0)) dart.assertFailed(null, I[0], 1508, 15, "secondInterval > 0 && 60 % secondInterval == 0");
    if (!(initialTimerDuration.inMinutes[$modulo](minuteInterval) === 0)) dart.assertFailed(null, I[0], 1509, 15, "initialTimerDuration.inMinutes % minuteInterval == 0");
    if (!(initialTimerDuration.inSeconds[$modulo](secondInterval) === 0)) dart.assertFailed(null, I[0], 1510, 15, "initialTimerDuration.inSeconds % secondInterval == 0");
    if (!(alignment != null)) dart.assertFailed(null, I[0], 1511, 15, "alignment != null");
    date_picker.CupertinoTimerPicker.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = date_picker.CupertinoTimerPicker.prototype;
  dart.addTypeTests(date_picker.CupertinoTimerPicker);
  dart.addTypeCaches(date_picker.CupertinoTimerPicker);
  dart.setMethodSignature(date_picker.CupertinoTimerPicker, () => ({
    __proto__: dart.getMethods(date_picker.CupertinoTimerPicker.__proto__),
    createState: dart.fnType(framework.State$(framework.StatefulWidget), [])
  }));
  dart.setLibraryUri(date_picker.CupertinoTimerPicker, I[1]);
  dart.setFieldSignature(date_picker.CupertinoTimerPicker, () => ({
    __proto__: dart.getFields(date_picker.CupertinoTimerPicker.__proto__),
    mode: dart.finalFieldType(date_picker.CupertinoTimerPickerMode),
    initialTimerDuration: dart.finalFieldType(core.Duration),
    minuteInterval: dart.finalFieldType(core.int),
    secondInterval: dart.finalFieldType(core.int),
    onTimerDurationChanged: dart.finalFieldType(dart.fnType(dart.void, [core.Duration])),
    alignment: dart.finalFieldType(alignment.AlignmentGeometry),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color))
  }));
  var ___CupertinoTimerPickerState_textDirection = dart.privateName(date_picker, "_#_CupertinoTimerPickerState#textDirection");
  var ___CupertinoTimerPickerState_textDirection_isSet = dart.privateName(date_picker, "_#_CupertinoTimerPickerState#textDirection#isSet");
  var ___CupertinoTimerPickerState_localizations = dart.privateName(date_picker, "_#_CupertinoTimerPickerState#localizations");
  var ___CupertinoTimerPickerState_localizations_isSet = dart.privateName(date_picker, "_#_CupertinoTimerPickerState#localizations#isSet");
  var ___CupertinoTimerPickerState_selectedMinute = dart.privateName(date_picker, "_#_CupertinoTimerPickerState#selectedMinute");
  var ___CupertinoTimerPickerState_selectedMinute_isSet = dart.privateName(date_picker, "_#_CupertinoTimerPickerState#selectedMinute#isSet");
  var ___CupertinoTimerPickerState_numberLabelWidth = dart.privateName(date_picker, "_#_CupertinoTimerPickerState#numberLabelWidth");
  var ___CupertinoTimerPickerState_numberLabelWidth_isSet = dart.privateName(date_picker, "_#_CupertinoTimerPickerState#numberLabelWidth#isSet");
  var ___CupertinoTimerPickerState_numberLabelHeight = dart.privateName(date_picker, "_#_CupertinoTimerPickerState#numberLabelHeight");
  var ___CupertinoTimerPickerState_numberLabelHeight_isSet = dart.privateName(date_picker, "_#_CupertinoTimerPickerState#numberLabelHeight#isSet");
  var ___CupertinoTimerPickerState_numberLabelBaseline = dart.privateName(date_picker, "_#_CupertinoTimerPickerState#numberLabelBaseline");
  var ___CupertinoTimerPickerState_numberLabelBaseline_isSet = dart.privateName(date_picker, "_#_CupertinoTimerPickerState#numberLabelBaseline#isSet");
  var ___CupertinoTimerPickerState_hourLabelWidth = dart.privateName(date_picker, "_#_CupertinoTimerPickerState#hourLabelWidth");
  var ___CupertinoTimerPickerState_hourLabelWidth_isSet = dart.privateName(date_picker, "_#_CupertinoTimerPickerState#hourLabelWidth#isSet");
  var ___CupertinoTimerPickerState_minuteLabelWidth = dart.privateName(date_picker, "_#_CupertinoTimerPickerState#minuteLabelWidth");
  var ___CupertinoTimerPickerState_minuteLabelWidth_isSet = dart.privateName(date_picker, "_#_CupertinoTimerPickerState#minuteLabelWidth#isSet");
  var ___CupertinoTimerPickerState_secondLabelWidth = dart.privateName(date_picker, "_#_CupertinoTimerPickerState#secondLabelWidth");
  var ___CupertinoTimerPickerState_secondLabelWidth_isSet = dart.privateName(date_picker, "_#_CupertinoTimerPickerState#secondLabelWidth#isSet");
  var ___CupertinoTimerPickerState_totalWidth = dart.privateName(date_picker, "_#_CupertinoTimerPickerState#totalWidth");
  var ___CupertinoTimerPickerState_totalWidth_isSet = dart.privateName(date_picker, "_#_CupertinoTimerPickerState#totalWidth#isSet");
  var ___CupertinoTimerPickerState_pickerColumnWidth = dart.privateName(date_picker, "_#_CupertinoTimerPickerState#pickerColumnWidth");
  var ___CupertinoTimerPickerState_pickerColumnWidth_isSet = dart.privateName(date_picker, "_#_CupertinoTimerPickerState#pickerColumnWidth#isSet");
  var _name$0 = dart.privateName(ui, "_name");
  var _measureLabelMetrics = dart.privateName(date_picker, "_measureLabelMetrics");
  var _textStyleFrom = dart.privateName(date_picker, "_textStyleFrom");
  var _measureLabelsMaxWidth = dart.privateName(date_picker, "_measureLabelsMaxWidth");
  var TextStyle_fontFeatures = dart.privateName(text_style, "TextStyle.fontFeatures");
  var TextStyle_shadows = dart.privateName(text_style, "TextStyle.shadows");
  var TextStyle_debugLabel = dart.privateName(text_style, "TextStyle.debugLabel");
  var TextStyle_decorationThickness = dart.privateName(text_style, "TextStyle.decorationThickness");
  var TextStyle_decorationStyle = dart.privateName(text_style, "TextStyle.decorationStyle");
  var TextStyle_decorationColor = dart.privateName(text_style, "TextStyle.decorationColor");
  var TextStyle_decoration = dart.privateName(text_style, "TextStyle.decoration");
  var TextStyle_background = dart.privateName(text_style, "TextStyle.background");
  var TextStyle_foreground = dart.privateName(text_style, "TextStyle.foreground");
  var TextStyle_locale = dart.privateName(text_style, "TextStyle.locale");
  var TextStyle_height = dart.privateName(text_style, "TextStyle.height");
  var TextStyle_textBaseline = dart.privateName(text_style, "TextStyle.textBaseline");
  var TextStyle_wordSpacing = dart.privateName(text_style, "TextStyle.wordSpacing");
  var TextStyle_letterSpacing = dart.privateName(text_style, "TextStyle.letterSpacing");
  var TextStyle_fontStyle = dart.privateName(text_style, "TextStyle.fontStyle");
  var FontWeight_index = dart.privateName(ui, "FontWeight.index");
  var TextStyle_fontWeight = dart.privateName(text_style, "TextStyle.fontWeight");
  var TextStyle_fontSize = dart.privateName(text_style, "TextStyle.fontSize");
  var TextStyle__package = dart.privateName(text_style, "TextStyle._package");
  var TextStyle__fontFamilyFallback = dart.privateName(text_style, "TextStyle._fontFamilyFallback");
  var TextStyle_fontFamily = dart.privateName(text_style, "TextStyle.fontFamily");
  var TextStyle_backgroundColor = dart.privateName(text_style, "TextStyle.backgroundColor");
  var TextStyle_color = dart.privateName(text_style, "TextStyle.color");
  var TextStyle_inherit = dart.privateName(text_style, "TextStyle.inherit");
  var _buildLabel = dart.privateName(date_picker, "_buildLabel");
  var _buildPickerNumberLabel = dart.privateName(date_picker, "_buildPickerNumberLabel");
  var _calculateOffAxisFraction = dart.privateName(date_picker, "_calculateOffAxisFraction");
  var _buildHourColumn = dart.privateName(date_picker, "_buildHourColumn");
  var _buildMinuteColumn = dart.privateName(date_picker, "_buildMinuteColumn");
  var _buildSecondPicker = dart.privateName(date_picker, "_buildSecondPicker");
  var _buildSecondColumn = dart.privateName(date_picker, "_buildSecondColumn");
  date_picker._CupertinoTimerPickerState = class _CupertinoTimerPickerState extends framework.State$(date_picker.CupertinoTimerPicker) {
    get textDirection() {
      let t21;
      return dart.test(this[___CupertinoTimerPickerState_textDirection_isSet]) ? (t21 = this[___CupertinoTimerPickerState_textDirection], t21) : dart.throw(new _internal.LateError.fieldNI("textDirection"));
    }
    set textDirection(t21) {
      if (t21 == null) dart.nullFailed(I[0], 1546, 22, "null");
      this[___CupertinoTimerPickerState_textDirection_isSet] = true;
      this[___CupertinoTimerPickerState_textDirection] = t21;
    }
    get localizations() {
      let t22;
      return dart.test(this[___CupertinoTimerPickerState_localizations_isSet]) ? (t22 = this[___CupertinoTimerPickerState_localizations], t22) : dart.throw(new _internal.LateError.fieldNI("localizations"));
    }
    set localizations(t22) {
      if (t22 == null) dart.nullFailed(I[0], 1547, 31, "null");
      this[___CupertinoTimerPickerState_localizations_isSet] = true;
      this[___CupertinoTimerPickerState_localizations] = t22;
    }
    get textDirectionFactor() {
      switch (this.textDirection) {
        case C[216] || CT.C216:
        {
          return 1;
        }
        case C[217] || CT.C217:
        {
          return -1;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    get selectedMinute() {
      let t23;
      return dart.test(this[___CupertinoTimerPickerState_selectedMinute_isSet]) ? (t23 = this[___CupertinoTimerPickerState_selectedMinute], t23) : dart.throw(new _internal.LateError.fieldNI("selectedMinute"));
    }
    set selectedMinute(t23) {
      if (t23 == null) dart.nullFailed(I[0], 1559, 12, "null");
      this[___CupertinoTimerPickerState_selectedMinute_isSet] = true;
      this[___CupertinoTimerPickerState_selectedMinute] = t23;
    }
    get numberLabelWidth() {
      let t24;
      return dart.test(this[___CupertinoTimerPickerState_numberLabelWidth_isSet]) ? (t24 = this[___CupertinoTimerPickerState_numberLabelWidth], t24) : dart.throw(new _internal.LateError.fieldNI("numberLabelWidth"));
    }
    set numberLabelWidth(t24) {
      if (t24 == null) dart.nullFailed(I[0], 1570, 15, "null");
      this[___CupertinoTimerPickerState_numberLabelWidth_isSet] = true;
      this[___CupertinoTimerPickerState_numberLabelWidth] = t24;
    }
    get numberLabelHeight() {
      let t25;
      return dart.test(this[___CupertinoTimerPickerState_numberLabelHeight_isSet]) ? (t25 = this[___CupertinoTimerPickerState_numberLabelHeight], t25) : dart.throw(new _internal.LateError.fieldNI("numberLabelHeight"));
    }
    set numberLabelHeight(t25) {
      if (t25 == null) dart.nullFailed(I[0], 1571, 15, "null");
      this[___CupertinoTimerPickerState_numberLabelHeight_isSet] = true;
      this[___CupertinoTimerPickerState_numberLabelHeight] = t25;
    }
    get numberLabelBaseline() {
      let t26;
      return dart.test(this[___CupertinoTimerPickerState_numberLabelBaseline_isSet]) ? (t26 = this[___CupertinoTimerPickerState_numberLabelBaseline], t26) : dart.throw(new _internal.LateError.fieldNI("numberLabelBaseline"));
    }
    set numberLabelBaseline(t26) {
      if (t26 == null) dart.nullFailed(I[0], 1572, 15, "null");
      this[___CupertinoTimerPickerState_numberLabelBaseline_isSet] = true;
      this[___CupertinoTimerPickerState_numberLabelBaseline] = t26;
    }
    set hourLabelWidth(t27) {
      if (t27 == null) dart.nullFailed(I[0], 1574, 15, "null");
      this[___CupertinoTimerPickerState_hourLabelWidth_isSet] = true;
      this[___CupertinoTimerPickerState_hourLabelWidth] = t27;
    }
    get hourLabelWidth() {
      let t28;
      return dart.test(this[___CupertinoTimerPickerState_hourLabelWidth_isSet]) ? (t28 = this[___CupertinoTimerPickerState_hourLabelWidth], t28) : dart.throw(new _internal.LateError.fieldNI("hourLabelWidth"));
    }
    get minuteLabelWidth() {
      let t28;
      return dart.test(this[___CupertinoTimerPickerState_minuteLabelWidth_isSet]) ? (t28 = this[___CupertinoTimerPickerState_minuteLabelWidth], t28) : dart.throw(new _internal.LateError.fieldNI("minuteLabelWidth"));
    }
    set minuteLabelWidth(t28) {
      if (t28 == null) dart.nullFailed(I[0], 1575, 15, "null");
      this[___CupertinoTimerPickerState_minuteLabelWidth_isSet] = true;
      this[___CupertinoTimerPickerState_minuteLabelWidth] = t28;
    }
    get secondLabelWidth() {
      let t29;
      return dart.test(this[___CupertinoTimerPickerState_secondLabelWidth_isSet]) ? (t29 = this[___CupertinoTimerPickerState_secondLabelWidth], t29) : dart.throw(new _internal.LateError.fieldNI("secondLabelWidth"));
    }
    set secondLabelWidth(t29) {
      if (t29 == null) dart.nullFailed(I[0], 1576, 15, "null");
      this[___CupertinoTimerPickerState_secondLabelWidth_isSet] = true;
      this[___CupertinoTimerPickerState_secondLabelWidth] = t29;
    }
    get totalWidth() {
      let t30;
      return dart.test(this[___CupertinoTimerPickerState_totalWidth_isSet]) ? (t30 = this[___CupertinoTimerPickerState_totalWidth], t30) : dart.throw(new _internal.LateError.fieldNI("totalWidth"));
    }
    set totalWidth(t30) {
      if (t30 == null) dart.nullFailed(I[0], 1578, 15, "null");
      this[___CupertinoTimerPickerState_totalWidth_isSet] = true;
      this[___CupertinoTimerPickerState_totalWidth] = t30;
    }
    get pickerColumnWidth() {
      let t31;
      return dart.test(this[___CupertinoTimerPickerState_pickerColumnWidth_isSet]) ? (t31 = this[___CupertinoTimerPickerState_pickerColumnWidth], t31) : dart.throw(new _internal.LateError.fieldNI("pickerColumnWidth"));
    }
    set pickerColumnWidth(t31) {
      if (t31 == null) dart.nullFailed(I[0], 1579, 15, "null");
      this[___CupertinoTimerPickerState_pickerColumnWidth_isSet] = true;
      this[___CupertinoTimerPickerState_pickerColumnWidth] = t31;
    }
    initState() {
      super.initState();
      this.selectedMinute = this.widget.initialTimerDuration.inMinutes[$modulo](60);
      if (this.widget.mode != date_picker.CupertinoTimerPickerMode.ms) this.selectedHour = this.widget.initialTimerDuration.inHours;
      if (this.widget.mode != date_picker.CupertinoTimerPickerMode.hm) this.selectedSecond = this.widget.initialTimerDuration.inSeconds[$modulo](60);
      dart.nullCheck(binding.PaintingBinding.instance).systemFonts.addListener(dart.bind(this, _handleSystemFontsChange));
    }
    [_handleSystemFontsChange]() {
      this.setState(dart.fn(() => {
        this.textPainter.markNeedsLayout();
        this[_measureLabelMetrics]();
      }, T.VoidTovoid()));
    }
    dispose() {
      dart.nullCheck(binding.PaintingBinding.instance).systemFonts.removeListener(dart.bind(this, _handleSystemFontsChange));
      super.dispose();
    }
    didUpdateWidget(oldWidget) {
      date_picker.CupertinoTimerPicker.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[0], 1611, 45, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (!(oldWidget.mode == this.widget.mode)) dart.assertFailed("The CupertinoTimerPicker's mode cannot change once it's built", I[0], 1615, 7, "oldWidget.mode == widget.mode");
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      this.textDirection = basic.Directionality.of(this.context);
      this.localizations = localizations.CupertinoLocalizations.of(this.context);
      this[_measureLabelMetrics]();
    }
    [_measureLabelMetrics]() {
      this.textPainter.textDirection = this.textDirection;
      let textStyle = this[_textStyleFrom](this.context, 1.0625);
      let maxWidth = -1 / 0;
      let widestNumber = null;
      for (let input of this.numbers) {
        this.textPainter.text = new text_span.TextSpan.new({text: input, style: textStyle});
        this.textPainter.layout();
        if (dart.notNull(this.textPainter.maxIntrinsicWidth) > dart.notNull(maxWidth)) {
          maxWidth = this.textPainter.maxIntrinsicWidth;
          widestNumber = input;
        }
      }
      this.textPainter.text = new text_span.TextSpan.new({text: dart.str(widestNumber) + dart.str(widestNumber), style: textStyle});
      this.textPainter.layout();
      this.numberLabelWidth = this.textPainter.maxIntrinsicWidth;
      this.numberLabelHeight = this.textPainter.height;
      this.numberLabelBaseline = this.textPainter.computeDistanceToActualBaseline(ui.TextBaseline.alphabetic);
      this.minuteLabelWidth = this[_measureLabelsMaxWidth](this.localizations.timerPickerMinuteLabels, textStyle);
      if (this.widget.mode != date_picker.CupertinoTimerPickerMode.ms) this.hourLabelWidth = this[_measureLabelsMaxWidth](this.localizations.timerPickerHourLabels, textStyle);
      if (this.widget.mode != date_picker.CupertinoTimerPickerMode.hm) this.secondLabelWidth = this[_measureLabelsMaxWidth](this.localizations.timerPickerSecondLabels, textStyle);
    }
    [_measureLabelsMaxWidth](labels, style) {
      if (labels == null) dart.nullFailed(I[0], 1680, 47, "labels");
      if (style == null) dart.nullFailed(I[0], 1680, 65, "style");
      let maxWidth = -1 / 0;
      for (let i = 0; i < dart.notNull(labels[$length]); i = i + 1) {
        let label = labels[$_get](i);
        if (label == null) {
          continue;
        }
        this.textPainter.text = new text_span.TextSpan.new({text: label, style: style});
        this.textPainter.layout();
        this.textPainter.maxIntrinsicWidth;
        if (dart.notNull(this.textPainter.maxIntrinsicWidth) > dart.notNull(maxWidth)) maxWidth = this.textPainter.maxIntrinsicWidth;
      }
      return maxWidth;
    }
    [_buildLabel](text, pickerPadding) {
      if (text == null) dart.nullFailed(I[0], 1702, 29, "text");
      if (pickerPadding == null) dart.nullFailed(I[0], 1702, 57, "pickerPadding");
      let padding = new edge_insets.EdgeInsetsDirectional.only({start: dart.notNull(this.numberLabelWidth) + 6 + dart.notNull(pickerPadding.start)});
      return new basic.IgnorePointer.new({child: new container.Container.new({alignment: alignment.AlignmentDirectional.centerStart.resolve(this.textDirection), padding: padding.resolve(this.textDirection), child: new basic.SizedBox.new({height: this.numberLabelHeight, child: new basic.Baseline.new({baseline: this.numberLabelBaseline, baselineType: ui.TextBaseline.alphabetic, child: new text$.Text.new(text, {style: C[218] || CT.C218, maxLines: 1, softWrap: false, $creationLocationd_0dea112b090073317d4: C[220] || CT.C220}), $creationLocationd_0dea112b090073317d4: C[226] || CT.C226}), $creationLocationd_0dea112b090073317d4: C[231] || CT.C231}), $creationLocationd_0dea112b090073317d4: C[235] || CT.C235}), $creationLocationd_0dea112b090073317d4: C[240] || CT.C240});
    }
    [_buildPickerNumberLabel](text, padding) {
      if (text == null) dart.nullFailed(I[0], 1735, 41, "text");
      if (padding == null) dart.nullFailed(I[0], 1735, 69, "padding");
      return new container.Container.new({width: 106 + dart.notNull(padding.horizontal), padding: padding.resolve(this.textDirection), alignment: alignment.AlignmentDirectional.centerStart.resolve(this.textDirection), child: new container.Container.new({width: this.numberLabelWidth, alignment: alignment.AlignmentDirectional.centerEnd.resolve(this.textDirection), child: new text$.Text.new(text, {softWrap: false, maxLines: 1, overflow: paragraph.TextOverflow.visible, $creationLocationd_0dea112b090073317d4: C[243] || CT.C243}), $creationLocationd_0dea112b090073317d4: C[249] || CT.C249}), $creationLocationd_0dea112b090073317d4: C[254] || CT.C254});
    }
    [_buildHourPicker](additionalPadding, selectionOverlay) {
      if (additionalPadding == null) dart.nullFailed(I[0], 1748, 49, "additionalPadding");
      if (selectionOverlay == null) dart.nullFailed(I[0], 1748, 75, "selectionOverlay");
      return new picker.CupertinoPicker.new({scrollController: new list_wheel_scroll_view.FixedExtentScrollController.new({initialItem: dart.nullCheck(this.selectedHour)}), magnification: 1.119047619047619, offAxisFraction: this[_calculateOffAxisFraction](additionalPadding.start, 0), itemExtent: 32, backgroundColor: this.widget.backgroundColor, squeeze: 1.25, onSelectedItemChanged: dart.fn(index => {
          if (index == null) dart.nullFailed(I[0], 1756, 35, "index");
          this.setState(dart.fn(() => {
            let t32, t33, t32$;
            this.selectedHour = index;
            t32$ = this.widget;
            t33 = new core.Duration.new({hours: dart.nullCheck(this.selectedHour), minutes: this.selectedMinute, seconds: (t32 = this.selectedSecond, t32 == null ? 0 : t32)});
            t32$.onTimerDurationChanged(t33);
          }, T.VoidTovoid()));
        }, T.intTovoid()), children: T.ListOfWidget().generate(24, dart.fn(index => {
          let t32;
          if (index == null) dart.nullFailed(I[0], 1766, 48, "index");
          let label = (t32 = this.localizations.timerPickerHourLabel(index), t32 == null ? "" : t32);
          let semanticsLabel = this.textDirectionFactor === 1 ? dart.notNull(this.localizations.timerPickerHour(index)) + dart.notNull(label) : dart.notNull(label) + dart.notNull(this.localizations.timerPickerHour(index));
          return new basic.Semantics.new({label: semanticsLabel, excludeSemantics: true, child: this[_buildPickerNumberLabel](this.localizations.timerPickerHour(index), additionalPadding), $creationLocationd_0dea112b090073317d4: C[260] || CT.C260});
        }, T.intToSemantics())), selectionOverlay: selectionOverlay, $creationLocationd_0dea112b090073317d4: C[265] || CT.C265});
    }
    [_buildHourColumn](additionalPadding, selectionOverlay) {
      let t32, t32$;
      if (additionalPadding == null) dart.nullFailed(I[0], 1782, 49, "additionalPadding");
      if (selectionOverlay == null) dart.nullFailed(I[0], 1782, 75, "selectionOverlay");
      additionalPadding = new edge_insets.EdgeInsetsDirectional.only({start: math.max(core.double, additionalPadding.start, 0.0), end: math.max(core.double, additionalPadding.end, 0.0)});
      return new basic.Stack.new({children: T.JSArrayOfWidget().of([new (T.NotificationListenerOfScrollEndNotification()).new({onNotification: dart.fn(notification => {
              if (notification == null) dart.nullFailed(I[0], 1791, 50, "notification");
              this.setState(dart.fn(() => {
                this.lastSelectedHour = this.selectedHour;
              }, T.VoidTovoid()));
              return false;
            }, T.ScrollEndNotificationTobool()), child: this[_buildHourPicker](additionalPadding, selectionOverlay), $creationLocationd_0dea112b090073317d4: C[276] || CT.C276}), this[_buildLabel]((t32$ = this.localizations.timerPickerHourLabel((t32 = this.lastSelectedHour, t32 == null ? dart.nullCheck(this.selectedHour) : t32)), t32$ == null ? "" : t32$), additionalPadding)]), $creationLocationd_0dea112b090073317d4: C[280] || CT.C280});
    }
    [_buildMinutePicker](additionalPadding, selectionOverlay) {
      if (additionalPadding == null) dart.nullFailed(I[0], 1805, 51, "additionalPadding");
      if (selectionOverlay == null) dart.nullFailed(I[0], 1805, 77, "selectionOverlay");
      return new picker.CupertinoPicker.new({scrollController: new list_wheel_scroll_view.FixedExtentScrollController.new({initialItem: (dart.notNull(this.selectedMinute) / dart.notNull(this.widget.minuteInterval))[$truncate]()}), magnification: 1.119047619047619, offAxisFraction: this[_calculateOffAxisFraction](additionalPadding.start, this.widget.mode == date_picker.CupertinoTimerPickerMode.ms ? 0 : 1), itemExtent: 32, backgroundColor: this.widget.backgroundColor, squeeze: 1.25, looping: true, onSelectedItemChanged: dart.fn(index => {
          if (index == null) dart.nullFailed(I[0], 1819, 35, "index");
          this.setState(dart.fn(() => {
            let t32, t32$, t33, t32$0;
            this.selectedMinute = dart.notNull(index) * dart.notNull(this.widget.minuteInterval);
            t32$0 = this.widget;
            t33 = new core.Duration.new({hours: (t32 = this.selectedHour, t32 == null ? 0 : t32), minutes: this.selectedMinute, seconds: (t32$ = this.selectedSecond, t32$ == null ? 0 : t32$)});
            t32$0.onTimerDurationChanged(t33);
          }, T.VoidTovoid()));
        }, T.intTovoid()), children: T.ListOfWidget().generate((60 / dart.notNull(this.widget.minuteInterval))[$truncate](), dart.fn(index => {
          let t32;
          if (index == null) dart.nullFailed(I[0], 1829, 73, "index");
          let minute = dart.notNull(index) * dart.notNull(this.widget.minuteInterval);
          let label = (t32 = this.localizations.timerPickerMinuteLabel(minute), t32 == null ? "" : t32);
          let semanticsLabel = this.textDirectionFactor === 1 ? dart.notNull(this.localizations.timerPickerMinute(minute)) + dart.notNull(label) : dart.notNull(label) + dart.notNull(this.localizations.timerPickerMinute(minute));
          return new basic.Semantics.new({label: semanticsLabel, excludeSemantics: true, child: this[_buildPickerNumberLabel](this.localizations.timerPickerMinute(minute), additionalPadding), $creationLocationd_0dea112b090073317d4: C[283] || CT.C283});
        }, T.intToSemantics())), selectionOverlay: selectionOverlay, $creationLocationd_0dea112b090073317d4: C[288] || CT.C288});
    }
    [_buildMinuteColumn](additionalPadding, selectionOverlay) {
      let t32, t32$;
      if (additionalPadding == null) dart.nullFailed(I[0], 1846, 51, "additionalPadding");
      if (selectionOverlay == null) dart.nullFailed(I[0], 1846, 77, "selectionOverlay");
      additionalPadding = new edge_insets.EdgeInsetsDirectional.only({start: math.max(core.double, additionalPadding.start, 0.0), end: math.max(core.double, additionalPadding.end, 0.0)});
      return new basic.Stack.new({children: T.JSArrayOfWidget().of([new (T.NotificationListenerOfScrollEndNotification()).new({onNotification: dart.fn(notification => {
              if (notification == null) dart.nullFailed(I[0], 1855, 50, "notification");
              this.setState(dart.fn(() => {
                this.lastSelectedMinute = this.selectedMinute;
              }, T.VoidTovoid()));
              return false;
            }, T.ScrollEndNotificationTobool()), child: this[_buildMinutePicker](additionalPadding, selectionOverlay), $creationLocationd_0dea112b090073317d4: C[300] || CT.C300}), this[_buildLabel]((t32$ = this.localizations.timerPickerMinuteLabel((t32 = this.lastSelectedMinute, t32 == null ? this.selectedMinute : t32)), t32$ == null ? "" : t32$), additionalPadding)]), $creationLocationd_0dea112b090073317d4: C[304] || CT.C304});
    }
    [_buildSecondPicker](additionalPadding, selectionOverlay) {
      if (additionalPadding == null) dart.nullFailed(I[0], 1869, 51, "additionalPadding");
      if (selectionOverlay == null) dart.nullFailed(I[0], 1869, 77, "selectionOverlay");
      return new picker.CupertinoPicker.new({scrollController: new list_wheel_scroll_view.FixedExtentScrollController.new({initialItem: (dart.nullCheck(this.selectedSecond) / dart.notNull(this.widget.secondInterval))[$truncate]()}), magnification: 1.119047619047619, offAxisFraction: this[_calculateOffAxisFraction](additionalPadding.start, this.widget.mode == date_picker.CupertinoTimerPickerMode.ms ? 1 : 2), itemExtent: 32, backgroundColor: this.widget.backgroundColor, squeeze: 1.25, looping: true, onSelectedItemChanged: dart.fn(index => {
          if (index == null) dart.nullFailed(I[0], 1883, 35, "index");
          this.setState(dart.fn(() => {
            let t32, t33, t32$;
            this.selectedSecond = dart.notNull(index) * dart.notNull(this.widget.secondInterval);
            t32$ = this.widget;
            t33 = new core.Duration.new({hours: (t32 = this.selectedHour, t32 == null ? 0 : t32), minutes: this.selectedMinute, seconds: dart.nullCheck(this.selectedSecond)});
            t32$.onTimerDurationChanged(t33);
          }, T.VoidTovoid()));
        }, T.intTovoid()), children: T.ListOfWidget().generate((60 / dart.notNull(this.widget.secondInterval))[$truncate](), dart.fn(index => {
          let t32;
          if (index == null) dart.nullFailed(I[0], 1893, 73, "index");
          let second = dart.notNull(index) * dart.notNull(this.widget.secondInterval);
          let label = (t32 = this.localizations.timerPickerSecondLabel(second), t32 == null ? "" : t32);
          let semanticsLabel = this.textDirectionFactor === 1 ? dart.notNull(this.localizations.timerPickerSecond(second)) + dart.notNull(label) : dart.notNull(label) + dart.notNull(this.localizations.timerPickerSecond(second));
          return new basic.Semantics.new({label: semanticsLabel, excludeSemantics: true, child: this[_buildPickerNumberLabel](this.localizations.timerPickerSecond(second), additionalPadding), $creationLocationd_0dea112b090073317d4: C[307] || CT.C307});
        }, T.intToSemantics())), selectionOverlay: selectionOverlay, $creationLocationd_0dea112b090073317d4: C[312] || CT.C312});
    }
    [_buildSecondColumn](additionalPadding, selectionOverlay) {
      let t32, t32$;
      if (additionalPadding == null) dart.nullFailed(I[0], 1910, 51, "additionalPadding");
      if (selectionOverlay == null) dart.nullFailed(I[0], 1910, 77, "selectionOverlay");
      additionalPadding = new edge_insets.EdgeInsetsDirectional.only({start: math.max(core.double, additionalPadding.start, 0.0), end: math.max(core.double, additionalPadding.end, 0.0)});
      return new basic.Stack.new({children: T.JSArrayOfWidget().of([new (T.NotificationListenerOfScrollEndNotification()).new({onNotification: dart.fn(notification => {
              if (notification == null) dart.nullFailed(I[0], 1919, 50, "notification");
              this.setState(dart.fn(() => {
                this.lastSelectedSecond = this.selectedSecond;
              }, T.VoidTovoid()));
              return false;
            }, T.ScrollEndNotificationTobool()), child: this[_buildSecondPicker](additionalPadding, selectionOverlay), $creationLocationd_0dea112b090073317d4: C[324] || CT.C324}), this[_buildLabel]((t32$ = this.localizations.timerPickerSecondLabel((t32 = this.lastSelectedSecond, t32 == null ? dart.nullCheck(this.selectedSecond) : t32)), t32$ == null ? "" : t32$), additionalPadding)]), $creationLocationd_0dea112b090073317d4: C[328] || CT.C328});
    }
    [_textStyleFrom](context, magnification = 1) {
      if (context == null) dart.nullFailed(I[0], 1935, 41, "context");
      if (magnification == null) dart.nullFailed(I[0], 1935, 58, "magnification");
      let textStyle = theme.CupertinoTheme.of(context).textTheme.pickerTextStyle;
      return textStyle.copyWith({fontSize: dart.nullCheck(textStyle.fontSize) * dart.notNull(magnification)});
    }
    [_calculateOffAxisFraction](paddingStart, position) {
      if (paddingStart == null) dart.nullFailed(I[0], 1944, 43, "paddingStart");
      if (position == null) dart.nullFailed(I[0], 1944, 61, "position");
      let centerPoint = dart.notNull(paddingStart) + dart.notNull(this.numberLabelWidth) / 2;
      let pickerColumnOffAxisFraction = 0.5 - centerPoint / dart.notNull(this.pickerColumnWidth);
      let timerPickerOffAxisFraction = 0.5 - (centerPoint + dart.notNull(this.pickerColumnWidth) * dart.notNull(position)) / dart.notNull(this.totalWidth);
      return (pickerColumnOffAxisFraction - timerPickerOffAxisFraction) * dart.notNull(this.textDirectionFactor);
    }
    build(context) {
      if (context == null) dart.nullFailed(I[0], 1957, 29, "context");
      return new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
          if (context == null) dart.nullFailed(I[0], 1959, 30, "context");
          if (constraints == null) dart.nullFailed(I[0], 1959, 54, "constraints");
          let columns = null;
          if (this.widget.mode == date_picker.CupertinoTimerPickerMode.hms) {
            this.pickerColumnWidth = 106 + 4 * 2;
            this.totalWidth = dart.notNull(this.pickerColumnWidth) * 3;
          } else {
            this.totalWidth = 320;
            this.pickerColumnWidth = dart.notNull(this.totalWidth) / 2;
          }
          if (dart.notNull(constraints.maxWidth) < dart.notNull(this.totalWidth)) {
            this.totalWidth = constraints.maxWidth;
            this.pickerColumnWidth = dart.notNull(this.totalWidth) / (this.widget.mode == date_picker.CupertinoTimerPickerMode.hms ? 3 : 2);
          }
          let baseLabelContentWidth = dart.notNull(this.numberLabelWidth) + 6;
          let minuteLabelContentWidth = baseLabelContentWidth + dart.notNull(this.minuteLabelWidth);
          switch (this.widget.mode) {
            case C[209] || CT.C209:
            {
              let hourLabelContentWidth = baseLabelContentWidth + dart.notNull(this.hourLabelWidth);
              let hourColumnStartPadding = dart.notNull(this.pickerColumnWidth) - hourLabelContentWidth - 4;
              if (hourColumnStartPadding < 30) hourColumnStartPadding = 30;
              let minuteColumnEndPadding = dart.notNull(this.pickerColumnWidth) - minuteLabelContentWidth - 4;
              if (minuteColumnEndPadding < 30) minuteColumnEndPadding = 30;
              columns = T.JSArrayOfWidget().of([this[_buildHourColumn](new edge_insets.EdgeInsetsDirectional.only({start: hourColumnStartPadding, end: dart.notNull(this.pickerColumnWidth) - hourColumnStartPadding - hourLabelContentWidth}), date_picker._leftSelectionOverlay), this[_buildMinuteColumn](new edge_insets.EdgeInsetsDirectional.only({start: dart.notNull(this.pickerColumnWidth) - minuteColumnEndPadding - minuteLabelContentWidth, end: minuteColumnEndPadding}), date_picker._rightSelectionOverlay)]);
              break;
            }
            case C[210] || CT.C210:
            {
              let secondLabelContentWidth = baseLabelContentWidth + dart.notNull(this.secondLabelWidth);
              let secondColumnEndPadding = dart.notNull(this.pickerColumnWidth) - secondLabelContentWidth - 4;
              if (secondColumnEndPadding < 30) secondColumnEndPadding = 30;
              let minuteColumnStartPadding = dart.notNull(this.pickerColumnWidth) - minuteLabelContentWidth - 4;
              if (minuteColumnStartPadding < 30) minuteColumnStartPadding = 30;
              columns = T.JSArrayOfWidget().of([this[_buildMinuteColumn](new edge_insets.EdgeInsetsDirectional.only({start: minuteColumnStartPadding, end: dart.notNull(this.pickerColumnWidth) - minuteColumnStartPadding - minuteLabelContentWidth}), date_picker._leftSelectionOverlay), this[_buildSecondColumn](new edge_insets.EdgeInsetsDirectional.only({start: dart.notNull(this.pickerColumnWidth) - secondColumnEndPadding - minuteLabelContentWidth, end: secondColumnEndPadding}), date_picker._rightSelectionOverlay)]);
              break;
            }
            case C[211] || CT.C211:
            {
              let hourColumnEndPadding = dart.notNull(this.pickerColumnWidth) - baseLabelContentWidth - dart.notNull(this.hourLabelWidth) - 30;
              let minuteColumnPadding = (dart.notNull(this.pickerColumnWidth) - minuteLabelContentWidth) / 2;
              let secondColumnStartPadding = dart.notNull(this.pickerColumnWidth) - baseLabelContentWidth - dart.notNull(this.secondLabelWidth) - 30;
              columns = T.JSArrayOfWidget().of([this[_buildHourColumn](new edge_insets.EdgeInsetsDirectional.only({start: 30, end: math.max(core.double, hourColumnEndPadding, 0.0)}), date_picker._leftSelectionOverlay), this[_buildMinuteColumn](new edge_insets.EdgeInsetsDirectional.only({start: minuteColumnPadding, end: minuteColumnPadding}), date_picker._centerSelectionOverlay), this[_buildSecondColumn](new edge_insets.EdgeInsetsDirectional.only({start: math.max(core.double, secondColumnStartPadding, 0.0), end: 30}), date_picker._rightSelectionOverlay)]);
              break;
            }
            default:
            {
              dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
            }
          }
          let themeData = theme.CupertinoTheme.of(context);
          return new media_query.MediaQuery.new({data: media_query.MediaQuery.of(context).copyWith({textScaleFactor: 1.0}), child: new theme.CupertinoTheme.new({data: themeData.copyWith({textTheme: themeData.textTheme.copyWith({pickerTextStyle: this[_textStyleFrom](context, 1.0625)})}), child: new basic.Align.new({alignment: this.widget.alignment, child: new container.Container.new({color: colors.CupertinoDynamicColor.maybeResolve(this.widget.backgroundColor, context), width: this.totalWidth, height: 216, child: new text$.DefaultTextStyle.new({style: this[_textStyleFrom](context), child: new basic.Row.new({children: columns[$map](basic.Expanded, dart.fn(child => {
                        if (child == null) dart.nullFailed(I[0], 2097, 60, "child");
                        return new basic.Expanded.new({child: child, $creationLocationd_0dea112b090073317d4: C[331] || CT.C331});
                      }, T.WidgetToExpanded()))[$toList]({growable: false}), $creationLocationd_0dea112b090073317d4: C[334] || CT.C334}), $creationLocationd_0dea112b090073317d4: C[337] || CT.C337}), $creationLocationd_0dea112b090073317d4: C[341] || CT.C341}), $creationLocationd_0dea112b090073317d4: C[347] || CT.C347}), $creationLocationd_0dea112b090073317d4: C[351] || CT.C351}), $creationLocationd_0dea112b090073317d4: C[355] || CT.C355});
        }, T.BuildContextAndBoxConstraintsToMediaQuery()), $creationLocationd_0dea112b090073317d4: C[359] || CT.C359});
    }
  };
  (date_picker._CupertinoTimerPickerState.new = function() {
    this[___CupertinoTimerPickerState_textDirection] = null;
    this[___CupertinoTimerPickerState_textDirection_isSet] = false;
    this[___CupertinoTimerPickerState_localizations] = null;
    this[___CupertinoTimerPickerState_localizations_isSet] = false;
    this.selectedHour = null;
    this[___CupertinoTimerPickerState_selectedMinute] = null;
    this[___CupertinoTimerPickerState_selectedMinute_isSet] = false;
    this.selectedSecond = null;
    this.lastSelectedHour = null;
    this.lastSelectedMinute = null;
    this.lastSelectedSecond = null;
    this.textPainter = new text_painter.TextPainter.new();
    this.numbers = T.ListOfString().generate(10, dart.fn(i => {
      if (i == null) dart.nullFailed(I[0], 1569, 63, "i");
      return dart.str(9 - dart.notNull(i));
    }, T.intToString()));
    this[___CupertinoTimerPickerState_numberLabelWidth] = null;
    this[___CupertinoTimerPickerState_numberLabelWidth_isSet] = false;
    this[___CupertinoTimerPickerState_numberLabelHeight] = null;
    this[___CupertinoTimerPickerState_numberLabelHeight_isSet] = false;
    this[___CupertinoTimerPickerState_numberLabelBaseline] = null;
    this[___CupertinoTimerPickerState_numberLabelBaseline_isSet] = false;
    this[___CupertinoTimerPickerState_hourLabelWidth] = null;
    this[___CupertinoTimerPickerState_hourLabelWidth_isSet] = false;
    this[___CupertinoTimerPickerState_minuteLabelWidth] = null;
    this[___CupertinoTimerPickerState_minuteLabelWidth_isSet] = false;
    this[___CupertinoTimerPickerState_secondLabelWidth] = null;
    this[___CupertinoTimerPickerState_secondLabelWidth_isSet] = false;
    this[___CupertinoTimerPickerState_totalWidth] = null;
    this[___CupertinoTimerPickerState_totalWidth_isSet] = false;
    this[___CupertinoTimerPickerState_pickerColumnWidth] = null;
    this[___CupertinoTimerPickerState_pickerColumnWidth_isSet] = false;
    date_picker._CupertinoTimerPickerState.__proto__.new.call(this);
    ;
  }).prototype = date_picker._CupertinoTimerPickerState.prototype;
  dart.addTypeTests(date_picker._CupertinoTimerPickerState);
  dart.addTypeCaches(date_picker._CupertinoTimerPickerState);
  dart.setMethodSignature(date_picker._CupertinoTimerPickerState, () => ({
    __proto__: dart.getMethods(date_picker._CupertinoTimerPickerState.__proto__),
    [_handleSystemFontsChange]: dart.fnType(dart.void, []),
    [_measureLabelMetrics]: dart.fnType(dart.void, []),
    [_measureLabelsMaxWidth]: dart.fnType(core.double, [core.List$(dart.nullable(core.String)), text_style.TextStyle]),
    [_buildLabel]: dart.fnType(framework.Widget, [core.String, edge_insets.EdgeInsetsDirectional]),
    [_buildPickerNumberLabel]: dart.fnType(framework.Widget, [core.String, edge_insets.EdgeInsetsDirectional]),
    [_buildHourPicker]: dart.fnType(framework.Widget, [edge_insets.EdgeInsetsDirectional, framework.Widget]),
    [_buildHourColumn]: dart.fnType(framework.Widget, [edge_insets.EdgeInsetsDirectional, framework.Widget]),
    [_buildMinutePicker]: dart.fnType(framework.Widget, [edge_insets.EdgeInsetsDirectional, framework.Widget]),
    [_buildMinuteColumn]: dart.fnType(framework.Widget, [edge_insets.EdgeInsetsDirectional, framework.Widget]),
    [_buildSecondPicker]: dart.fnType(framework.Widget, [edge_insets.EdgeInsetsDirectional, framework.Widget]),
    [_buildSecondColumn]: dart.fnType(framework.Widget, [edge_insets.EdgeInsetsDirectional, framework.Widget]),
    [_textStyleFrom]: dart.fnType(text_style.TextStyle, [framework.BuildContext], [core.double]),
    [_calculateOffAxisFraction]: dart.fnType(core.double, [core.double, core.int]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(date_picker._CupertinoTimerPickerState, () => ({
    __proto__: dart.getGetters(date_picker._CupertinoTimerPickerState.__proto__),
    textDirection: ui.TextDirection,
    localizations: localizations.CupertinoLocalizations,
    textDirectionFactor: core.int,
    selectedMinute: core.int,
    numberLabelWidth: core.double,
    numberLabelHeight: core.double,
    numberLabelBaseline: core.double,
    hourLabelWidth: core.double,
    minuteLabelWidth: core.double,
    secondLabelWidth: core.double,
    totalWidth: core.double,
    pickerColumnWidth: core.double
  }));
  dart.setSetterSignature(date_picker._CupertinoTimerPickerState, () => ({
    __proto__: dart.getSetters(date_picker._CupertinoTimerPickerState.__proto__),
    textDirection: ui.TextDirection,
    localizations: localizations.CupertinoLocalizations,
    selectedMinute: core.int,
    numberLabelWidth: core.double,
    numberLabelHeight: core.double,
    numberLabelBaseline: core.double,
    hourLabelWidth: core.double,
    minuteLabelWidth: core.double,
    secondLabelWidth: core.double,
    totalWidth: core.double,
    pickerColumnWidth: core.double
  }));
  dart.setLibraryUri(date_picker._CupertinoTimerPickerState, I[1]);
  dart.setFieldSignature(date_picker._CupertinoTimerPickerState, () => ({
    __proto__: dart.getFields(date_picker._CupertinoTimerPickerState.__proto__),
    [___CupertinoTimerPickerState_textDirection]: dart.fieldType(dart.nullable(ui.TextDirection)),
    [___CupertinoTimerPickerState_textDirection_isSet]: dart.fieldType(core.bool),
    [___CupertinoTimerPickerState_localizations]: dart.fieldType(dart.nullable(localizations.CupertinoLocalizations)),
    [___CupertinoTimerPickerState_localizations_isSet]: dart.fieldType(core.bool),
    selectedHour: dart.fieldType(dart.nullable(core.int)),
    [___CupertinoTimerPickerState_selectedMinute]: dart.fieldType(dart.nullable(core.int)),
    [___CupertinoTimerPickerState_selectedMinute_isSet]: dart.fieldType(core.bool),
    selectedSecond: dart.fieldType(dart.nullable(core.int)),
    lastSelectedHour: dart.fieldType(dart.nullable(core.int)),
    lastSelectedMinute: dart.fieldType(dart.nullable(core.int)),
    lastSelectedSecond: dart.fieldType(dart.nullable(core.int)),
    textPainter: dart.finalFieldType(text_painter.TextPainter),
    numbers: dart.finalFieldType(core.List$(core.String)),
    [___CupertinoTimerPickerState_numberLabelWidth]: dart.fieldType(dart.nullable(core.double)),
    [___CupertinoTimerPickerState_numberLabelWidth_isSet]: dart.fieldType(core.bool),
    [___CupertinoTimerPickerState_numberLabelHeight]: dart.fieldType(dart.nullable(core.double)),
    [___CupertinoTimerPickerState_numberLabelHeight_isSet]: dart.fieldType(core.bool),
    [___CupertinoTimerPickerState_numberLabelBaseline]: dart.fieldType(dart.nullable(core.double)),
    [___CupertinoTimerPickerState_numberLabelBaseline_isSet]: dart.fieldType(core.bool),
    [___CupertinoTimerPickerState_hourLabelWidth]: dart.fieldType(dart.nullable(core.double)),
    [___CupertinoTimerPickerState_hourLabelWidth_isSet]: dart.fieldType(core.bool),
    [___CupertinoTimerPickerState_minuteLabelWidth]: dart.fieldType(dart.nullable(core.double)),
    [___CupertinoTimerPickerState_minuteLabelWidth_isSet]: dart.fieldType(core.bool),
    [___CupertinoTimerPickerState_secondLabelWidth]: dart.fieldType(dart.nullable(core.double)),
    [___CupertinoTimerPickerState_secondLabelWidth_isSet]: dart.fieldType(core.bool),
    [___CupertinoTimerPickerState_totalWidth]: dart.fieldType(dart.nullable(core.double)),
    [___CupertinoTimerPickerState_totalWidth_isSet]: dart.fieldType(core.bool),
    [___CupertinoTimerPickerState_pickerColumnWidth]: dart.fieldType(dart.nullable(core.double)),
    [___CupertinoTimerPickerState_pickerColumnWidth_isSet]: dart.fieldType(core.bool)
  }));
  date_picker._themeTextStyle = function _themeTextStyle(context, opts) {
    if (context == null) dart.nullFailed(I[0], 54, 40, "context");
    let isValid = opts && 'isValid' in opts ? opts.isValid : true;
    if (isValid == null) dart.nullFailed(I[0], 54, 56, "isValid");
    let style = theme.CupertinoTheme.of(context).textTheme.dateTimePickerTextStyle;
    return dart.test(isValid) ? style : style.copyWith({color: colors.CupertinoDynamicColor.resolve(colors.CupertinoColors.inactiveGray, context)});
  };
  date_picker._animateColumnControllerToItem = function _animateColumnControllerToItem(controller, targetItem) {
    if (controller == null) dart.nullFailed(I[0], 59, 65, "controller");
    if (targetItem == null) dart.nullFailed(I[0], 59, 81, "targetItem");
    controller.animateToItem(targetItem, {curve: curves.Curves.easeInOut, duration: C[362] || CT.C362});
  };
  var Widget__location = dart.privateName(framework, "Widget._location");
  var Widget_key = dart.privateName(framework, "Widget.key");
  var Color_value = dart.privateName(ui, "Color.value");
  var CupertinoDynamicColor_darkHighContrastElevatedColor = dart.privateName(colors, "CupertinoDynamicColor.darkHighContrastElevatedColor");
  var CupertinoDynamicColor_highContrastElevatedColor = dart.privateName(colors, "CupertinoDynamicColor.highContrastElevatedColor");
  var CupertinoDynamicColor_darkElevatedColor = dart.privateName(colors, "CupertinoDynamicColor.darkElevatedColor");
  var CupertinoDynamicColor_elevatedColor = dart.privateName(colors, "CupertinoDynamicColor.elevatedColor");
  var CupertinoDynamicColor_darkHighContrastColor = dart.privateName(colors, "CupertinoDynamicColor.darkHighContrastColor");
  var CupertinoDynamicColor_highContrastColor = dart.privateName(colors, "CupertinoDynamicColor.highContrastColor");
  var CupertinoDynamicColor_darkColor = dart.privateName(colors, "CupertinoDynamicColor.darkColor");
  var CupertinoDynamicColor_color = dart.privateName(colors, "CupertinoDynamicColor.color");
  var CupertinoDynamicColor__debugResolveContext = dart.privateName(colors, "CupertinoDynamicColor._debugResolveContext");
  var CupertinoDynamicColor__debugLabel = dart.privateName(colors, "CupertinoDynamicColor._debugLabel");
  var CupertinoDynamicColor__effectiveColor = dart.privateName(colors, "CupertinoDynamicColor._effectiveColor");
  var CupertinoPickerDefaultSelectionOverlay_background = dart.privateName(picker, "CupertinoPickerDefaultSelectionOverlay.background");
  var CupertinoPickerDefaultSelectionOverlay_capRightEdge = dart.privateName(picker, "CupertinoPickerDefaultSelectionOverlay.capRightEdge");
  var CupertinoPickerDefaultSelectionOverlay_capLeftEdge = dart.privateName(picker, "CupertinoPickerDefaultSelectionOverlay.capLeftEdge");
  dart.defineLazy(date_picker, {
    /*date_picker._kItemExtent*/get _kItemExtent() {
      return 32;
    },
    /*date_picker._kPickerWidth*/get _kPickerWidth() {
      return 320;
    },
    /*date_picker._kPickerHeight*/get _kPickerHeight() {
      return 216;
    },
    /*date_picker._kUseMagnifier*/get _kUseMagnifier() {
      return true;
    },
    /*date_picker._kMagnification*/get _kMagnification() {
      return 1.119047619047619;
    },
    /*date_picker._kDatePickerPadSize*/get _kDatePickerPadSize() {
      return 12;
    },
    /*date_picker._kSqueeze*/get _kSqueeze() {
      return 1.25;
    },
    /*date_picker._kDefaultPickerTextStyle*/get _kDefaultPickerTextStyle() {
      return C[363] || CT.C363;
    },
    /*date_picker._kTimerPickerMagnification*/get _kTimerPickerMagnification() {
      return 1.0625;
    },
    /*date_picker._kTimerPickerMinHorizontalPadding*/get _kTimerPickerMinHorizontalPadding() {
      return 30;
    },
    /*date_picker._kTimerPickerHalfColumnPadding*/get _kTimerPickerHalfColumnPadding() {
      return 4;
    },
    /*date_picker._kTimerPickerLabelPadSize*/get _kTimerPickerLabelPadSize() {
      return 6;
    },
    /*date_picker._kTimerPickerLabelFontSize*/get _kTimerPickerLabelFontSize() {
      return 17;
    },
    /*date_picker._kTimerPickerColumnIntrinsicWidth*/get _kTimerPickerColumnIntrinsicWidth() {
      return 106;
    },
    /*date_picker._leftSelectionOverlay*/get _leftSelectionOverlay() {
      return C[364] || CT.C364;
    },
    /*date_picker._centerSelectionOverlay*/get _centerSelectionOverlay() {
      return C[373] || CT.C373;
    },
    /*date_picker._rightSelectionOverlay*/get _rightSelectionOverlay() {
      return C[378] || CT.C378;
    }
  }, false);
  dart.trackLibraries("packages/flutter/src/cupertino/date_picker.dart", {
    "package:flutter/src/cupertino/date_picker.dart": date_picker
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["date_picker.dart"],"names":[],"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","file":"../../../../../../../../D:/packages/flutter/src/cupertino/date_picker.dart.lib.js"}');
  // Exports:
  return {
    src__cupertino__date_picker: date_picker
  };
}));

//# sourceMappingURL=date_picker.dart.lib.js.map
