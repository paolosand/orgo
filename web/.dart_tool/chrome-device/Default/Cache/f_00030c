define(['dart_sdk', 'packages/flutter/src/widgets/widget_span.dart', 'packages/trie_router/src/trie_router.dart', 'packages/page_router/src/route_path.dart', 'packages/path/src/path_set.dart', 'packages/page_router/src/route_data.dart', 'packages/flutter/src/foundation/change_notifier.dart'], (function load__packages__page_router__page_router_dart(dart_sdk, packages__flutter__src__widgets__widget_span$46dart, packages__trie_router__src__trie_router$46dart, packages__page_router__src__route_path$46dart, packages__path__src__path_set$46dart, packages__page_router__src__route_data$46dart, packages__flutter__src__foundation__change_notifier$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _interceptors = dart_sdk._interceptors;
  const async = dart_sdk.async;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const navigator = packages__flutter__src__widgets__widget_span$46dart.src__widgets__navigator;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const router = packages__flutter__src__widgets__widget_span$46dart.src__widgets__router;
  const trie_router = packages__trie_router__src__trie_router$46dart.src__trie_router;
  const route_path = packages__page_router__src__route_path$46dart.src__route_path;
  const path = packages__path__src__path_set$46dart.path;
  const route_data = packages__page_router__src__route_data$46dart.src__route_data;
  const change_notifier = packages__flutter__src__foundation__change_notifier$46dart.src__foundation__change_notifier;
  var page_router = Object.create(dart.library);
  var $keys = dartx.keys;
  var $_get = dartx._get;
  var $last = dartx.last;
  var $add = dartx.add;
  var $removeLast = dartx.removeLast;
  var $clear = dartx.clear;
  var $addAll = dartx.addAll;
  var $map = dartx.map;
  dart._checkModuleNullSafetyMode(false);
  var T = {
    PageRouterL: () => (T.PageRouterL = dart.constFn(dart.legacy(page_router.PageRouter)))(),
    RoutePathL: () => (T.RoutePathL = dart.constFn(dart.legacy(route_path.RoutePath)))(),
    TrieRouterOfRoutePathL: () => (T.TrieRouterOfRoutePathL = dart.constFn(trie_router.TrieRouter$(T.RoutePathL())))(),
    StringL: () => (T.StringL = dart.constFn(dart.legacy(core.String)))(),
    JSArrayOfStringL: () => (T.JSArrayOfStringL = dart.constFn(_interceptors.JSArray$(T.StringL())))(),
    NavigatorStateL: () => (T.NavigatorStateL = dart.constFn(dart.legacy(navigator.NavigatorState)))(),
    GlobalKeyOfNavigatorStateL: () => (T.GlobalKeyOfNavigatorStateL = dart.constFn(framework.GlobalKey$(T.NavigatorStateL())))(),
    boolL: () => (T.boolL = dart.constFn(dart.legacy(core.bool)))(),
    PageL: () => (T.PageL = dart.constFn(dart.legacy(navigator.Page)))(),
    ListOfPageL: () => (T.ListOfPageL = dart.constFn(core.List$(T.PageL())))(),
    StringLToPageL: () => (T.StringLToPageL = dart.constFn(dart.fnType(T.PageL(), [T.StringL()])))(),
    RouteL: () => (T.RouteL = dart.constFn(dart.legacy(navigator.Route)))(),
    RouteLAnddynamicToboolL: () => (T.RouteLAnddynamicToboolL = dart.constFn(dart.fnType(T.boolL(), [T.RouteL(), dart.dynamic])))(),
    _LocationL: () => (T._LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))(),
    RouteDataL: () => (T.RouteDataL = dart.constFn(dart.legacy(route_data.RouteData)))()
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T);
  var S = {
    _: () => S
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C2() {
      return C[2] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 148,
        [_Location_file]: null
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pages",
        [_Location_column]: 7,
        [_Location_line]: 149,
        [_Location_file]: null
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPopPage",
        [_Location_column]: 7,
        [_Location_line]: 156,
        [_Location_file]: null
      });
    },
    get C1() {
      return C[1] = dart.constList([C[2] || CT.C2, C[3] || CT.C3, C[4] || CT.C4], T._LocationL());
    },
    get C0() {
      return C[0] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[1] || CT.C1,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 147,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/page_router-0.0.3/lib/page_router.dart"
      });
    }
  }, false);
  var C = Array(5).fill(void 0);
  var I = ["package:page_router/page_router.dart"];
  var data$ = dart.privateName(page_router, "PageRouter.data");
  page_router.PageRouter = class PageRouter extends framework.InheritedWidget {
    get data() {
      return this[data$];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      return context.dependOnInheritedWidgetOfExactType(T.PageRouterL());
    }
    pushNamed(routeName) {
      this.data.pushNamed(routeName);
    }
    replaceNamed(routeName) {
      this.data.replaceNamed(routeName);
    }
    replaceAllNamed(routeNames) {
      this.data.replaceAllNamed(routeNames);
    }
    pop() {
      this.data.pop();
    }
    updateShouldNotify(old) {
      T.PageRouterL().as(old);
      return !dart.equals(this.data, old.data);
    }
  };
  (page_router.PageRouter.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[data$] = data;
    page_router.PageRouter.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = page_router.PageRouter.prototype;
  dart.addTypeTests(page_router.PageRouter);
  dart.addTypeCaches(page_router.PageRouter);
  dart.setMethodSignature(page_router.PageRouter, () => ({
    __proto__: dart.getMethods(page_router.PageRouter.__proto__),
    pushNamed: dart.fnType(dart.void, [dart.legacy(core.String)]),
    replaceNamed: dart.fnType(dart.void, [dart.legacy(core.String)]),
    replaceAllNamed: dart.fnType(dart.void, [dart.legacy(core.List$(dart.legacy(core.String)))]),
    pop: dart.fnType(dart.void, []),
    updateShouldNotify: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(page_router.PageRouter, I[0]);
  dart.setFieldSignature(page_router.PageRouter, () => ({
    __proto__: dart.getFields(page_router.PageRouter.__proto__),
    data: dart.finalFieldType(dart.legacy(page_router.PageRouterData))
  }));
  var routerDelegate = dart.privateName(page_router, "PageRouterData.routerDelegate");
  var informationParser = dart.privateName(page_router, "PageRouterData.informationParser");
  page_router.PageRouterData = class PageRouterData extends core.Object {
    get routerDelegate() {
      return this[routerDelegate];
    }
    set routerDelegate(value) {
      super.routerDelegate = value;
    }
    get informationParser() {
      return this[informationParser];
    }
    set informationParser(value) {
      super.informationParser = value;
    }
    static new(routes) {
      return new page_router.PageRouterData.__(page_router.PageRouterData._createTrieRouter(routes));
    }
    static _createTrieRouter(routes) {
      let trie = new (T.TrieRouterOfRoutePathL()).new();
      for (let key of routes[$keys]) {
        trie.add(path.split(key), routes[$_get](key));
      }
      return trie;
    }
    pushNamed(routeName) {
      this.routerDelegate.pushNamed(routeName);
    }
    replaceNamed(routeName) {
      this.routerDelegate.replaceNamed(routeName);
    }
    replaceAllNamed(routeNames) {
      this.routerDelegate.replaceAllNamed(routeNames);
    }
    pop() {
      this.routerDelegate.pop();
    }
  };
  (page_router.PageRouterData.__ = function(trieRouter) {
    this[routerDelegate] = new page_router.PageRouterDelegate.new(trieRouter);
    this[informationParser] = new page_router.PageRouterInformationParser.new(trieRouter);
    ;
  }).prototype = page_router.PageRouterData.prototype;
  dart.addTypeTests(page_router.PageRouterData);
  dart.addTypeCaches(page_router.PageRouterData);
  dart.setMethodSignature(page_router.PageRouterData, () => ({
    __proto__: dart.getMethods(page_router.PageRouterData.__proto__),
    pushNamed: dart.fnType(dart.void, [dart.legacy(core.String)]),
    replaceNamed: dart.fnType(dart.void, [dart.legacy(core.String)]),
    replaceAllNamed: dart.fnType(dart.void, [dart.legacy(core.List$(dart.legacy(core.String)))]),
    pop: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(page_router.PageRouterData, I[0]);
  dart.setFieldSignature(page_router.PageRouterData, () => ({
    __proto__: dart.getFields(page_router.PageRouterData.__proto__),
    routerDelegate: dart.finalFieldType(dart.legacy(page_router.PageRouterDelegate)),
    informationParser: dart.finalFieldType(dart.legacy(page_router.PageRouterInformationParser))
  }));
  var trie$ = dart.privateName(page_router, "PageRouterDelegate.trie");
  var navigatorKey = dart.privateName(page_router, "PageRouterDelegate.navigatorKey");
  var _routeStack = dart.privateName(page_router, "_routeStack");
  var _validate = dart.privateName(page_router, "_validate");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  const RouterDelegate_ChangeNotifier$36 = class RouterDelegate_ChangeNotifier extends router.RouterDelegate$(dart.legacy(route_data.RouteData)) {};
  (RouterDelegate_ChangeNotifier$36.new = function() {
    change_notifier.ChangeNotifier.new.call(this);
    RouterDelegate_ChangeNotifier$36.__proto__.new.call(this);
  }).prototype = RouterDelegate_ChangeNotifier$36.prototype;
  dart.applyMixin(RouterDelegate_ChangeNotifier$36, change_notifier.ChangeNotifier);
  const RouterDelegate_PopNavigatorRouterDelegateMixin$36 = class RouterDelegate_PopNavigatorRouterDelegateMixin extends RouterDelegate_ChangeNotifier$36 {};
  (RouterDelegate_PopNavigatorRouterDelegateMixin$36.new = function() {
    RouterDelegate_PopNavigatorRouterDelegateMixin$36.__proto__.new.call(this);
  }).prototype = RouterDelegate_PopNavigatorRouterDelegateMixin$36.prototype;
  dart.applyMixin(RouterDelegate_PopNavigatorRouterDelegateMixin$36, router.PopNavigatorRouterDelegateMixin$(dart.legacy(route_data.RouteData)));
  page_router.PageRouterDelegate = class PageRouterDelegate extends RouterDelegate_PopNavigatorRouterDelegateMixin$36 {
    get trie() {
      return this[trie$];
    }
    set trie(value) {
      super.trie = value;
    }
    get navigatorKey() {
      return this[navigatorKey];
    }
    set navigatorKey(value) {
      super.navigatorKey = value;
    }
    get currentConfiguration() {
      return new route_data.RouteData.new(this[_routeStack][$last]);
    }
    pushNamed(name) {
      return async.async(dart.dynamic, (function* pushNamed() {
        if (!dart.test(yield this[_validate](name))) {
          return;
        }
        this[_routeStack][$add](name);
        this.notifyListeners();
      }).bind(this));
    }
    replaceNamed(name) {
      return async.async(dart.dynamic, (function* replaceNamed() {
        if (!dart.test(yield this[_validate](name))) {
          return;
        }
        this[_routeStack][$removeLast]();
        this[_routeStack][$add](name);
        this.notifyListeners();
      }).bind(this));
    }
    replaceAllNamed(routeNames) {
      return async.async(dart.dynamic, (function* replaceAllNamed() {
        for (let name of routeNames) {
          if (!dart.test(yield this[_validate](name))) {
            return;
          }
        }
        this[_routeStack][$clear]();
        this[_routeStack][$addAll](routeNames);
        this.notifyListeners();
      }).bind(this));
    }
    pop() {
      return async.async(dart.dynamic, (function* pop() {
        if (!dart.test(yield this[_validate](this[_routeStack][$last]))) {
          return;
        }
        this[_routeStack][$removeLast]();
        this.notifyListeners();
      }).bind(this));
    }
    [_validate](routeName) {
      return async.async(T.boolL(), (function* _validate() {
        let t1, t0;
        let trieData = this.trie.get(path.split(routeName));
        if (trieData == null) {
          return false;
        }
        let routePath = trieData.value;
        if (routePath.validator == null) {
          return true;
        }
        return yield (t0 = routePath, t1 = trieData.parameters, t0.validator(t1));
      }).bind(this));
    }
    build(context) {
      return new navigator.Navigator.new({key: this.navigatorKey, pages: (() => {
          let t0 = T.ListOfPageL().of(this[_routeStack][$map](T.PageL(), dart.fn(routeName => {
            let t3, t2, t1;
            let trieData = this.trie.get(path.split(routeName));
            let routePath = trieData.value;
            t1 = routePath;
            t2 = context;
            t3 = trieData.parameters;
            return t1.builder(t2, t3);
          }, T.StringLToPageL())));
          return t0;
        })(), onPopPage: dart.fn((route, result) => {
          if (!dart.test(route.didPop(result))) {
            return false;
          }
          this[_routeStack][$removeLast]();
          this.notifyListeners();
          return true;
        }, T.RouteLAnddynamicToboolL()), $creationLocationd_0dea112b090073317d4: C[0] || CT.C0});
    }
    setNewRoutePath(configuration) {
      T.RouteDataL().as(configuration);
      return async.async(dart.void, (function* setNewRoutePath() {
        let t1;
        if (!dart.test(yield this[_validate](configuration.routeString))) {
          return;
        }
        t1 = this[_routeStack];
        (() => {
          t1[$clear]();
          t1[$add](configuration.routeString);
          return t1;
        })();
        this.notifyListeners();
      }).bind(this));
    }
  };
  (page_router.PageRouterDelegate.new = function(trie) {
    this[_routeStack] = T.JSArrayOfStringL().of(["/"]);
    this[trie$] = trie;
    this[navigatorKey] = T.GlobalKeyOfNavigatorStateL().new();
    page_router.PageRouterDelegate.__proto__.new.call(this);
    ;
  }).prototype = page_router.PageRouterDelegate.prototype;
  dart.addTypeTests(page_router.PageRouterDelegate);
  dart.addTypeCaches(page_router.PageRouterDelegate);
  dart.setMethodSignature(page_router.PageRouterDelegate, () => ({
    __proto__: dart.getMethods(page_router.PageRouterDelegate.__proto__),
    pushNamed: dart.fnType(dart.legacy(async.Future), [dart.legacy(core.String)]),
    replaceNamed: dart.fnType(dart.legacy(async.Future), [dart.legacy(core.String)]),
    replaceAllNamed: dart.fnType(dart.legacy(async.Future), [dart.legacy(core.List$(dart.legacy(core.String)))]),
    pop: dart.fnType(dart.legacy(async.Future), []),
    [_validate]: dart.fnType(dart.legacy(async.Future$(dart.legacy(core.bool))), [dart.legacy(core.String)]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)]),
    setNewRoutePath: dart.fnType(dart.legacy(async.Future$(dart.void)), [dart.legacy(core.Object)])
  }));
  dart.setGetterSignature(page_router.PageRouterDelegate, () => ({
    __proto__: dart.getGetters(page_router.PageRouterDelegate.__proto__),
    currentConfiguration: dart.legacy(route_data.RouteData)
  }));
  dart.setLibraryUri(page_router.PageRouterDelegate, I[0]);
  dart.setFieldSignature(page_router.PageRouterDelegate, () => ({
    __proto__: dart.getFields(page_router.PageRouterDelegate.__proto__),
    trie: dart.finalFieldType(dart.legacy(trie_router.TrieRouter$(dart.legacy(route_path.RoutePath)))),
    navigatorKey: dart.finalFieldType(dart.legacy(framework.GlobalKey$(dart.legacy(navigator.NavigatorState)))),
    [_routeStack]: dart.fieldType(dart.legacy(core.List$(dart.legacy(core.String))))
  }));
  var trie$0 = dart.privateName(page_router, "PageRouterInformationParser.trie");
  page_router.PageRouterInformationParser = class PageRouterInformationParser extends router.RouteInformationParser$(dart.legacy(route_data.RouteData)) {
    get trie() {
      return this[trie$0];
    }
    set trie(value) {
      super.trie = value;
    }
    parseRouteInformation(routeInformation) {
      return async.async(T.RouteDataL(), function* parseRouteInformation() {
        return new route_data.RouteData.new(routeInformation.location);
      });
    }
    restoreRouteInformation(data) {
      T.RouteDataL().as(data);
      return new router.RouteInformation.new({location: data.routeString});
    }
  };
  (page_router.PageRouterInformationParser.new = function(trie) {
    this[trie$0] = trie;
    page_router.PageRouterInformationParser.__proto__.new.call(this);
    ;
  }).prototype = page_router.PageRouterInformationParser.prototype;
  dart.addTypeTests(page_router.PageRouterInformationParser);
  dart.addTypeCaches(page_router.PageRouterInformationParser);
  dart.setMethodSignature(page_router.PageRouterInformationParser, () => ({
    __proto__: dart.getMethods(page_router.PageRouterInformationParser.__proto__),
    parseRouteInformation: dart.fnType(dart.legacy(async.Future$(dart.legacy(route_data.RouteData))), [dart.legacy(router.RouteInformation)]),
    restoreRouteInformation: dart.fnType(dart.legacy(router.RouteInformation), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(page_router.PageRouterInformationParser, I[0]);
  dart.setFieldSignature(page_router.PageRouterInformationParser, () => ({
    __proto__: dart.getFields(page_router.PageRouterInformationParser.__proto__),
    trie: dart.finalFieldType(dart.legacy(trie_router.TrieRouter))
  }));
  dart.trackLibraries("packages/page_router/page_router.dart", {
    "package:page_router/page_router.dart": page_router
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["page_router.dart"],"names":[],"mappings":"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","file":"../../../../../../../../D:/packages/page_router/page_router.dart.lib.js"}');
  // Exports:
  return {
    page_router: page_router
  };
}));

//# sourceMappingURL=page_router.dart.lib.js.map
